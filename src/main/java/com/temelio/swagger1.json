{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Temelio"
  },
  "host": "app-dev.trytemelio.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Admin Email"
    },
    {
      "name": "Admin"
    },
    {
      "name": "Aggregate Data"
    },
    {
      "name": "Foundation Board Books"
    },
    {
      "name": "Foundation Data"
    },
    {
      "name": "Foundation Documents"
    },
    {
      "name": "Foundation Docusign"
    },
    {
      "name": "Donor"
    },
    {
      "name": "Foundation Eligibility Forms"
    },
    {
      "name": "External Reviewers"
    },
    {
      "name": "File"
    },
    {
      "name": "Foundation File"
    },
    {
      "name": "Nonprofit File"
    },
    {
      "name": "Filter"
    },
    {
      "name": "Form"
    },
    {
      "name": "Foundation"
    },
    {
      "name": "Foundation Nonprofit Interaction"
    },
    {
      "name": "Foundation Long Running Tasks"
    },
    {
      "name": "Gotenberg"
    },
    {
      "name": "Foundation Grants"
    },
    {
      "name": "Nonprofit Grants"
    },
    {
      "name": "Liveness"
    },
    {
      "name": "MailChimp"
    },
    {
      "name": "Nonprofit"
    },
    {
      "name": "Foundation Notifications"
    },
    {
      "name": "Nonprofit Notifications"
    },
    {
      "name": "Foundation Nylas"
    },
    {
      "name": "Ofac"
    },
    {
      "name": "Nonprofit Plaid login"
    },
    {
      "name": "Foundation Quickbooks"
    },
    {
      "name": "Referee Endpoint"
    },
    {
      "name": "Foundation Report"
    },
    {
      "name": "Communication"
    },
    {
      "name": "Reviewer"
    },
    {
      "name": "Foundation Salesforce"
    },
    {
      "name": "Foundation Search"
    },
    {
      "name": "Foundation Tasks"
    },
    {
      "name": "Nonprofit Tasks"
    },
    {
      "name": "User"
    },
    {
      "name": "Nonprofit V2"
    },
    {
      "name": "Nonprofit Metadata V2"
    },
    {
      "name": "Nonprofit User V2"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/admin/email/reminders/generate": {
      "post": {
        "tags": ["Admin Email"],
        "summary": "Generate email reminders",
        "description": "",
        "operationId": "generateEmailReminders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/email/reminders/send": {
      "post": {
        "tags": ["Admin Email"],
        "summary": "Send email reminders",
        "description": "",
        "operationId": "sendEmailReminders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/email/newUserFoundation/{id}": {
      "post": {
        "tags": ["Admin Email"],
        "summary": "Send new user for foundation email",
        "description": "",
        "operationId": "sendNewUserForFoundationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit": {
      "get": {
        "tags": ["Admin"],
        "summary": "Return all nonprofits on platform",
        "description": "",
        "operationId": "getAllNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nonprofit"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Bulk create or update nonprofits",
        "description": "",
        "operationId": "createNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationNonprofitCreateRequest"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit/{id}/metadata": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get specific nonprofit metadata",
        "description": "",
        "operationId": "getNonprofitMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation": {
      "get": {
        "tags": ["Admin"],
        "summary": "Return all foundations on platform",
        "description": "",
        "operationId": "getAllFoundations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foundation"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Create a new foundation",
        "description": "",
        "operationId": "createFoundation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Foundation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Foundation"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/user": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all users",
        "description": "",
        "operationId": "getAllUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Create or update user",
        "description": "",
        "operationId": "createUserFromAdmin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateAppUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/user/foundation": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all user roles in foundation",
        "description": "",
        "operationId": "getAllUserFoundationRoles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserFoundationRole"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Add user to foundation with role",
        "description": "",
        "operationId": "updateUserRoleToFoundation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserFoundationRole"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Remove user from foundation",
        "description": "",
        "operationId": "deleteUserFoundationRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserFoundationRole"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/user/nonprofit": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all user roles in nonprofit",
        "description": "",
        "operationId": "getAllUserNonprofitRoles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserNonprofitRole"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Add user to nonprofit with role",
        "description": "",
        "operationId": "updateUserRoleToNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserNonprofitRole"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Remove user from nonprofit",
        "description": "",
        "operationId": "deleteUserNonprofitRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserNonprofitRole"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{id}/nonprofit/{nonprofitId}/emailsync": {
      "post": {
        "tags": ["Admin"],
        "summary": "Perform nylas email sync for foundation and nonprofit",
        "description": "",
        "operationId": "nylasEmailSyncFoundationWithNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NylasSyncRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/interaction": {
      "post": {
        "tags": ["Admin"],
        "summary": "Bulk add nonprofits to foundation",
        "description": "",
        "operationId": "addFoundationInteractions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationNonprofitInteraction"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{id}/metadata": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update foundation metadata, ignoring stage changes",
        "description": "",
        "operationId": "adminUpdateFoundationMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit/metadata/irs": {
      "post": {
        "tags": ["Admin"],
        "summary": "Bulk update nonprofit irs metadata",
        "description": "",
        "operationId": "bulkUpdateNonprofitIRSMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitIRSUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit/metadata": {
      "post": {
        "tags": ["Admin"],
        "summary": "Bulk update nonprofit metadata",
        "description": "",
        "operationId": "bulkUpdateNonprofitMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitMetadata"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/cache": {
      "post": {
        "tags": ["Admin"],
        "summary": "Clear foundation cache",
        "description": "",
        "operationId": "clearFoundationCache",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/user/cache": {
      "post": {
        "tags": ["Admin"],
        "summary": "Clear user cache",
        "description": "",
        "operationId": "clearUserCache",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/responses/pdf": {
      "post": {
        "tags": ["Admin"],
        "summary": "Convert form responses to PDF",
        "description": "",
        "operationId": "convertResponsesToPDF",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FormPDFResponseData"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/docusignenveloperefresh": {
      "get": {
        "tags": ["Admin"],
        "summary": "Perform docusign envelope refresh for all envelopes",
        "description": "",
        "operationId": "docusignEnvelopeRefresh",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/docusigntokenrefresh": {
      "get": {
        "tags": ["Admin"],
        "summary": "Perform docusign refresh token for users within one or all foundations",
        "description": "",
        "operationId": "docusignFoundationRefresh",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/fiscalyear/sync": {
      "get": {
        "tags": ["Admin"],
        "summary": "Perform fiscal year sync for specified foundation or all",
        "description": "",
        "operationId": "fiscalYearSync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/interaction/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all nonprofits in foundation",
        "description": "",
        "operationId": "getAllInteractions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationNonprofitInteraction"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/notification": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get disabled foundation notifications",
        "description": "",
        "operationId": "getDisabledFoundationNotifications",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "uniqueItems": true
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{foundationId}/user/{userId}/settings": {
      "get": {
        "tags": ["Admin"],
        "summary": "Update foundation user settings",
        "description": "",
        "operationId": "getFoundationUserSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Update foundation user settings",
        "description": "",
        "operationId": "updateFoundationUserSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/search/task/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Index meilisearch results",
        "description": "",
        "operationId": "getIndexTaskInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit/candid": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get specific nonprofit metadata",
        "description": "",
        "operationId": "getNonprofitCandidEINData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ein",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fetchDemographicsOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CandidEntityResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/longrunningtask": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get the number of pending long running tasks",
        "description": "",
        "operationId": "getPendingLongRunningTasks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LongRunningTaskObject"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/search/index": {
      "post": {
        "tags": ["Admin"],
        "summary": "Index meilisearch results",
        "description": "",
        "operationId": "indexSearchResults",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/IndexRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{id}/emailsync": {
      "post": {
        "tags": ["Admin"],
        "summary": "Perform nylas email sync for foundation",
        "description": "",
        "operationId": "nylasEmailSync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NylasSyncRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/emailsync": {
      "post": {
        "tags": ["Admin"],
        "summary": "Perform nylas email sync for all foundations",
        "description": "",
        "operationId": "nylasEmailSyncForAllFoundations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NylasSyncRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/quickbooks/payment/sync": {
      "get": {
        "tags": ["Admin"],
        "summary": "Sync the bills on quickbooks to update the payment data in our system",
        "description": "",
        "operationId": "quickbooksPaymentSync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/quickbooks/sync": {
      "get": {
        "tags": ["Admin"],
        "summary": "Perform quickbooks sync for specified foundation or all",
        "description": "",
        "operationId": "quickbooksSync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/field/cache": {
      "post": {
        "tags": ["Admin"],
        "summary": "Clear foundation cache",
        "description": "",
        "operationId": "refreshFoundationFieldsCache",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/salesforce/sync": {
      "get": {
        "tags": ["Admin"],
        "summary": "Perform salesforce sync for specified foundation or all",
        "description": "",
        "operationId": "salesforceSync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{id}/notification": {
      "post": {
        "tags": ["Admin"],
        "summary": "Enable or disable notifications",
        "description": "",
        "operationId": "setBellNotificationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "disable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/foundation/{id}/index": {
      "post": {
        "tags": ["Admin"],
        "summary": "Enable or disable indexing for foundation",
        "description": "",
        "operationId": "setIndexingOption",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "disable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/nonprofit/candid/sync": {
      "get": {
        "tags": ["Admin"],
        "summary": "Sync all nonprofit candid demographics metadata",
        "description": "",
        "operationId": "syncAllNonprofitCandidDemographicsData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/foundations": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Get foundations to analyze",
        "description": "",
        "operationId": "getFoundations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foundation"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/dashboard": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Get dashboard data for foundations",
        "description": "",
        "operationId": "getAggregateDashboard",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AggregateDashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AggregateDashboardResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/data/search": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Search aggregate data for reporting",
        "description": "",
        "operationId": "searchAggregateData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AggregateDataSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/data/dashboard": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Get data for executive dashboard",
        "description": "",
        "operationId": "getExecutiveDashboardData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AggregateExecDashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/universal/search": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Search entities across foundations",
        "description": "",
        "operationId": "searchAcrossFoundations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AggregateUniversalSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AggregateUniversalSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/aggregate/contacts": {
      "post": {
        "tags": ["Aggregate Data"],
        "summary": "Search contacts across foundations",
        "description": "",
        "operationId": "searchContactsAcrossFoundations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AggregateContactSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AggregateContactResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/proposal": {
      "post": {
        "tags": ["Foundation Board Books"],
        "summary": "Create or update board proposal",
        "description": "",
        "operationId": "createOrUpdateBoardProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BoardGrantProposal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardGrantProposal"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/proposal/{proposalId}": {
      "get": {
        "tags": ["Foundation Board Books"],
        "summary": "Get board proposal",
        "description": "",
        "operationId": "getBoardProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardGrantProposal"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Foundation Board Books"],
        "summary": "Delete board proposal",
        "description": "",
        "operationId": "deleteBoardProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/books": {
      "get": {
        "tags": ["Foundation Board Books"],
        "summary": "Get board books",
        "description": "",
        "operationId": "getBoardBooks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardBook"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Board Books"],
        "summary": "Create or update board book",
        "description": "",
        "operationId": "createOrUpdateBoardBook",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BoardBook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardBook"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/proposals/generate": {
      "post": {
        "tags": ["Foundation Board Books"],
        "summary": "Generate board document proposals",
        "description": "",
        "operationId": "generateBoardProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BoardGeneratorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardGrantProposal"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/books/{bookId}": {
      "get": {
        "tags": ["Foundation Board Books"],
        "summary": "Get specific board book",
        "description": "",
        "operationId": "getSpecificBoardBook",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardBook"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Foundation Board Books"],
        "summary": "Delete board book",
        "description": "",
        "operationId": "deleteBoardBook",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/fields/values": {
      "post": {
        "tags": ["Foundation Board Books"],
        "summary": "Get the possible values for a given list of grant proposals",
        "description": "",
        "operationId": "getBoardPossibleValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardProposalValues"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/board/proposal/search": {
      "post": {
        "tags": ["Foundation Board Books"],
        "summary": "Search board proposals",
        "description": "",
        "operationId": "searchBoardProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BoardProposalSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BoardProposalSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/analytics/fields": {
      "get": {
        "tags": ["Foundation Data"],
        "summary": "Get fields for analytics analysis",
        "description": "",
        "operationId": "getAnalyticsFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnalyticsField"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/data/search": {
      "post": {
        "tags": ["Foundation Data"],
        "summary": "Search data",
        "description": "",
        "operationId": "searchData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/dashboard": {
      "get": {
        "tags": ["Foundation Data"],
        "summary": "Get data for dashboard",
        "description": "",
        "operationId": "getDashboardData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/analytics": {
      "post": {
        "tags": ["Foundation Data"],
        "summary": "Perform analysis",
        "description": "",
        "operationId": "performAnalysis",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnalyticsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/document/template": {
      "get": {
        "tags": ["Foundation Documents"],
        "summary": "Get document template",
        "description": "",
        "operationId": "getDocumentTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentTemplate"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Documents"],
        "summary": "Create document templates",
        "description": "",
        "operationId": "createOrUpdateDocumentTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocumentTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/document/template/{templateId}": {
      "get": {
        "tags": ["Foundation Documents"],
        "summary": "Get specific document template",
        "description": "",
        "operationId": "getSpecificDocumentTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocumentTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Foundation Documents"],
        "summary": "Delete specific document template",
        "description": "",
        "operationId": "deleteSpecificDocumentTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/document/fields": {
      "get": {
        "tags": ["Foundation Documents"],
        "summary": "Get document fields to add to templates",
        "description": "",
        "operationId": "getDocumentFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentItem"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/docusign/callback": {
      "get": {
        "tags": ["Foundation Docusign"],
        "summary": "Callback from docusign that contains a code",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign/accounts": {
      "get": {
        "tags": ["Foundation Docusign"],
        "summary": "Get docusign accounts",
        "description": "",
        "operationId": "getDocusignAccounts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountInfo"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign/{accountId}/envelope": {
      "post": {
        "tags": ["Foundation Docusign"],
        "summary": "Create docusign envelope and return sender url",
        "description": "",
        "operationId": "createEnvelope",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EnvelopeSendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocusignSenderViewResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign": {
      "get": {
        "tags": ["Foundation Docusign"],
        "summary": "Validate access to docusign",
        "description": "",
        "operationId": "hasAccessToDocusign",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign/envelope/{envelopeId}": {
      "get": {
        "tags": ["Foundation Docusign"],
        "summary": "Get docusign envelope",
        "description": "",
        "operationId": "getDocusignEnvelope",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "envelopeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocusignEnvelope"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign/login": {
      "post": {
        "tags": ["Foundation Docusign"],
        "summary": "Login to docusign",
        "description": "",
        "operationId": "loginToDocusign",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocusignLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocusignLoginURL"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/docusign/envelope/{envelopeId}/refresh": {
      "post": {
        "tags": ["Foundation Docusign"],
        "summary": "Refresh docusign envelope",
        "description": "",
        "operationId": "refreshDocusignEnvelope",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "envelopeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DocusignEnvelope"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/activity/{activityId}": {
      "delete": {
        "tags": ["Donor"],
        "summary": "Delete activity",
        "description": "",
        "operationId": "deleteActivity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/activity": {
      "put": {
        "tags": ["Donor"],
        "summary": "Get a single donor entity",
        "description": "",
        "operationId": "upsertActivity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorActivity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorActivity"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}": {
      "get": {
        "tags": ["Donor"],
        "summary": "Get a single donor entity",
        "description": "",
        "operationId": "getDonorEntity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorEntity"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Donor"],
        "summary": "Delete donor entity",
        "description": "",
        "operationId": "deleteDonorEntity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity": {
      "get": {
        "tags": ["Donor"],
        "summary": "Gets every entity",
        "description": "",
        "operationId": "getEntities",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorEntity"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Donor"],
        "summary": "Upsert a donor entity",
        "description": "",
        "operationId": "upsertDonorEntity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorEntity"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/contribution": {
      "get": {
        "tags": ["Donor"],
        "summary": "Get all contributions by donorEntityId or all if none added",
        "description": "",
        "operationId": "getContributions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorContribution"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Donor"],
        "summary": "Upsert a contribution",
        "description": "",
        "operationId": "upsertContribution",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorContribution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorContribution"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/contribution/{donorContributionId}": {
      "delete": {
        "tags": ["Donor"],
        "summary": "Delete a donor contribution with its corresponding comments",
        "description": "",
        "operationId": "deleteContribution",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorContributionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/tag": {
      "get": {
        "tags": ["Donor"],
        "summary": "Get all tags",
        "description": "",
        "operationId": "getAllTags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorTag"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Donor"],
        "summary": "Get all tags",
        "description": "",
        "operationId": "upsertTag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorTag"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/tag/{tagId}": {
      "delete": {
        "tags": ["Donor"],
        "summary": "Delete a tag",
        "description": "",
        "operationId": "deleteTag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/relationship": {
      "put": {
        "tags": ["Donor"],
        "summary": "Upsert a relationship",
        "description": "",
        "operationId": "upsertRelationship",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorRelationship"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorRelationship"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/relationship/{donorRelationshipId}": {
      "delete": {
        "tags": ["Donor"],
        "summary": "Delete a relationship",
        "description": "",
        "operationId": "deleteRelationship",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorRelationshipId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/contribution/{donorContributionId}/comment/{commentId}": {
      "delete": {
        "tags": ["Donor"],
        "summary": "Upsert a contribution comment",
        "description": "",
        "operationId": "upsertContributionComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorContributionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/contribution/{donorContributionId}/comment": {
      "put": {
        "tags": ["Donor"],
        "summary": "Upsert a contribution comment",
        "description": "",
        "operationId": "upsertContributionComment_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorContributionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DonorContributionComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DonorContributionComment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/relationship-type": {
      "get": {
        "tags": ["Donor"],
        "summary": "List of all relationship types",
        "description": "",
        "operationId": "getRelationshipTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorRelationshipType"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Donor"],
        "summary": "Update donor relationship types",
        "description": "",
        "operationId": "updateRelationshipTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorRelationshipType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorRelationshipType"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity/{donorEntityId}/files": {
      "get": {
        "tags": ["Donor"],
        "summary": "Get a single donor entity",
        "description": "",
        "operationId": "getDonorEntityFilesAndFolders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "donorEntityId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "parentFolderId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/entity-type": {
      "get": {
        "tags": ["Donor"],
        "summary": "List of every entity type",
        "description": "",
        "operationId": "getEntityTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorEntityType"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Donor"],
        "summary": "Update entity types for foundation",
        "description": "",
        "operationId": "updateEntityTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorEntityType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DonorEntityType"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/eligibility": {
      "get": {
        "tags": ["Foundation Eligibility Forms"],
        "summary": "Get all eligibility forms",
        "description": "",
        "operationId": "getAllEligibilityForms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EligibilityForm"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Eligibility Forms"],
        "summary": "Create or update eligibility form",
        "description": "",
        "operationId": "createEligibilityForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EligibilityForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniversalForm"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/eligibility/{formId}": {
      "get": {
        "tags": ["Foundation Eligibility Forms"],
        "summary": "Get specific eligibility form",
        "description": "",
        "operationId": "getEligibilityForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EligibilityForm"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Foundation Eligibility Forms"],
        "summary": "Create or update eligibility form",
        "description": "",
        "operationId": "updateEligibilityForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EligibilityForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EligibilityForm"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Foundation Eligibility Forms"],
        "summary": "Delete specific eligibility form",
        "description": "",
        "operationId": "deleteEligibilityForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/externalreviewer/dashboard": {
      "get": {
        "tags": ["External Reviewers"],
        "summary": "Get external reviewer dashboard data",
        "description": "",
        "operationId": "getExternalReviewerDashboard",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalReviewerDashboard"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/externalreviewer/assign": {
      "post": {
        "tags": ["External Reviewers"],
        "summary": "Bulk assign external reviewers",
        "description": "",
        "operationId": "assignExternalReviewers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignExternalReviewerRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/file/{id}": {
      "get": {
        "tags": ["File"],
        "summary": "Download file",
        "description": "",
        "operationId": "getPresignedDownloadUrl",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PresignedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/file": {
      "post": {
        "tags": ["File"],
        "summary": "Upload file",
        "description": "",
        "operationId": "getPresignedUploadUrl",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FileMeta"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PresignedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/file/{foundationId}/path": {
      "get": {
        "tags": ["File"],
        "summary": "Get folder path",
        "description": "",
        "operationId": "getFolderPath",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "folderId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/file/copy": {
      "post": {
        "tags": ["File"],
        "summary": "Bulk copy files and returns their ids",
        "description": "",
        "operationId": "bulkCopyFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileCopyPair"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/file/{fileId}": {
      "get": {
        "tags": ["Foundation File"],
        "summary": "Get file metadata",
        "description": "",
        "operationId": "getFileMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Foundation File"],
        "summary": "Delete files",
        "description": "",
        "operationId": "deleteFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/file/{fileId}/contents": {
      "get": {
        "tags": ["Foundation File"],
        "summary": "Download file contents",
        "description": "",
        "operationId": "getFileContents",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/foundation/{id}/files": {
      "get": {
        "tags": ["Foundation File"],
        "summary": "Get file names",
        "description": "",
        "operationId": "getFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "folderId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/file": {
      "post": {
        "tags": ["Foundation File"],
        "summary": "Upload file",
        "description": "",
        "operationId": "uploadFile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "nonprofitId",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileViewPermission",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["FOUNDATION_ONLY", "ALL"]
          },
          {
            "name": "folderId",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileSourceType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "CRM",
              "GRANT_APPLICATION",
              "GRANT_FORM_PROPOSAL",
              "TASK",
              "SETTINGS"
            ]
          },
          {
            "name": "fileSourceId",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/foundation/{id}/folder": {
      "post": {
        "tags": ["Foundation File"],
        "summary": "Save folder for foundation",
        "description": "",
        "operationId": "uploadFolder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Folder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/file/{fileId}/contents": {
      "get": {
        "tags": ["Nonprofit File"],
        "summary": "Download file contents",
        "description": "",
        "operationId": "getFileContents_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit/{id}/files": {
      "get": {
        "tags": ["Nonprofit File"],
        "summary": "Get files for nonprofit",
        "description": "",
        "operationId": "getFiles_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "folderId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/file": {
      "post": {
        "tags": ["Nonprofit File"],
        "summary": "Upload file",
        "description": "",
        "operationId": "uploadFile_1",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "foundationId",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileViewPermission",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["FOUNDATION_ONLY", "ALL"]
          },
          {
            "name": "folderPath",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileSourceType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "CRM",
              "GRANT_APPLICATION",
              "GRANT_FORM_PROPOSAL",
              "TASK",
              "SETTINGS"
            ]
          },
          {
            "name": "fileSourceId",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit/{id}/file/{fileId}": {
      "get": {
        "tags": ["Nonprofit File"],
        "summary": "Get file metadata",
        "description": "",
        "operationId": "getFileMetadata_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/file/multi": {
      "post": {
        "tags": ["Nonprofit File"],
        "summary": "Get metadata for multiple files",
        "description": "",
        "operationId": "getMultiFileMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/filter": {
      "get": {
        "tags": ["Filter"],
        "operationId": "getFilters",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterView"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Filter"],
        "operationId": "deleteFilter",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/FilterView"
            }
          }
        }
      },
      "patch": {
        "tags": ["Filter"],
        "operationId": "upsertFilter",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/FilterView"
            }
          }
        }
      }
    },
    "/form/eligibility/{id}": {
      "get": {
        "tags": ["Form"],
        "summary": "Get eligibility form",
        "description": "",
        "operationId": "getEligibilityForm_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EligibilityForm"
            }
          }
        }
      }
    },
    "/form/eligibility/{id}/check": {
      "post": {
        "tags": ["Form"],
        "summary": "Check eligibility form responses",
        "description": "",
        "operationId": "checkEligibilityFormResponses",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EligibilityFormResponses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/form/eligibility/{id}/responses": {
      "post": {
        "tags": ["Form"],
        "summary": "Save eligibility form responses and returns whether the check passes or not",
        "description": "",
        "operationId": "saveEligibilityFormResponses",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EligibilityFormResponses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/form/submissions/all": {
      "get": {
        "tags": ["Form"],
        "summary": "Get all submissions for the user",
        "description": "",
        "operationId": "getAllSubmissionsForUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitGrantPair"
              }
            }
          }
        }
      }
    },
    "/form/{id}": {
      "get": {
        "tags": ["Form"],
        "summary": "Get public grant form",
        "description": "",
        "operationId": "getPublicGrantForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantFormProposal"
            }
          }
        }
      }
    },
    "/form/{id}/eligibility": {
      "post": {
        "tags": ["Form"],
        "summary": "Check the eligibility of a form",
        "description": "",
        "operationId": "checkEligibilityOfForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantEligibilityResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "deprecated": true
      }
    },
    "/foundation/{id}": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get foundation",
        "description": "",
        "operationId": "getFoundation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Foundation"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/crm/configuration/default": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get the default CRM property configuration",
        "description": "",
        "operationId": "getDefaultFoundationCRMConfiguration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CRMConfiguration"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofits": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get a foundation's nonprofits and their users",
        "description": "",
        "operationId": "getFoundationNonprofitUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetFoundationNonprofitUsersResponse"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/metadata": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get foundation metadata",
        "description": "",
        "operationId": "getFoundationMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation"],
        "summary": "Update foundation metadata",
        "description": "",
        "operationId": "updateFoundationMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/crm/fields": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get CRM fields in foundation",
        "description": "",
        "operationId": "getFoundationCRMFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationCRMField"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation"],
        "summary": "Update CRM fields in foundation",
        "description": "",
        "operationId": "updateFoundationCRMFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationCRMField"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationCRMField"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/payment/fields": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get payment fields in foundation",
        "description": "",
        "operationId": "getFoundationPaymentFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationPaymentField"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation"],
        "summary": "Update payment fields in foundation",
        "description": "",
        "operationId": "updateFoundationPaymentFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationPaymentField"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationPaymentField"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/settings": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get user foundation settings",
        "description": "",
        "operationId": "getUserFoundationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation"],
        "summary": "Update user foundation settings",
        "description": "",
        "operationId": "updateUserFoundationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserFoundationSettings"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/crm/configuration": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get CRM property fields configuration",
        "description": "",
        "operationId": "getFoundationCRMConfiguration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CRMConfiguration"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/proposals/summary": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get foundation proposals summary",
        "description": "",
        "operationId": "getFoundationProposalsSummary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "assignedToMe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationProposalSummary"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/proposals/all": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get all foundation proposals",
        "description": "",
        "operationId": "getAllFoundationProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "assignedToMe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationProposals"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/proposals/filter/{filterId}": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get filtered foundation proposals",
        "description": "",
        "operationId": "getFilteredFoundationProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "filterId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "assignedToMe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetFilteredProposalsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/proposals/filter/bulk": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Get bulk filtered foundation proposals",
        "description": "",
        "operationId": "getBulkFilteredFoundationProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkFilterProposalsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetFilteredBulkProposalsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/reviewer/task": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Create a task for a reviewer",
        "description": "",
        "operationId": "createReviewerTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateTaskReviewerRequest"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/foundation/{id}/crm/search": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Search nonprofits in foundation",
        "description": "",
        "operationId": "searchNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CRMSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CRMSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/landing": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Public endpoint to get foundation landing page if it exists",
        "description": "",
        "operationId": "getFoundationLandingPage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LandingPage"
            }
          }
        }
      }
    },
    "/foundation/{id}/submissions/exist": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Return whether submissions exist in foundation",
        "description": "",
        "operationId": "submissionsExistInFoundation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/user": {
      "get": {
        "tags": ["Foundation"],
        "summary": "Get all users in foundation, default to active users",
        "description": "",
        "operationId": "getFoundationUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation"],
        "summary": "Create or update foundation user",
        "description": "",
        "operationId": "createFoundationUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationUser"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/user/{userId}": {
      "delete": {
        "tags": ["Foundation"],
        "summary": "Delete user in foundation",
        "description": "",
        "operationId": "deleteUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/contacts": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Get contacts fields and data",
        "description": "",
        "operationId": "getFoundationContacts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CRMSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ContactsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/contacts/update": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Update contacts fields and return the data",
        "description": "",
        "operationId": "searchNonprofitsWithFields",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ContactsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/payment": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Search payments for foundation",
        "description": "",
        "operationId": "searchPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PaymentSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/payment/bank": {
      "post": {
        "tags": ["Foundation"],
        "summary": "Generate joined payment bank details for nonprofits",
        "description": "",
        "operationId": "generatePaymentBankDetails",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BankInfoDownloadRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit": {
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Create nonprofit for foundation",
        "description": "",
        "operationId": "createFoundationNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitCreateRequest"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/merge": {
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Merge nonprofits together foundation",
        "description": "",
        "operationId": "mergeNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitMergeRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/submission": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit grant submissions with foundation",
        "description": "",
        "operationId": "getAllGrantSubmissionsForNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantProposalSubmission"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/submission/summary": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit grant summary with foundation",
        "description": "",
        "operationId": "getGrantSummaryForNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitGrantSummary"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/payment": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get foundation payments to nonprofit",
        "description": "",
        "operationId": "getFoundationPaymentsToNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantPayment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Add or update foundation payment to nonprofit",
        "description": "",
        "operationId": "addOrUpdateFoundationPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantPayment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/payment/summary": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get foundation payment summary to nonprofit grouped by submission",
        "description": "",
        "operationId": "getFoundationPaymentHistoryToNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationNonprofitPaymentSummary"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/payment/{paymentId}": {
      "delete": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Delete foundation payment to nonprofit",
        "description": "",
        "operationId": "deleteFoundationPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/payment/details": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit payment details for foundation",
        "description": "",
        "operationId": "getFoundationNonprofitPaymentDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NumbersACH"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/metadata/refresh": {
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Refresh any external data for nonprofit",
        "description": "",
        "operationId": "refreshFoundationNonprofitData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/candid": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit data from candid for foundation",
        "description": "",
        "operationId": "getNonprofitCandidData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fetchDemographicsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CandidEntityResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/metadata": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit metadata for foundation",
        "description": "",
        "operationId": "getFoundationNonprofitMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Update nonprofit metadata globally for foundation",
        "description": "",
        "operationId": "updateNonprofitMetadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitMetadata"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/metadata/user": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get users in nonprofit for foundation",
        "description": "",
        "operationId": "getUsersInNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Update nonprofit users globally for foundation",
        "description": "",
        "operationId": "updateNonprofitUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkNonprofitUserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/note": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get foundation internal notes for nonprofit",
        "description": "",
        "operationId": "getFoundationNonprofitCRMNotes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FoundationNotes"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Create foundation internal note for nonprofit",
        "description": "",
        "operationId": "createFoundationNonprofitCRMNotes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNotes"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/candid/populate": {
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Populate missing nonprofit data from candid for foundation",
        "description": "",
        "operationId": "populateNonprofitDataFromCandid",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/quickbooks/details": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get foundation quickbook details on nonprofit",
        "description": "",
        "operationId": "getFoundationNonprofitQuickbooksDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QuickbooksNonprofitDetails"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/payment/details/full": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit full payment details for foundation",
        "description": "",
        "operationId": "getFullFoundationNonprofitPaymentDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BankAccountDetail"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/metadata/user/{userId}/resend": {
      "post": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Resend invite to nonprofit user",
        "description": "",
        "operationId": "resendInviteToNonprofitUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/note/{noteId}": {
      "delete": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Remove foundation internal note for nonprofit",
        "description": "",
        "operationId": "deleteFoundationNonprofitCRMNotes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/activity": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Return nonprofit activity for foundation",
        "description": "",
        "operationId": "getFoundationNonprofitActivity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationNonprofitActivity"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/email": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get Temelio system emails for foundation and nonprofit",
        "description": "",
        "operationId": "getTemelioSystemEmailsResponse",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostmarkOutboundSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/email/{messageId}": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get specific Temelio email message for foundation and nonprofit",
        "description": "",
        "operationId": "getTemelioEmailMessage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostmarkMessage"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/document": {
      "get": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Get nonprofit documents for foundation",
        "description": "",
        "operationId": "getNonprofitDocuments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/{nonprofitId}/file/{fileId}": {
      "delete": {
        "tags": ["Foundation Nonprofit Interaction"],
        "summary": "Delete file for foundation for nonprofit",
        "description": "",
        "operationId": "deleteFoundationFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/longrunningtask/{taskId}": {
      "get": {
        "tags": ["Foundation Long Running Tasks"],
        "summary": "Get long running task id for foundation",
        "description": "",
        "operationId": "getLongRunningTaskId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LongRunningTaskObject"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/preview/html": {
      "post": {
        "tags": ["Gotenberg"],
        "operationId": "getPdf",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HTMLRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/preview": {
      "get": {
        "tags": ["Gotenberg"],
        "operationId": "getPdf_1",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/preview/{id}/html": {
      "post": {
        "tags": ["Gotenberg"],
        "operationId": "getSubmissionPdfs",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmissionRequest"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/foundation/{id}/grant/template": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all grant templates for foundation",
        "description": "",
        "operationId": "getTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantTemplate"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Create or update grant template for foundation",
        "description": "",
        "operationId": "createOrUpdateTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/template/{templateId}": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get specific grant template for foundation",
        "description": "",
        "operationId": "getTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/bulk/actions": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Perform a set of bulk actions on grant submissions",
        "description": "",
        "operationId": "bulkPerformActionsOnGrantSubmissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/search": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Search grant form submissions in foundation",
        "description": "",
        "operationId": "getGrantProposalSubmissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantSubmissionSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantSubmissionSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/comment": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all comments for a grant submission",
        "description": "",
        "operationId": "getGrantSubmissionComments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmissionComment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Create or update a comment for a grant submission",
        "description": "",
        "operationId": "addOrUpdateGrantSubmissionComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SubmissionComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubmissionComment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/comment/{commentId}": {
      "delete": {
        "tags": ["Foundation Grants"],
        "summary": "Delete comment for a grant submission",
        "description": "",
        "operationId": "deleteGrantSubmissionComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/status": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all grant submission status changes",
        "description": "",
        "operationId": "getGrantSubmissionStatusChanges",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantSubmissionStatusChange"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Update grant submission status",
        "description": "",
        "operationId": "updateGrantSubmissionStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantSubmissionStatusChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantSubmissionStatusChange"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/review": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get task review scores for submission",
        "description": "",
        "operationId": "getReviewScoresForSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReviewScores"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form/{formProposalId}/submission": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all grant submissions for a form",
        "description": "",
        "operationId": "getGrantSubmissionsForFormProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formProposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantProposalSubmission"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Create a grant submission for a form",
        "description": "",
        "operationId": "submitGrantProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formProposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/download": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Download latest grant submission response for form",
        "description": "",
        "operationId": "downloadLatestGrantProposalSubmission",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          },
          {
            "name": "inlineImages",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/bulk/download": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Download a zip file of all the submissions with the associated files",
        "description": "",
        "operationId": "bulkDownloadSubmissions",
        "consumes": ["application/json"],
        "produces": ["application/zip"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkDownloadRequest"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/bulk": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Bulk update grant submissions",
        "description": "",
        "operationId": "bulkUpdateGrantSubmissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantProposalSubmission"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantProposalSubmission"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/bulk/v2": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Bulk update grant submissions",
        "description": "",
        "operationId": "bulkUpdateGrantSubmissionsV2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantProposalSubmission"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all grant forms in foundation",
        "description": "",
        "operationId": "getGrantFormProposals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantFormProposal"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Create or update a grant form in foundation",
        "description": "",
        "operationId": "createOrUpdateGrantFormProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantFormProposal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantFormProposal"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/delete": {
      "delete": {
        "tags": ["Foundation Grants"],
        "summary": "Delete the grant submission and all related details",
        "description": "",
        "operationId": "deleteGrantProposalSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/download/files": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all the files for the latest grant submission response for form",
        "description": "",
        "operationId": "downloadLatestGrantProposalSubmissionFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PresignedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form/all": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get all grant and eligibility forms in foundation",
        "description": "",
        "operationId": "getAllForms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UniversalForm"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form/{formProposalId}": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get a specific grant form in foundation",
        "description": "",
        "operationId": "getGrantFormProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formProposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantFormProposal"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form/{formProposalId}/pdf": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get a specific grant form pdf in foundation",
        "description": "",
        "operationId": "getGrantFormProposalPDF",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formProposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/history": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get history of submission status or form changes",
        "description": "",
        "operationId": "getGrantSubmissionHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantSubmissionChange"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get latest grant submission response for form",
        "description": "",
        "operationId": "getLatestGrantProposalSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/referee": {
      "get": {
        "tags": ["Foundation Grants"],
        "summary": "Get referee tasks for submission",
        "description": "",
        "operationId": "getRefereeTasksForSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/review/tasks": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Get internal and external review task ids for grant submissions",
        "description": "",
        "operationId": "getReviewTaskIdsForSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmissionTasks"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/form/{formProposalId}/submission/manual": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Create a manual grant submission for a form with corresponding details",
        "description": "",
        "operationId": "logManualGrantSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formProposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManualGrantLog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/grant/submission/{submissionId}/send": {
      "post": {
        "tags": ["Foundation Grants"],
        "summary": "Send/Resend a request to complete grant proposal",
        "description": "",
        "operationId": "sendRequestToCompleteGrantProposal",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmissionReminder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/referee": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Get referee tasks for submission",
        "description": "",
        "operationId": "getRefereeTasksStatusForSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitGrantRefereeStatus"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Grants"],
        "summary": "Save referee info for a grant submission",
        "description": "",
        "operationId": "createOrUpdateRefereeInfoGrantSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantRefereeInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GrantRefereeInfo"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/comment": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Get all external comments for a grant submission",
        "description": "",
        "operationId": "getNonprofitGrantSubmissionComments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmissionComment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Grants"],
        "summary": "Add or update an external comment for a grant submission",
        "description": "",
        "operationId": "addOrUpdateGrantSubmissionCommentForNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SubmissionComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubmissionComment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Get all grant form submissions in nonprofit",
        "description": "",
        "operationId": "getNonprofitGrantSubmissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitGrantSubmission"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Grants"],
        "summary": "Create a grant submission for form",
        "description": "",
        "operationId": "submitGrantProposal_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GrantProposalSubmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitGrantSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/download": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Download grant form submission for nonprofit",
        "description": "",
        "operationId": "getNonprofitGrantSubmission",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "merged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Get a specific grant form submission in nonprofit",
        "description": "",
        "operationId": "getNonprofitGrantSubmission_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitGrantSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/suggestions": {
      "post": {
        "tags": ["Nonprofit Grants"],
        "summary": "Generate suggested responses for the submission",
        "description": "",
        "operationId": "generateSubmissionSuggestedResponses",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuggestedResponsesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SubmissionSuggestionResponses"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/download/files": {
      "get": {
        "tags": ["Nonprofit Grants"],
        "summary": "Get all the files for the latest grant submission response for form",
        "description": "",
        "operationId": "downloadNonprofitGrantProposalSubmissionFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PresignedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/grant/submission/{submissionId}/populate": {
      "post": {
        "tags": ["Nonprofit Grants"],
        "summary": "Populate a grant submission with existing nonprofit data for form",
        "description": "",
        "operationId": "populateGrantSubmissionForm",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "formIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitGrantSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/liveness": {
      "get": {
        "tags": ["Liveness"],
        "summary": "Liveness check",
        "description": "",
        "operationId": "ready",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/mailchimp/{foundationId}/sync": {
      "post": {
        "tags": ["MailChimp"],
        "summary": "Sync the foundation to Mail Chimp",
        "description": "",
        "operationId": "sync",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/mailchimp/auth/{foundationId}": {
      "post": {
        "tags": ["MailChimp"],
        "summary": "Login to MailChimp",
        "description": "",
        "operationId": "auth",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MailChimpAuthUrl"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/mailchimp/{foundationId}/lists": {
      "get": {
        "tags": ["MailChimp"],
        "summary": "Callback from MailChimp that sends token",
        "description": "",
        "operationId": "getLists",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MailChimpList"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/mailchimp/callback": {
      "get": {
        "tags": ["MailChimp"],
        "summary": "Callback from MailChimp that sends token",
        "description": "",
        "operationId": "callback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/user": {
      "get": {
        "tags": ["Nonprofit"],
        "summary": "Get all users in nonprofit, default to active users",
        "description": "",
        "operationId": "getNonprofitUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      },
      "post": {
        "tags": ["Nonprofit"],
        "summary": "Create user in nonprofit",
        "description": "",
        "operationId": "createNonprofitUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitUser"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit/{id}/metadata": {
      "get": {
        "tags": ["Nonprofit"],
        "summary": "Get nonprofit metadata",
        "description": "",
        "operationId": "getNonprofitMetadata_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      },
      "post": {
        "tags": ["Nonprofit"],
        "summary": "Get nonprofit metadata",
        "description": "",
        "operationId": "updateNonprofitMetadata_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit/{id}": {
      "get": {
        "tags": ["Nonprofit"],
        "summary": "Get a nonprofit",
        "description": "",
        "operationId": "getNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nonprofit"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit": {
      "post": {
        "tags": ["Nonprofit"],
        "summary": "Create a nonprofit and permission user as admin",
        "description": "",
        "operationId": "createNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nonprofit"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      },
      "put": {
        "tags": ["Nonprofit"],
        "summary": "Update a nonprofit",
        "description": "",
        "operationId": "updateNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Nonprofit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Nonprofit"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "deprecated": true
      }
    },
    "/nonprofit/{id}/user/{userId}": {
      "delete": {
        "tags": ["Nonprofit"],
        "summary": "Delete user in nonprofit",
        "description": "",
        "operationId": "deleteUser_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/document": {
      "get": {
        "tags": ["Nonprofit"],
        "summary": "Get nonprofit documents",
        "description": "",
        "operationId": "getNonprofitDocuments_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UploadedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/metadata/candid/populate": {
      "post": {
        "tags": ["Nonprofit"],
        "summary": "Populate nonprofit metadata from candid data",
        "description": "",
        "operationId": "populateMetadataFromCandid",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "ein",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitMetadata"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/payment": {
      "get": {
        "tags": ["Nonprofit"],
        "summary": "Get all payments for nonprofit",
        "description": "",
        "operationId": "getAllPayments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GrantPayment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/notification/search": {
      "post": {
        "tags": ["Foundation Notifications"],
        "summary": "Get user notifications for foundation",
        "description": "",
        "operationId": "getUnviewedNotifications",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/notification": {
      "post": {
        "tags": ["Foundation Notifications"],
        "summary": "View notifications for foundation",
        "description": "",
        "operationId": "viewNotifications",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/notification/search": {
      "post": {
        "tags": ["Nonprofit Notifications"],
        "summary": "Get user notifications for nonprofit",
        "description": "",
        "operationId": "getUnviewedNotifications_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NotificationResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/notification": {
      "post": {
        "tags": ["Nonprofit Notifications"],
        "summary": "Get user notifications for nonprofit",
        "description": "",
        "operationId": "viewNotifications_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/nylas/callback": {
      "get": {
        "tags": ["Foundation Nylas"],
        "summary": "Callback from Nylas that sends token",
        "description": "",
        "operationId": "login_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nylas/thread/{threadId}": {
      "get": {
        "tags": ["Foundation Nylas"],
        "summary": "Return all messages for a given thread",
        "description": "",
        "operationId": "getMessagesForThread",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "threadId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NylasMessage"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nylas/thread/{threadId}/visibility": {
      "post": {
        "tags": ["Foundation Nylas"],
        "summary": "Return all messages for a given thread",
        "description": "",
        "operationId": "updateNylasThreadVisibility",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "threadId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nylas/login": {
      "post": {
        "tags": ["Foundation Nylas"],
        "summary": "Login to nylas",
        "description": "",
        "operationId": "loginToNylas",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NylasLoginURL"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nylas/file/download": {
      "post": {
        "tags": ["Foundation Nylas"],
        "summary": "Download email file",
        "description": "",
        "operationId": "downloadNylasEmailFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NylasFileRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nylas": {
      "get": {
        "tags": ["Foundation Nylas"],
        "summary": "Validate access to nylas",
        "description": "",
        "operationId": "hasAccessToNylas",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/ofac/nonprofit/{nonprofitId}": {
      "post": {
        "tags": ["Ofac"],
        "summary": "Resolve any current or future ofac issues with this nonprofits",
        "description": "",
        "operationId": "resolveOfacNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nonprofitId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/ofac/user/{userId}": {
      "post": {
        "tags": ["Ofac"],
        "summary": "Resolve any current or future ofac issues with this user",
        "description": "",
        "operationId": "resolveOfacUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/plaid/link/token": {
      "post": {
        "tags": ["Nonprofit Plaid login"],
        "summary": "Login to plaid",
        "description": "",
        "operationId": "loginToPlaid",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PlaidLinkTokenResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/plaid/token/exchange": {
      "post": {
        "tags": ["Nonprofit Plaid login"],
        "summary": "Exchange plaid token",
        "description": "",
        "operationId": "exchangeToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PlaidTokenExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PlaidTokenExchangeResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/plaid/accounts/full": {
      "get": {
        "tags": ["Nonprofit Plaid login"],
        "summary": "Get bank accounts",
        "description": "",
        "operationId": "getFullPlaidAccounts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccountDetail"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/plaid/accounts": {
      "get": {
        "tags": ["Nonprofit Plaid login"],
        "summary": "Get bank accounts",
        "description": "",
        "operationId": "getPlaidAccounts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NumbersACH"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/quickbooks/callback": {
      "get": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Callback from quickbooks that contains a code",
        "description": "",
        "operationId": "login_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks": {
      "get": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Validate access to quickbooks",
        "description": "",
        "operationId": "hasAccessToQuickbooks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/login": {
      "post": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Login to quickbooks",
        "description": "",
        "operationId": "loginToQuickbooks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QuickbooksLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QuickbooksLoginURL"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/bills": {
      "post": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Create or update bill on quickbooks",
        "description": "",
        "operationId": "createOrUpdateQBBill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/vendor": {
      "post": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Create a vendor",
        "description": "",
        "operationId": "createQBVendor",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/bills/{billId}": {
      "get": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Create or update bill on quickbooks",
        "description": "",
        "operationId": "getQBBill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "billId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/accounts": {
      "get": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Get all accounts in quickbooks",
        "description": "",
        "operationId": "getQuickbooksAccounts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QBSearchResponseAccount"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/bills/search": {
      "post": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Search bills on quickbooks",
        "description": "",
        "operationId": "searchQBBills",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QBBillSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QBSearchResponseBill"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/quickbooks/vendor/search": {
      "post": {
        "tags": ["Foundation Quickbooks"],
        "summary": "Search vendors on quickbooks",
        "description": "",
        "operationId": "searchQuickbooksVendors",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QBVendorSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QBSearchResponseVendor"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/referee/task/{taskId}": {
      "get": {
        "tags": ["Referee Endpoint"],
        "summary": "Get referee task",
        "description": "",
        "operationId": "getRefereeTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/referee/task/{taskId}/submission": {
      "get": {
        "tags": ["Referee Endpoint"],
        "summary": "Get specific referee task submission",
        "description": "",
        "operationId": "getTaskSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Referee Endpoint"],
        "summary": "Add or update referee task submission",
        "description": "",
        "operationId": "addOrUpdateTaskSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/report": {
      "get": {
        "tags": ["Foundation Report"],
        "summary": "Get all foundation reports",
        "description": "",
        "operationId": "getReports",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Report"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Report"],
        "summary": "Create foundation reports",
        "description": "",
        "operationId": "createReportTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Report"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/report/{templateId}/responses/download/files": {
      "get": {
        "tags": ["Foundation Report"],
        "summary": "Get all files for report responses",
        "description": "",
        "operationId": "downloadReportResponsesFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PresignedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/report/{templateId}/responses/download": {
      "get": {
        "tags": ["Foundation Report"],
        "summary": "Download specific report template data",
        "description": "",
        "operationId": "downloadSpecificReportResponses",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "merged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/report/{templateId}": {
      "get": {
        "tags": ["Foundation Report"],
        "summary": "Get specific report template",
        "description": "",
        "operationId": "getSpecificReport",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/report/{templateId}/responses": {
      "get": {
        "tags": ["Foundation Report"],
        "summary": "Get specific report template",
        "description": "",
        "operationId": "getSpecificReportResponses",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmissionEntity"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/templates": {
      "get": {
        "tags": ["Communication"],
        "summary": "Get a list of email templates",
        "description": "",
        "operationId": "getFoundationEmailTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommunicationEmailTemplate"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/emails": {
      "post": {
        "tags": ["Communication"],
        "summary": "Get a list of emails by status",
        "description": "",
        "operationId": "getFoundationEmails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationPortalGetFoundationEmailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommunicationPortalGetFoundationEmailsResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/email/{emailId}": {
      "get": {
        "tags": ["Communication"],
        "summary": "Get a foundation email",
        "description": "",
        "operationId": "getFoundationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommunicationPortalGetFoundationEmailResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Communication"],
        "summary": "Delete a foundation email",
        "description": "",
        "operationId": "deleteFoundationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/email": {
      "post": {
        "tags": ["Communication"],
        "summary": "Update a foundation email",
        "description": "",
        "operationId": "upsertFoundationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationPortalEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommunicationPortalEmail"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/email/send": {
      "post": {
        "tags": ["Communication"],
        "summary": "Sends a foundation email",
        "description": "",
        "operationId": "sendFoundationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationPortalEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommunicationPortalEmail"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{foundationId}/communication/template": {
      "post": {
        "tags": ["Communication"],
        "summary": "Upsert an email template",
        "description": "",
        "operationId": "upsertEmailTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "foundationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationEmailTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommunicationEmailTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/reviewer/tasks": {
      "get": {
        "tags": ["Reviewer"],
        "operationId": "getReviewerTasks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/reviewer/tasks/submissions": {
      "get": {
        "tags": ["Reviewer"],
        "operationId": "getReviewerTasksWithSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskWithSubmission"
              }
            }
          }
        }
      }
    },
    "/foundation/{id}/salesforce/login": {
      "post": {
        "tags": ["Foundation Salesforce"],
        "summary": "Login to salesforce",
        "description": "",
        "operationId": "loginToSalesforce",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SalesforceLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SalesforceLoginURL"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/salesforce": {
      "get": {
        "tags": ["Foundation Salesforce"],
        "summary": "Validate access to salesforce",
        "description": "",
        "operationId": "hasAccessToSalesforce",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/salesforce/callback": {
      "get": {
        "tags": ["Foundation Salesforce"],
        "summary": "Callback from salesforce that contains a code",
        "description": "",
        "operationId": "callbackFromSalesforce",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/search": {
      "post": {
        "tags": ["Foundation Search"],
        "summary": "Search entities in foundation",
        "description": "",
        "operationId": "search",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/nonprofit/search": {
      "post": {
        "tags": ["Foundation Search"],
        "summary": "Search nonprofits in foundation",
        "description": "",
        "operationId": "searchNonprofits_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NonprofitSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NonprofitSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/search/universal": {
      "post": {
        "tags": ["Foundation Search"],
        "summary": "Universal search entities in foundation",
        "description": "",
        "operationId": "universalSearch",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UniversalSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniversalSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/searchbar": {
      "post": {
        "tags": ["Foundation Search"],
        "summary": "Search organizations, people, and submissions in foundation",
        "description": "",
        "operationId": "searchBar",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FoundationSearchBarQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundationSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get a task in a foundation",
        "description": "",
        "operationId": "getTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/submission": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get specific task submission",
        "description": "",
        "operationId": "getTaskSubmission_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Add or update task submission",
        "description": "",
        "operationId": "addOrUpdateTaskSubmission_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/remind": {
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Remind task assignees",
        "description": "",
        "operationId": "remindTaskAssignees",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/comment/{commentId}": {
      "delete": {
        "tags": ["Foundation Tasks"],
        "summary": "Delete comment for task",
        "description": "",
        "operationId": "deleteTaskComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/template": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get all foundation task templates",
        "description": "",
        "operationId": "getTaskTemplates",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskTemplate"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Create or update task template",
        "description": "",
        "operationId": "createOrUpdateTaskTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/template/{templateId}": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get specific foundation task template",
        "description": "",
        "operationId": "getTaskTemplate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskTemplate"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/search": {
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Search all tasks in foundation",
        "description": "",
        "operationId": "getTasksInFoundation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task": {
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Create or update a task in foundation",
        "description": "",
        "operationId": "createOrUpdateTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/download": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Download task form responses",
        "description": "",
        "operationId": "downloadTaskResponses",
        "consumes": ["application/json"],
        "produces": ["application/pdf"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "merged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PDF", "DOCX"]
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/download/files": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get all files for task response",
        "description": "",
        "operationId": "downloadTaskResponseFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PresignedFile"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/{taskId}/comment": {
      "get": {
        "tags": ["Foundation Tasks"],
        "summary": "Get all comments for a task",
        "description": "",
        "operationId": "getTaskComments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskComment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Add or update a comment for task",
        "description": "",
        "operationId": "addOrUpdateTaskComment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskComment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/foundation/{id}/task/submission/bulk": {
      "post": {
        "tags": ["Foundation Tasks"],
        "summary": "Get specific task submission",
        "description": "",
        "operationId": "getBulkTaskSubmission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BulkTaskSubmissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskSubmission"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/task/{taskId}/submission": {
      "get": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Get specific task submission",
        "description": "",
        "operationId": "getTaskSubmission_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Add or update task submission",
        "description": "",
        "operationId": "addOrUpdateTaskSubmission_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSubmission"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/task/{taskId}": {
      "get": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Get a task for nonprofit",
        "description": "",
        "operationId": "getTaskForNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Update task for nonprofit",
        "description": "",
        "operationId": "updateTaskForNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/task/{taskId}/comment": {
      "get": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Get all comments for a task",
        "description": "",
        "operationId": "getTaskComments_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskComment"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Add or update a comment for task",
        "description": "",
        "operationId": "addOrUpdateTaskComment_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskComment"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nonprofit/{id}/task/search": {
      "post": {
        "tags": ["Nonprofit Tasks"],
        "summary": "Search all tasks in nonprofit",
        "description": "",
        "operationId": "getTasksInNonprofit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskSearchResponse"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",
        "description": "",
        "operationId": "getUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateAppUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/nonprofit": {
      "get": {
        "tags": ["User"],
        "summary": "Get list of nonprofits for user ",
        "description": "",
        "operationId": "getNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nonprofit"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/token": {
      "get": {
        "tags": ["User"],
        "summary": "Get user bearer token",
        "description": "",
        "operationId": "getNonprofits_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserBearer"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/foundation": {
      "get": {
        "tags": ["User"],
        "summary": "Get list of foundations for user",
        "description": "",
        "operationId": "getFoundations_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foundation"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v2/nonprofit": {
      "get": {
        "tags": ["Nonprofit V2"],
        "summary": "Get a list of accessible nonprofits based on the query",
        "description": "",
        "operationId": "getNonprofits_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ALL", "ACTIVE", "RELATED"]
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetNonprofitResult"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit V2"],
        "summary": "Upsert a list of nonprofits",
        "description": "",
        "operationId": "upsertNonprofits",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nonprofit"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nonprofit"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v2/nonprofit-metadata": {
      "get": {
        "tags": ["Nonprofit Metadata V2"],
        "summary": "Get a list of accessible nonprofit metadatas based on the query",
        "description": "",
        "operationId": "getNonprofitMetadatas",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nonprofitId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetNonprofitMetadataResult"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit Metadata V2"],
        "summary": "Upsert a list of nonprofit metadatas",
        "description": "",
        "operationId": "upsertNonprofitMetadatas",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitMetadata"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitMetadata"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v2/nonprofit-user": {
      "get": {
        "tags": ["Nonprofit User V2"],
        "summary": "Get a list of accessible nonprofit users based on the query",
        "description": "",
        "operationId": "getNonprofitUsers_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ALL", "ACTIVE"]
          },
          {
            "name": "nonprofitId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetNonprofitUserResult"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Nonprofit User V2"],
        "summary": "Upsert a list of nonprofit users",
        "description": "",
        "operationId": "upsertNonprofitUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitUser"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NonprofitUser"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },

  "securityDefinitions": {
    "bearer": {
      "description": "",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Nonprofit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "legalName": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": ["ORGANIZATION", "INDIVIDUAL"]
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "FiscalSponsor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "primaryContactName": {
          "type": "string"
        },
        "primaryContactEmail": {
          "type": "string"
        }
      }
    },
    "NonprofitAdditionalInfo": {
      "type": "object",
      "properties": {
        "irsData": {
          "$ref": "#/definitions/NonprofitIRSData"
        },
        "completedOnboarding": {
          "type": "boolean"
        },
        "plaidData": {
          "$ref": "#/definitions/PlaidData"
        }
      }
    },
    "NonprofitIRSData": {
      "type": "object",
      "properties": {
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "latestFilingPDFURL": {
          "type": "string"
        },
        "latestFilingYear": {
          "type": "integer",
          "format": "int32"
        },
        "latestFormType": {
          "type": "integer",
          "format": "int32"
        },
        "subsectionCode": {
          "type": "integer",
          "format": "int32"
        },
        "irsLegalStatus": {
          "type": "string"
        },
        "latestFormTypeFiled": {
          "type": "string"
        }
      }
    },
    "NonprofitMetadata": {
      "type": "object",
      "properties": {
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "type": "string"
        },
        "dba": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "mission": {
          "type": "string"
        },
        "vision": {
          "type": "string"
        },
        "hasFiscalSponsor": {
          "type": "boolean"
        },
        "fiscalSponsor": {
          "$ref": "#/definitions/FiscalSponsor"
        },
        "orgEmail": {
          "type": "string"
        },
        "organizationLogo": {
          "type": "string",
          "format": "uuid"
        },
        "headquarters": {
          "$ref": "#/definitions/Address"
        },
        "mailingAddress": {
          "$ref": "#/definitions/Address"
        },
        "website": {
          "type": "string"
        },
        "facebook": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "instagram": {
          "type": "string"
        },
        "linkedIn": {
          "type": "string"
        },
        "guidestarProfile": {
          "type": "string"
        },
        "legalStatus": {
          "type": "string"
        },
        "foundingDate": {
          "type": "string",
          "format": "date"
        },
        "other": {
          "$ref": "#/definitions/NonprofitAdditionalInfo"
        },
        "irsDeterminationLetter": {
          "type": "string"
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "dbaSame": {
          "type": "boolean"
        },
        "mailingAddressSame": {
          "type": "boolean"
        },
        "irsRecipientStatus": {
          "type": "string",
          "enum": [
            "PF",
            "POF",
            "EOF",
            "PC",
            "GOV",
            "SO_DP",
            "SO_I",
            "SO_II",
            "SO_III_FI",
            "SO_III_NFI",
            "TPS",
            "NC",
            "I"
          ]
        }
      }
    },
    "OfacFlags": {
      "type": "object",
      "properties": {
        "sdn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfacSdn"
          }
        },
        "flaggedAt": {
          "type": "string",
          "format": "date-time"
        },
        "resolvedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OfacSdn": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "score": {
          "type": "integer",
          "format": "int32"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aka": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "programs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "list": {
          "type": "string"
        }
      }
    },
    "PlaidData": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "selectedAccountId": {
          "type": "string"
        }
      }
    },
    "DeleteFileInfo": {
      "type": "object",
      "properties": {
        "deleteFileSource": {
          "type": "string",
          "enum": [
            "SUBMISSION_ADDITIONAL_FILES",
            "SUBMISSION_RESPONSES",
            "TASK_RESPONSES",
            "SIGNATURES",
            "PAYMENT_DETAILS",
            "USER_UPLOAD"
          ]
        },
        "deleteFileId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Foundation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "subdomain": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "logoFile": {
          "$ref": "#/definitions/PresignedFile"
        },
        "granteeMFAEnabled": {
          "type": "boolean"
        },
        "foundationMFAEnabled": {
          "type": "boolean"
        }
      }
    },
    "FoundationUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["ADMIN", "USER", "PAYMENTS", "BOARD_MEMBER"]
        },
        "active": {
          "type": "boolean"
        },
        "pronouns": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "sendEmail": {
          "type": "boolean"
        }
      }
    },
    "NonprofitUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "temelioRole": {
          "type": "string",
          "enum": ["SUPERADMIN", "ADMIN", "USER"]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "suffix": {
          "type": "string"
        },
        "pronouns": {
          "type": "string"
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "mfaRequired": {
          "type": "boolean"
        },
        "foundationRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserFoundationRole"
          }
        },
        "nonprofitRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserNonprofitRole"
          }
        },
        "associatedFoundationsFromNonprofit": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["ADMIN", "USER"]
        },
        "primaryContact": {
          "type": "boolean"
        },
        "signatory": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "temelioSuperuser": {
          "type": "boolean"
        },
        "temelioAdmin": {
          "type": "boolean"
        },
        "hasAdminAccess": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PresignedFile": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url"
        },
        "file": {
          "$ref": "#/definitions/UploadedFile"
        }
      }
    },
    "UploadedFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileViewPermission": {
          "type": "string",
          "enum": ["FOUNDATION_ONLY", "ALL"]
        },
        "folderId": {
          "type": "string",
          "format": "uuid"
        },
        "folderType": {
          "type": "string",
          "enum": ["SUBMISSION", "USER_FOLDER"]
        },
        "fileSourceType": {
          "type": "string",
          "enum": [
            "CRM",
            "GRANT_APPLICATION",
            "GRANT_FORM_PROPOSAL",
            "TASK",
            "SETTINGS"
          ]
        },
        "fileSourceId": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "fileType": {
          "type": "string",
          "enum": ["FOLDER", "FILE"]
        },
        "donorEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "numberSubmissionForms": {
          "type": "integer",
          "format": "int32"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadedFile"
          }
        },
        "viewableToGrantee": {
          "type": "boolean"
        },
        "deleteFileInfo": {
          "$ref": "#/definitions/DeleteFileInfo"
        },
        "createdByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "createdByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "updatedByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "file": {
          "type": "boolean"
        },
        "folder": {
          "type": "boolean"
        },
        "grantFolder": {
          "type": "boolean"
        },
        "deletable": {
          "type": "boolean"
        }
      }
    },
    "UserFoundationRole": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": ["ADMIN", "USER", "PAYMENTS", "BOARD_MEMBER"]
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "sendEmail": {
          "type": "boolean"
        }
      }
    },
    "UserNonprofitRole": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "title": {
          "type": "string"
        },
        "primaryContact": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "enum": ["ADMIN", "USER"]
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "sendEmail": {
          "type": "boolean"
        },
        "signatory": {
          "type": "boolean"
        }
      }
    },
    "AppUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "temelioRole": {
          "type": "string",
          "enum": ["SUPERADMIN", "ADMIN", "USER"]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "suffix": {
          "type": "string"
        },
        "pronouns": {
          "type": "string"
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "mfaRequired": {
          "type": "boolean"
        },
        "foundationRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserFoundationRole"
          }
        },
        "nonprofitRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserNonprofitRole"
          }
        },
        "associatedFoundationsFromNonprofit": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "name": {
          "type": "string"
        },
        "temelioSuperuser": {
          "type": "boolean"
        },
        "temelioAdmin": {
          "type": "boolean"
        },
        "hasAdminAccess": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "NylasSyncRequest": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "AdditionalContact": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "primaryContact": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "inactive": {
          "type": "boolean"
        }
      }
    },
    "FoundationNonprofitInteraction": {
      "type": "object",
      "properties": {
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationPOC": {
          "type": "string",
          "format": "uuid"
        },
        "customFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalInfo": {
          "$ref": "#/definitions/InteractionAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "IRS990Details": {
      "type": "object",
      "properties": {
        "conflictOfInterest": {
          "type": "string"
        }
      }
    },
    "InteractionAdditionalInfo": {
      "type": "object",
      "properties": {
        "additionalContacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalContact"
          }
        },
        "qbVendorDetails": {
          "$ref": "#/definitions/QBVendorDetails"
        },
        "organizationTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "irs990Details": {
          "$ref": "#/definitions/IRS990Details"
        }
      }
    },
    "QBVendorDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "AnvilPDFAdditionalInfo": {
      "type": "object",
      "properties": {
        "pdfKey": {
          "type": "string"
        },
        "pdfType": {
          "type": "string",
          "enum": ["PAYMENT_INFO"]
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnvilPDFField"
          }
        }
      }
    },
    "AnvilPDFField": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["SHORT_TEXT", "DATE"]
        }
      }
    },
    "Budget": {
      "type": "object",
      "properties": {
        "lastUpdateById": {
          "type": "string",
          "format": "uuid"
        },
        "lastUpdateByName": {
          "type": "string"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetAllocation"
          }
        },
        "yearly": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BudgetAllocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CRMConfiguration": {
      "type": "object",
      "properties": {
        "nonprofitEntityTypeMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CRMConfigurationField"
            }
          }
        }
      }
    },
    "CRMConfigurationField": {
      "type": "object",
      "properties": {
        "fieldType": {
          "type": "string",
          "enum": [
            "DBA",
            "PHONE_NUMBER",
            "TEAM",
            "SIGNATORY",
            "ADDITIONAL_CONTACTS",
            "MISSION",
            "VISION",
            "DESCRIPTION",
            "EIN",
            "FISCAL_SPONSOR",
            "ENTITY_EMAIL",
            "ENTITY_WEBSITE",
            "TOTAL_AWARDED",
            "WEBSITE",
            "FOUNDATION_PRIMARY_CONTACT",
            "HEADQUARTERS_ADDRESS",
            "MAILING_ADDRESS",
            "TAGS",
            "FACEBOOK",
            "TWITTER",
            "INSTAGRAM",
            "LINKEDIN",
            "GUIDESTAR",
            "LEGAL_STATUS",
            "FOUNDING_DATE",
            "STATUS",
            "LOGO",
            "IRS_DETERMINATION_LETTER",
            "IRS_DATA",
            "IRS_RECIPIENT_STATUS",
            "CONFLICT_OF_INTEREST",
            "CUSTOM"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "customCRMField": {
          "$ref": "#/definitions/FoundationCRMField"
        },
        "crmExternalConfigProperty": {
          "$ref": "#/definitions/CRMExternalConfigProperty"
        }
      }
    },
    "CRMExternalConfigProperty": {
      "type": "object",
      "properties": {
        "disableForExternalReviewer": {
          "type": "boolean"
        }
      }
    },
    "ConfigurationSettings": {
      "type": "object",
      "properties": {
        "logoFile": {
          "type": "string",
          "format": "uuid"
        },
        "color": {
          "type": "string"
        },
        "landingPage": {
          "type": "string"
        },
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pipeline"
          }
        },
        "bannerFile": {
          "type": "string",
          "format": "uuid"
        },
        "mailSettings": {
          "$ref": "#/definitions/FoundationMailSettings"
        },
        "quickbooksSetting": {
          "$ref": "#/definitions/FoundationQuickbooksSetting"
        },
        "replyTo": {
          "type": "string"
        },
        "defaultPipelineName": {
          "type": "string"
        },
        "senderEmail": {
          "type": "string"
        },
        "crmConfiguration": {
          "$ref": "#/definitions/CRMConfiguration"
        },
        "metabaseConfiguration": {
          "$ref": "#/definitions/MetabaseConfiguration"
        },
        "grantTypeConfiguration": {
          "$ref": "#/definitions/GrantTypeConfiguration"
        },
        "mailChimpConfiguration": {
          "$ref": "#/definitions/MailChimpFoundationConfiguration"
        },
        "granteeProfileUpdateConfiguration": {
          "$ref": "#/definitions/GranteeProfileUpdateConfiguration"
        },
        "externalReviewerConfiguration": {
          "$ref": "#/definitions/ExternalReviewerConfiguration"
        },
        "salesforceConfiguration": {
          "$ref": "#/definitions/FoundationSalesforceConfiguration"
        },
        "granteeMFAEnabled": {
          "type": "boolean"
        },
        "foundationMFAEnabled": {
          "type": "boolean"
        }
      }
    },
    "CustomEmailTemplate": {
      "type": "object",
      "properties": {
        "customEmailTemplateType": {
          "type": "string",
          "enum": [
            "REQUEST_TO_COMPLETE_PROPOSAL",
            "FOUNDATION_ADD_USER_TO_NONPROFIT",
            "REQUEST_TO_COMPLETE_REPORT",
            "STAGE_CHANGE_MESSAGE",
            "EXTERNAL_REVIEWER",
            "TASK_COMMENT_MENTION",
            "TASK_COMMENT_ADDED",
            "BULK_EXTERNAL_REVIEWER",
            "TASK_REMINDER"
          ]
        },
        "subjectText": {
          "type": "string"
        },
        "messageText": {
          "type": "string"
        },
        "ccEmail": {
          "type": "string"
        },
        "stageName": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "replyTo": {
          "type": "string"
        }
      }
    },
    "CustomGrantType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "DefaultDateSetting": {
      "type": "object",
      "properties": {
        "timeUnit": {
          "type": "string",
          "enum": ["DAYS", "WEEKS", "MONTHS", "YEARS"]
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DisplayCondition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "comparatorId": {
          "type": "string"
        },
        "comparator": {
          "type": "string",
          "enum": ["EQUALS", "NOT_EQUALS", "CONTAINS", "NOT_CONTAINS"]
        },
        "comparisonValue": {
          "type": "string"
        }
      }
    },
    "DocumentItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GRANTEE_CRM_DATA",
            "GRANTEE_CRM_CUSTOM_FIELD",
            "SUBMISSION_RESPONSE",
            "SUBMISSION_METADATA",
            "FORM_FIELDS",
            "CUSTOM",
            "AVG_TASK_RESPONSE"
          ]
        },
        "key": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "formName": {
          "type": "string"
        },
        "formComponentType": {
          "type": "string",
          "enum": [
            "FILE_UPLOAD",
            "FILE_DOWNLOAD",
            "SINGLE_RESPONSE",
            "MULTI_RESPONSE",
            "DROPDOWN_LIST",
            "MULTI_DROPDOWN_LIST",
            "RATING",
            "TEXT",
            "SHORT_TEXT",
            "FOUNDATION_USER",
            "TABLE",
            "NUMBER",
            "DATE",
            "BUDGET_CATEGORY",
            "REPORT_TEMPLATE",
            "YES_NO_CHECKBOX",
            "ORG_LEGAL_NAME",
            "ORG_DBA",
            "ORG_LEGAL_STATUS",
            "ORG_EIN",
            "ORG_HQ",
            "ORG_HQ_ADDRESS_1",
            "ORG_HQ_ADDRESS_2",
            "ORG_HQ_CITY",
            "ORG_HQ_STATE",
            "ORG_HQ_ZIPCODE",
            "ORG_HQ_COUNTRY",
            "ORG_MAILING_ADDR",
            "ORG_MAILING_ADDRESS_1",
            "ORG_MAILING_ADDRESS_2",
            "ORG_MAILING_CITY",
            "ORG_MAILING_STATE",
            "ORG_MAILING_ZIPCODE",
            "ORG_MAILING_COUNTRY",
            "ORG_PHONE_NUMBER",
            "ORG_EMAIL",
            "ORG_WEBSITE",
            "ORG_FISCAL_SPONSOR",
            "ORG_HAS_FISCAL_SPONSOR",
            "ORG_FISCAL_SPONSOR_NAME",
            "ORG_FISCAL_SPONSOR_EIN",
            "ORG_FISCAL_SPONSOR_ADDRESS",
            "ORG_MISSION",
            "ORG_VISION",
            "ORG_DEI",
            "ORG_FOUNDED_YEAR",
            "ORG_EMP_FULL_TIME",
            "ORG_EMP_PART_TIME",
            "ORG_PRIMARY_CONTACT",
            "ORG_PRIMARY_CONTACT_NAME",
            "ORG_PRIMARY_CONTACT_EMAIL",
            "ORG_PROJECT_DIRECTOR",
            "ORG_PROJECT_DIRECTOR_NAME",
            "ORG_PROJECT_DIRECTOR_EMAIL",
            "ORG_EXECUTIVE",
            "ORG_EXECUTIVE_NAME",
            "ORG_EXECUTIVE_EMAIL",
            "ORG_BUDGET",
            "ORG_BUDGET_REVENUE",
            "ORG_BUDGET_EXPENDITURES",
            "ORG_SOCIAL",
            "ORG_SOCIAL_FACEBOOK",
            "ORG_SOCIAL_INSTAGRAM",
            "ORG_SOCIAL_TWITTER",
            "ORG_SOCIAL_LINKEDIN",
            "ORG_SOCIAL_GUIDESTAR",
            "GRANT_AMOUNT_REQ",
            "GRANT_TYPE",
            "GRANT_PROJECT_TITLE",
            "GRANT_PROJECT_BUDGET",
            "GRANT_CO_FUNDING",
            "GRANT_PERIOD",
            "GRANT_PERIOD_START",
            "GRANT_PERIOD_END",
            "GRANT_PROP_TITLE",
            "GRANT_RELEVANCY",
            "GRANT_AREA",
            "GRANT_AREA_CITY",
            "GRANT_AREA_STATE",
            "GRANT_AREA_COUNTRY",
            "GRANT_POP_SERVED",
            "PAGE_DIVIDER",
            "TEXT_DESCRIPTION",
            "FORMATTED_TEXT",
            "CURRENCY",
            "EXTERNAL_REFERENCES"
          ]
        }
      }
    },
    "ExternalReviewerConfiguration": {
      "type": "object",
      "properties": {
        "tableConfiguration": {
          "$ref": "#/definitions/ExternalReviewerTableConfiguration"
        }
      }
    },
    "ExternalReviewerTableConfiguration": {
      "type": "object",
      "properties": {
        "visibleColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentItem"
          }
        }
      }
    },
    "FeatureSet": {
      "type": "object",
      "properties": {
        "docusignEnabled": {
          "type": "boolean"
        },
        "landingPageEnabled": {
          "type": "boolean"
        },
        "multiplePipelinesEnabled": {
          "type": "boolean"
        },
        "paymentsEnabled": {
          "type": "boolean"
        },
        "externalReviewersEnabled": {
          "type": "integer",
          "format": "int32"
        },
        "quickbooksEnabled": {
          "type": "boolean"
        },
        "boardDocumentEnabled": {
          "type": "boolean"
        },
        "donorManagementEnabled": {
          "type": "boolean"
        },
        "documentCenterEnabled": {
          "type": "boolean"
        },
        "candidEnabled": {
          "type": "boolean"
        },
        "customDashboardEnabled": {
          "type": "boolean"
        },
        "mailChimpEnabled": {
          "type": "boolean"
        },
        "salesforceEnabled": {
          "type": "boolean"
        }
      }
    },
    "FormItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FILE_UPLOAD",
            "FILE_DOWNLOAD",
            "SINGLE_RESPONSE",
            "MULTI_RESPONSE",
            "DROPDOWN_LIST",
            "MULTI_DROPDOWN_LIST",
            "RATING",
            "TEXT",
            "SHORT_TEXT",
            "FOUNDATION_USER",
            "TABLE",
            "NUMBER",
            "DATE",
            "BUDGET_CATEGORY",
            "REPORT_TEMPLATE",
            "YES_NO_CHECKBOX",
            "ORG_LEGAL_NAME",
            "ORG_DBA",
            "ORG_LEGAL_STATUS",
            "ORG_EIN",
            "ORG_HQ",
            "ORG_HQ_ADDRESS_1",
            "ORG_HQ_ADDRESS_2",
            "ORG_HQ_CITY",
            "ORG_HQ_STATE",
            "ORG_HQ_ZIPCODE",
            "ORG_HQ_COUNTRY",
            "ORG_MAILING_ADDR",
            "ORG_MAILING_ADDRESS_1",
            "ORG_MAILING_ADDRESS_2",
            "ORG_MAILING_CITY",
            "ORG_MAILING_STATE",
            "ORG_MAILING_ZIPCODE",
            "ORG_MAILING_COUNTRY",
            "ORG_PHONE_NUMBER",
            "ORG_EMAIL",
            "ORG_WEBSITE",
            "ORG_FISCAL_SPONSOR",
            "ORG_HAS_FISCAL_SPONSOR",
            "ORG_FISCAL_SPONSOR_NAME",
            "ORG_FISCAL_SPONSOR_EIN",
            "ORG_FISCAL_SPONSOR_ADDRESS",
            "ORG_MISSION",
            "ORG_VISION",
            "ORG_DEI",
            "ORG_FOUNDED_YEAR",
            "ORG_EMP_FULL_TIME",
            "ORG_EMP_PART_TIME",
            "ORG_PRIMARY_CONTACT",
            "ORG_PRIMARY_CONTACT_NAME",
            "ORG_PRIMARY_CONTACT_EMAIL",
            "ORG_PROJECT_DIRECTOR",
            "ORG_PROJECT_DIRECTOR_NAME",
            "ORG_PROJECT_DIRECTOR_EMAIL",
            "ORG_EXECUTIVE",
            "ORG_EXECUTIVE_NAME",
            "ORG_EXECUTIVE_EMAIL",
            "ORG_BUDGET",
            "ORG_BUDGET_REVENUE",
            "ORG_BUDGET_EXPENDITURES",
            "ORG_SOCIAL",
            "ORG_SOCIAL_FACEBOOK",
            "ORG_SOCIAL_INSTAGRAM",
            "ORG_SOCIAL_TWITTER",
            "ORG_SOCIAL_LINKEDIN",
            "ORG_SOCIAL_GUIDESTAR",
            "GRANT_AMOUNT_REQ",
            "GRANT_TYPE",
            "GRANT_PROJECT_TITLE",
            "GRANT_PROJECT_BUDGET",
            "GRANT_CO_FUNDING",
            "GRANT_PERIOD",
            "GRANT_PERIOD_START",
            "GRANT_PERIOD_END",
            "GRANT_PROP_TITLE",
            "GRANT_RELEVANCY",
            "GRANT_AREA",
            "GRANT_AREA_CITY",
            "GRANT_AREA_STATE",
            "GRANT_AREA_COUNTRY",
            "GRANT_POP_SERVED",
            "PAGE_DIVIDER",
            "TEXT_DESCRIPTION",
            "FORMATTED_TEXT",
            "CURRENCY",
            "EXTERNAL_REFERENCES"
          ]
        },
        "id": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/FormItemValue"
        },
        "label": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/FormItemOptions"
        },
        "section": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "expectedResponses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FormItemOptions": {
      "type": "object",
      "properties": {
        "scale": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean"
        },
        "internal": {
          "type": "boolean"
        },
        "displayConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisplayCondition"
          }
        },
        "fieldBinding": {
          "type": "string"
        },
        "fieldBindingOverwriteRule": {
          "type": "string",
          "enum": ["SAVE_ALL", "SAVE_NON_BLANK", "OVERWRITE_BLANK"]
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "minLength": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FormItemValue": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOptionEntity"
          }
        },
        "document": {
          "type": "object"
        },
        "placeholder": {
          "type": "string"
        },
        "tableDisplayContent": {
          "$ref": "#/definitions/TableDisplayContent"
        }
      }
    },
    "FormOptionEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FoundationCRMField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "visibleInTable": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "SYSTEM",
            "TEXT",
            "NUMBER",
            "CURRENCY",
            "USER",
            "DATE",
            "BOOLEAN",
            "TAGS",
            "MULTI"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FoundationMailSettings": {
      "type": "object",
      "properties": {
        "emailTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomEmailTemplate"
          }
        }
      }
    },
    "FoundationMetadata": {
      "type": "object",
      "properties": {
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "fiscalStart": {
          "type": "string",
          "format": "date"
        },
        "stages": {
          "$ref": "#/definitions/GrantStageWorkflow"
        },
        "scoringCriteria": {
          "$ref": "#/definitions/ScoringCriteria"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationMetadataTag"
          }
        },
        "budget": {
          "$ref": "#/definitions/Budget"
        },
        "featureSet": {
          "$ref": "#/definitions/FeatureSet"
        },
        "configuration": {
          "$ref": "#/definitions/ConfigurationSettings"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationReviewerUser"
          }
        },
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomEmailTemplate"
          }
        }
      }
    },
    "FoundationMetadataTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "FoundationQuickbooksSetting": {
      "type": "object",
      "properties": {
        "realmId": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "paymentSyncSettings": {
          "$ref": "#/definitions/QBPaymentSyncSetting"
        }
      }
    },
    "FoundationReviewerUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "temelioRole": {
          "type": "string",
          "enum": ["SUPERADMIN", "ADMIN", "USER"]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "suffix": {
          "type": "string"
        },
        "pronouns": {
          "type": "string"
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "mfaRequired": {
          "type": "boolean"
        },
        "foundationRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserFoundationRole"
          }
        },
        "nonprofitRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserNonprofitRole"
          }
        },
        "associatedFoundationsFromNonprofit": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "role": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "temelioSuperuser": {
          "type": "boolean"
        },
        "temelioAdmin": {
          "type": "boolean"
        },
        "hasAdminAccess": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "FoundationSalesforceConfiguration": {
      "type": "object",
      "properties": {
        "salesforceSyncRequest": {
          "$ref": "#/definitions/SalesforceSyncRequest"
        },
        "salesforceTokenResponse": {
          "$ref": "#/definitions/SalesforceTokenResponse"
        }
      }
    },
    "GrantStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "enum": [
            "VETTING",
            "DRAFT",
            "SUBMITTED",
            "REVIEW",
            "PENDING",
            "APPROVED",
            "CONTRACT",
            "PAYMENT",
            "REPORTING",
            "AWARDED",
            "DENIED"
          ]
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StageTaskTemplate"
          }
        },
        "notifyGrantee": {
          "type": "boolean"
        }
      }
    },
    "GrantStageWorkflow": {
      "type": "object",
      "properties": {
        "stages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantStage"
          }
        }
      }
    },
    "GrantTypeConfiguration": {
      "type": "object",
      "properties": {
        "grantTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomGrantType"
          }
        }
      }
    },
    "GranteeProfileUpdate": {
      "type": "object",
      "properties": {
        "updateOptionType": {
          "type": "string",
          "enum": ["HQ_ADDRESS", "MAILING_ADDRESS"]
        }
      }
    },
    "GranteeProfileUpdateConfiguration": {
      "type": "object",
      "properties": {
        "granteeProfileUpdates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranteeProfileUpdate"
          }
        }
      }
    },
    "MailChimpFoundationConfiguration": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "listId": {
          "type": "string"
        }
      }
    },
    "MetabaseConfiguration": {
      "type": "object",
      "properties": {
        "dashboardUrls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetabaseDashboardUrl"
          }
        }
      }
    },
    "MetabaseDashboardUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "workflow": {
          "$ref": "#/definitions/GrantStageWorkflow"
        }
      }
    },
    "QBPaymentDestination": {
      "type": "object",
      "properties": {
        "crmFieldDestination": {
          "$ref": "#/definitions/CRMConfigurationField"
        }
      }
    },
    "QBPaymentSource": {
      "type": "object",
      "properties": {
        "paymentSourceType": {
          "type": "string",
          "enum": ["BILL"]
        },
        "paymentSourceIdentifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentSourceTransformer": {
          "type": "string",
          "enum": ["JCC"]
        }
      }
    },
    "QBPaymentSyncSetting": {
      "type": "object",
      "properties": {
        "billSourceId": {
          "$ref": "#/definitions/QBPaymentSource"
        },
        "billDestinationId": {
          "$ref": "#/definitions/QBPaymentDestination"
        }
      }
    },
    "SalesforceEntityToUpdate": {
      "type": "object",
      "properties": {
        "salesforceTemelioObject": {
          "type": "string",
          "enum": ["ACCOUNT", "CONTACT", "PAYMENT"]
        },
        "salesforceObjectName": {
          "type": "string"
        },
        "salesforceRelationshipKey": {
          "type": "string"
        },
        "salesforceTemelioFieldName": {
          "type": "string"
        },
        "temelioSalesforceFieldMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemelioSalesforceFieldMapping"
          }
        }
      }
    },
    "SalesforceSyncRequest": {
      "type": "object",
      "properties": {
        "salesforceAccountName": {
          "type": "string"
        },
        "salesforceTemelioFieldName": {
          "type": "string"
        },
        "entitiesToUpdate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesforceEntityToUpdate"
          }
        },
        "accountsToUpdate": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "SalesforceTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "instance_url": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "issued_at": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ScoringCriteria": {
      "type": "object",
      "properties": {
        "criteriaList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "StageTaskTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["SYSTEM", "USER"]
        },
        "systemLabel": {
          "type": "string",
          "enum": [
            "GRANT_AGREEMENT",
            "PAYMENT",
            "REPORTING",
            "REVIEW",
            "REMINDER",
            "CUSTOM_REMINDER",
            "DOCUSIGN",
            "PLAID_PAYMENT_DETAILS",
            "EXTERNAL",
            "EXTERNAL_REVIEWER",
            "REFEREE",
            "GRANT_UPLOAD",
            "GRANT_TEMPLATE",
            "MULTI_GRANT_DOCUMENT_REVIEW",
            "GRANT_DOCUMENT_REVIEW",
            "GRANT_SIGNATURE_REQUEST",
            "PLAID_PAYMENT_SECURE_PAYMENT_STORAGE",
            "SECURE_PAYMENT_STORAGE",
            "PDF"
          ]
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "additionalInfo": {
          "$ref": "#/definitions/TaskTemplateAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "defaultAssignees": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "defaultDeadline": {
          "$ref": "#/definitions/DefaultDateSetting"
        },
        "embedInStageChange": {
          "type": "boolean"
        }
      }
    },
    "TableDisplayCell": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cellType": {
          "type": "string",
          "enum": ["HEADER", "NUMBER", "TEXT"]
        },
        "displayText": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "editable": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        }
      }
    },
    "TableDisplayContent": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TableDisplayRow"
          }
        },
        "rowHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TableDisplayCell"
          }
        },
        "columnHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TableDisplayCell"
          }
        }
      }
    },
    "TableDisplayRow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TableDisplayCell"
          }
        }
      }
    },
    "TaskTemplateAdditionalInfo": {
      "type": "object",
      "properties": {
        "anvilPdfAdditionalInfo": {
          "$ref": "#/definitions/AnvilPDFAdditionalInfo"
        }
      }
    },
    "TemelioSalesforceFieldMapping": {
      "type": "object",
      "properties": {
        "temelioField": {
          "type": "string",
          "enum": [
            "ORGANIZATION_NAME",
            "ORGANIZATION_LEGAL_NAME",
            "ORGANIZATION_EIN",
            "ORGANIZATION_MAILING_ADDRESS_1",
            "CONTACT_NAME",
            "CONTACT_EMAIL",
            "CONTACT_TITLE",
            "PAYMENT_AMOUNT",
            "PAYMENT_DUE_DATE"
          ]
        },
        "salesforceFieldName": {
          "type": "string"
        }
      }
    },
    "NonprofitIRSUpdateRequest": {
      "type": "object",
      "properties": {
        "nonprofitIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "cutOffDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FormComponentSubmission": {
      "type": "object",
      "properties": {
        "fileUploads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selectedResponses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "response": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TableSubmissionRow"
          }
        },
        "number": {
          "type": "number",
          "format": "double"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "reportTemplateId": {
          "type": "string",
          "format": "uuid"
        },
        "tableResponse": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TableResponseCell"
            }
          }
        }
      }
    },
    "FormItemResponseEntity": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/FormItem"
        },
        "response": {
          "$ref": "#/definitions/FormComponentSubmission"
        }
      }
    },
    "FormPDFResponseData": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "pageTitle": {
          "type": "string"
        }
      }
    },
    "TableResponseCell": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      }
    },
    "TableSubmissionRow": {
      "type": "object",
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormComponentSubmission"
          }
        }
      }
    },
    "FoundationNonprofitCreateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "legalName": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": ["ORGANIZATION", "INDIVIDUAL"]
        },
        "hasFiscalSponsor": {
          "type": "boolean"
        },
        "fiscalSponsor": {
          "$ref": "#/definitions/FiscalSponsor"
        },
        "primaryContactEmail": {
          "type": "string"
        },
        "primaryContactName": {
          "type": "string"
        },
        "welcomeMessage": {
          "type": "string"
        },
        "sendWelcomeMessage": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "suffix": {
          "type": "string"
        },
        "pronouns": {
          "type": "string"
        }
      }
    },
    "UpdateAppUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "temelioRole": {
          "type": "string",
          "enum": ["SUPERADMIN", "ADMIN", "USER"]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "suffix": {
          "type": "string"
        },
        "pronouns": {
          "type": "string"
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "mfaRequired": {
          "type": "boolean"
        },
        "foundationRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserFoundationRole"
          }
        },
        "nonprofitRoleMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserNonprofitRole"
          }
        },
        "associatedFoundationsFromNonprofit": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "sendEmail": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "temelioSuperuser": {
          "type": "boolean"
        },
        "temelioAdmin": {
          "type": "boolean"
        },
        "hasAdminAccess": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "DocusignTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "DocusignUserFoundationSettings": {
      "type": "object",
      "properties": {
        "accessToken": {
          "$ref": "#/definitions/DocusignTokenResponse"
        }
      }
    },
    "NotificationSetting": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "MENTIONS",
            "TASK_ASSIGNEES",
            "TASK_DUE",
            "GRANTEE_TASK_DUE",
            "NEW_APPLICATION",
            "GRANTEE_PROFILE_UPDATE",
            "PROPOSAL_STAGE_CHANGE",
            "VIEWER_TASK",
            "VIEWER_PROPOSAL"
          ]
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "NylasAccessToken": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "NylasUserFoundationSettings": {
      "type": "object",
      "properties": {
        "accessToken": {
          "$ref": "#/definitions/NylasAccessToken"
        },
        "sharedCalendarId": {
          "type": "string"
        }
      }
    },
    "SystemNotifications": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationSetting"
          }
        }
      }
    },
    "UserBrandingSettings": {
      "type": "object",
      "properties": {
        "avatarFile": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "UserFoundationSettings": {
      "type": "object",
      "properties": {
        "systemNotifications": {
          "$ref": "#/definitions/SystemNotifications"
        },
        "nylasSettings": {
          "$ref": "#/definitions/NylasUserFoundationSettings"
        },
        "docusignSettings": {
          "$ref": "#/definitions/DocusignUserFoundationSettings"
        },
        "brandingSettings": {
          "$ref": "#/definitions/UserBrandingSettings"
        },
        "pipelineSettings": {
          "$ref": "#/definitions/UserPipelineSettings"
        }
      }
    },
    "UserPipelineSettings": {
      "type": "object",
      "properties": {
        "defaultPipelineId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Faceting": {
      "type": "object",
      "properties": {
        "maxValuesPerFacet": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "maxTotalHits": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SwapIndexesParams": {
      "type": "object",
      "properties": {
        "indexes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "systemLabel": {
          "type": "string",
          "enum": [
            "GRANT_AGREEMENT",
            "PAYMENT",
            "REPORTING",
            "REVIEW",
            "REMINDER",
            "CUSTOM_REMINDER",
            "DOCUSIGN",
            "PLAID_PAYMENT_DETAILS",
            "EXTERNAL",
            "EXTERNAL_REVIEWER",
            "REFEREE",
            "GRANT_UPLOAD",
            "GRANT_TEMPLATE",
            "MULTI_GRANT_DOCUMENT_REVIEW",
            "GRANT_DOCUMENT_REVIEW",
            "GRANT_SIGNATURE_REQUEST",
            "PLAID_PAYMENT_SECURE_PAYMENT_STORAGE",
            "SECURE_PAYMENT_STORAGE",
            "PDF"
          ]
        },
        "taskType": {
          "type": "string",
          "enum": ["INTERNAL", "EXTERNAL"]
        },
        "status": {
          "type": "string",
          "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
        },
        "description": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "CRM",
            "GRANT_APPLICATION",
            "REPORT",
            "AGREEMENT_TEMPLATE",
            "DONOR"
          ]
        },
        "sourceId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSourceEntity"
          }
        },
        "additionalInfo": {
          "$ref": "#/definitions/TaskAdditionalInfo"
        },
        "assignees": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "watchers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "signatureOrderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatureOrder"
          }
        },
        "disableOldSignatureWorkflow": {
          "type": "boolean"
        },
        "customEmailTemplate": {
          "$ref": "#/definitions/CustomEmailTemplate"
        },
        "documentHTML": {
          "type": "string"
        },
        "encodedSignatureFile": {
          "type": "string"
        },
        "achDetails": {
          "$ref": "#/definitions/AnvilPaymentDetails"
        },
        "pdfResponses": {
          "$ref": "#/definitions/AnvilPDFFieldResponses"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "foundationAssignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationUser"
          }
        },
        "nonprofitAssignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitUser"
          }
        },
        "foundationWatchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationUser"
          }
        },
        "externalReviewer": {
          "$ref": "#/definitions/AppUser"
        },
        "externalReviewers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppUser"
          }
        },
        "referee": {
          "$ref": "#/definitions/AppUser"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "documentToSign": {
          "$ref": "#/definitions/PresignedFile"
        },
        "signedDocumentFile": {
          "$ref": "#/definitions/PresignedFile"
        },
        "bankAccountDocumentFile": {
          "$ref": "#/definitions/PresignedFile"
        },
        "donorEntity": {
          "$ref": "#/definitions/DonorEntity"
        }
      }
    },
    "TaskDetails": {
      "type": "object",
      "properties": {
        "receivedDocuments": {
          "type": "integer",
          "format": "int32"
        },
        "indexedDocuments": {
          "type": "integer",
          "format": "int32"
        },
        "deletedDocuments": {
          "type": "integer",
          "format": "int32"
        },
        "primaryKey": {
          "type": "string"
        },
        "rankingRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchableAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayedAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filterableAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sortableAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stopWords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "synonyms": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "distinctAttribute": {
          "type": "string"
        },
        "typoTolerance": {
          "$ref": "#/definitions/TypoTolerance"
        },
        "providedIds": {
          "type": "integer",
          "format": "int32"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "faceting": {
          "$ref": "#/definitions/Faceting"
        },
        "dumpUid": {
          "type": "string"
        },
        "matchedTasks": {
          "type": "integer",
          "format": "int32"
        },
        "canceledTasks": {
          "type": "integer",
          "format": "int32"
        },
        "originalFilter": {
          "type": "string"
        },
        "deletedTasks": {
          "type": "integer",
          "format": "int32"
        },
        "swaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SwapIndexesParams"
          }
        }
      }
    },
    "TaskError": {
      "type": "object",
      "properties": {
        "taskErrorCode": {
          "type": "string"
        },
        "taskErrorType": {
          "type": "string"
        },
        "taskErrorLink": {
          "type": "string"
        }
      }
    },
    "TypoTolerance": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "minWordSizeForTypos": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "disableOnWords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableOnAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CandidEntityResponse": {
      "type": "object",
      "properties": {
        "ein": {
          "type": "string"
        },
        "demographicsData": {
          "$ref": "#/definitions/DemographicsResponse"
        },
        "demographicsUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "premierData": {
          "$ref": "#/definitions/PremierResponse"
        },
        "premierUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "premierPDFLink": {
          "type": "string",
          "format": "uuid"
        },
        "premierPDFUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "premierPDFLinkFile": {
          "$ref": "#/definitions/PresignedFile"
        }
      }
    },
    "DemographicsCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "board_members_not_collected": {
          "type": "boolean"
        },
        "staff_not_collected": {
          "type": "boolean"
        },
        "senior_staff_not_collected": {
          "type": "boolean"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DemographicsSubcategory"
          }
        }
      }
    },
    "DemographicsData": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/DemographicsSummary"
        },
        "demographics": {
          "$ref": "#/definitions/DemographicsDetails"
        }
      }
    },
    "DemographicsDetails": {
      "type": "object",
      "properties": {
        "staff_level_totals": {
          "$ref": "#/definitions/DemographicsStaffLevelTotals"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DemographicsCategory"
          }
        }
      }
    },
    "DemographicsResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "took": {
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "data": {
          "$ref": "#/definitions/DemographicsData"
        }
      }
    },
    "DemographicsStaffLevelTotals": {
      "type": "object",
      "properties": {
        "total_board_members": {
          "type": "string"
        },
        "total_staff": {
          "type": "string"
        },
        "total_senior_staff": {
          "type": "string"
        }
      }
    },
    "DemographicsSubcategory": {
      "type": "object",
      "properties": {
        "subcategory": {
          "type": "string"
        },
        "board_members": {
          "type": "integer",
          "format": "int32"
        },
        "staff": {
          "type": "integer",
          "format": "int32"
        },
        "senior_staff": {
          "type": "integer",
          "format": "int32"
        },
        "reported_by_ceo": {
          "type": "boolean"
        },
        "reported_by_coceo": {
          "type": "boolean"
        }
      }
    },
    "DemographicsSummary": {
      "type": "object",
      "properties": {
        "organization_name": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "demographics_status": {
          "type": "string"
        },
        "date_last_modified": {
          "type": "string"
        }
      }
    },
    "PremierAccountingRatio": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "months_of_cash": {
          "type": "string"
        },
        "liquidity": {
          "type": "string"
        },
        "fringe_rate": {
          "type": "string"
        },
        "net_gain_loss": {
          "type": "string"
        }
      }
    },
    "PremierAccreditation": {
      "type": "object",
      "properties": {
        "accreditation": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "PremierAddress": {
      "type": "object",
      "properties": {
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "address_type": {
          "type": "string"
        }
      }
    },
    "PremierAnnualReport": {
      "type": "object",
      "properties": {
        "doc_name": {
          "type": "string"
        },
        "contents": {
          "type": "string"
        },
        "year": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "PremierBalanceSheetComposition": {
      "type": "object",
      "properties": {
        "cash": {
          "type": "integer",
          "format": "int64"
        },
        "investments": {
          "type": "integer",
          "format": "int64"
        },
        "receivables": {
          "type": "integer",
          "format": "int64"
        },
        "gross_land_buildings_and_equipment_lbe": {
          "type": "integer",
          "format": "int64"
        },
        "accumulated_depreciation_as_percent_of_lbe": {
          "type": "string"
        },
        "liabilities_as_percent_of_net_assets": {
          "type": "string"
        },
        "unrestricted_net_assets": {
          "type": "integer",
          "format": "int64"
        },
        "temporarily_restricted_net_assets": {
          "type": "integer",
          "format": "int64"
        },
        "permanently_restricted_net_assets": {
          "type": "integer",
          "format": "int64"
        },
        "restricted_net_assets": {
          "type": "integer",
          "format": "int64"
        },
        "total_net_assets": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PremierBoardLeadershipPractice": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "PremierBoardOfDirector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "company": {
          "type": "string"
        }
      }
    },
    "PremierBusinessModelIndicators": {
      "type": "object",
      "properties": {
        "profitability": {
          "$ref": "#/definitions/PremierProfitability"
        },
        "revenue_composition": {
          "$ref": "#/definitions/PremierRevenueComposition"
        },
        "expense_composition": {
          "$ref": "#/definitions/PremierExpenseComposition"
        },
        "full_cost_components": {
          "$ref": "#/definitions/PremierFullCostComponents"
        }
      }
    },
    "PremierCapitalStructureIndicators": {
      "type": "object",
      "properties": {
        "liquidity": {
          "$ref": "#/definitions/PremierLiquidity"
        },
        "balance_sheet_composition": {
          "$ref": "#/definitions/PremierBalanceSheetComposition"
        }
      }
    },
    "PremierCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "board_members_not_collected": {
          "type": "boolean"
        },
        "staff_not_collected": {
          "type": "boolean"
        },
        "senior_staff_not_collected": {
          "type": "boolean"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierSubcategory"
          }
        },
        "org_does_not_collect_for": {
          "$ref": "#/definitions/PremierOrgDoesNotCollectFor"
        }
      }
    },
    "PremierCharitycheck": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string"
        },
        "organization_info_last_modified": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "organization_name_aka": {
          "type": "string"
        },
        "address_line1": {
          "type": "string"
        },
        "address_line2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_name": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "filing_req_code": {
          "type": "string"
        },
        "charity_check_last_modified": {
          "type": "string"
        },
        "pub78_church_message": {
          "type": "object"
        },
        "pub78_organization_name": {
          "type": "string"
        },
        "pub78_ein": {
          "type": "string"
        },
        "pub78_verified": {
          "type": "string"
        },
        "pub78_city": {
          "type": "string"
        },
        "pub78_state": {
          "type": "string"
        },
        "pub78_indicator": {
          "type": "string"
        },
        "organization_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierOrganizationType"
          }
        },
        "most_recent_pub78": {
          "type": "string"
        },
        "most_recent_irb": {
          "type": "string"
        },
        "bmf_church_message": {
          "type": "object"
        },
        "bmf_organization_name": {
          "type": "string"
        },
        "bmf_ein": {
          "type": "string"
        },
        "bmf_status": {
          "type": "string"
        },
        "most_recent_bmf": {
          "type": "string"
        },
        "bmf_subsection": {
          "type": "string"
        },
        "subsection_description": {
          "type": "string"
        },
        "foundation_code": {
          "type": "string"
        },
        "foundation_code_description": {
          "type": "string"
        },
        "ruling_month": {
          "type": "string"
        },
        "ruling_year": {
          "type": "string"
        },
        "adv_ruling_month": {
          "type": "string"
        },
        "adv_ruling_year": {
          "type": "string"
        },
        "group_exemption": {
          "type": "string"
        },
        "exempt_status_code": {
          "type": "string"
        },
        "ofac_status": {
          "type": "string"
        },
        "revocation_code": {
          "type": "string"
        },
        "revocation_date": {
          "type": "string"
        },
        "reinstatement_date": {
          "type": "string"
        },
        "irs_bmf_pub78_conflict": {
          "type": "string"
        },
        "foundation_509a_status": {
          "type": "string"
        },
        "irb_organization_id": {
          "type": "string"
        },
        "bulletin_number": {
          "type": "string"
        },
        "bulletin_url": {
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "irb_last_modified": {
          "type": "string"
        },
        "report_date": {
          "type": "string"
        },
        "foundation_type_code": {
          "type": "string"
        },
        "foundation_type_description": {
          "type": "string"
        },
        "parent_organizations": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PremierChartingImpactAnswer": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "PremierContractor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "compensation": {
          "type": "string"
        },
        "service_type": {
          "type": "string"
        }
      }
    },
    "PremierData": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/PremierSummary"
        },
        "programs": {
          "$ref": "#/definitions/PremierPrograms"
        },
        "financials": {
          "$ref": "#/definitions/PremierFinancials"
        },
        "operations": {
          "$ref": "#/definitions/PremierOperations"
        },
        "charitycheck": {
          "$ref": "#/definitions/PremierCharitycheck"
        }
      }
    },
    "PremierDemographics": {
      "type": "object",
      "properties": {
        "staff_level_totals": {
          "$ref": "#/definitions/PremierStaffLevelTotals"
        },
        "equity_strategies": {
          "$ref": "#/definitions/PremierEquityStrategies"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierCategory"
          }
        }
      }
    },
    "PremierEquityStrategies": {
      "type": "object",
      "properties": {
        "data_compensation": {
          "type": "boolean"
        },
        "data_disparities": {
          "type": "boolean"
        },
        "data_root_cause": {
          "type": "object"
        },
        "data_programming_goals": {
          "type": "object"
        },
        "data_feedback": {
          "type": "boolean"
        },
        "data_demographics": {
          "type": "object"
        },
        "data_strategic_plan": {
          "type": "boolean"
        },
        "policy_standards": {
          "type": "boolean"
        },
        "policy_promotion": {
          "type": "boolean"
        },
        "policy_evaluation": {
          "type": "boolean"
        },
        "policy_community": {
          "type": "object"
        },
        "policy_leadership": {
          "type": "boolean"
        },
        "policy_satisfaction": {
          "type": "boolean"
        },
        "policy_equity": {
          "type": "boolean"
        },
        "equity_strategy_last_modified": {
          "type": "string"
        }
      }
    },
    "PremierExpenseComposition": {
      "type": "object",
      "properties": {
        "total_expenses_before_depreciation": {
          "type": "integer",
          "format": "int64"
        },
        "total_expenses_percent_change_over_prior_year": {
          "type": "string"
        },
        "personnel": {
          "type": "string"
        },
        "professional_fees": {
          "type": "string"
        },
        "occupancy": {
          "type": "string"
        },
        "interest_expense": {
          "type": "string"
        },
        "pass_through": {
          "type": "string"
        },
        "all_other_expenses": {
          "type": "string"
        }
      }
    },
    "PremierF990Financial": {
      "type": "object",
      "properties": {
        "period_begin": {
          "type": "string"
        },
        "period_end": {
          "type": "string"
        },
        "membership_dues": {
          "type": "number",
          "format": "double"
        },
        "revenue_contributions": {
          "type": "number",
          "format": "double"
        },
        "revenue_govt_grants": {
          "type": "number",
          "format": "double"
        },
        "revenue_program_services": {
          "type": "number",
          "format": "double"
        },
        "revenue_investments": {
          "type": "number",
          "format": "double"
        },
        "revenue_special_events": {
          "type": "number",
          "format": "double"
        },
        "revenue_sales": {
          "type": "number",
          "format": "double"
        },
        "revenue_other": {
          "type": "number",
          "format": "double"
        },
        "revenue_total": {
          "type": "number",
          "format": "double"
        },
        "affiliate_net_payments": {
          "type": "number",
          "format": "double"
        },
        "expense_program_services": {
          "type": "number",
          "format": "double"
        },
        "expense_administration": {
          "type": "number",
          "format": "double"
        },
        "expense_fundraising": {
          "type": "number",
          "format": "double"
        },
        "expenses_total": {
          "type": "number",
          "format": "double"
        },
        "net_gain_loss": {
          "type": "number",
          "format": "double"
        },
        "expense_accounting": {
          "type": "number",
          "format": "double"
        },
        "expense_advertising_promotion": {
          "type": "number",
          "format": "double"
        },
        "expense_info_technology": {
          "type": "number",
          "format": "double"
        },
        "expense_insurance": {
          "type": "number",
          "format": "double"
        },
        "expense_interest": {
          "type": "number",
          "format": "double"
        },
        "expense_investment_management": {
          "type": "number",
          "format": "double"
        },
        "expense_legal": {
          "type": "number",
          "format": "double"
        },
        "expense_pension_plan": {
          "type": "number",
          "format": "double"
        },
        "expense_publications": {
          "type": "number",
          "format": "double"
        },
        "expense_profesional_fundraising": {
          "type": "number",
          "format": "double"
        },
        "assets_total": {
          "type": "number",
          "format": "double"
        },
        "unrestricted_net_assets": {
          "type": "number",
          "format": "double"
        },
        "net_fixed_assets_LBE": {
          "type": "number",
          "format": "double"
        },
        "net_assets_end_of_year": {
          "type": "number",
          "format": "double"
        },
        "other_expense": {
          "type": "number",
          "format": "double"
        },
        "notes_payable_mortgages": {
          "type": "number",
          "format": "double"
        },
        "liabilities_total": {
          "type": "number",
          "format": "double"
        },
        "months_of_cash": {
          "type": "string"
        },
        "part_8_revenue": {
          "$ref": "#/definitions/PremierPart8Revenue"
        },
        "part_9_expenses": {
          "$ref": "#/definitions/PremierPart9Expenses"
        },
        "part_10_balance_sheet": {
          "$ref": "#/definitions/PremierPart10BalanceSheet"
        }
      }
    },
    "PremierFeedbackResponse": {
      "type": "object",
      "properties": {
        "question_text": {
          "type": "string"
        },
        "response_text": {
          "type": "string"
        }
      }
    },
    "PremierFinancialDocument": {
      "type": "object",
      "properties": {
        "form990_name": {
          "type": "string"
        },
        "form990_year": {
          "type": "string"
        },
        "form990_url": {
          "type": "string"
        },
        "form990_source": {
          "type": "string"
        }
      }
    },
    "PremierFinancialStatement": {
      "type": "object",
      "properties": {
        "fiscal_year_begin": {
          "type": "string"
        },
        "fiscal_year_end": {
          "type": "string"
        },
        "auditing_company": {
          "type": "string"
        },
        "doc_name": {
          "type": "string"
        },
        "document_url": {
          "type": "string"
        }
      }
    },
    "PremierFinancialTrendsAnalysis": {
      "type": "object",
      "properties": {
        "fiscal_year": {
          "type": "string"
        },
        "business_model_indicators": {
          "$ref": "#/definitions/PremierBusinessModelIndicators"
        },
        "capital_structure_indicators": {
          "$ref": "#/definitions/PremierCapitalStructureIndicators"
        },
        "key_data_checks": {
          "$ref": "#/definitions/PremierKeyDataChecks"
        }
      }
    },
    "PremierFinancials": {
      "type": "object",
      "properties": {
        "most_recent_year_financials": {
          "$ref": "#/definitions/PremierMostRecentYearFinancials"
        },
        "f990_financials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierF990Financial"
          }
        },
        "pf990_financials": {
          "type": "object"
        },
        "f990ez_financials": {
          "type": "object"
        },
        "financial_trends_analysis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFinancialTrendsAnalysis"
          }
        },
        "financial_documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFinancialDocument"
          }
        },
        "forms_990T": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierForms990T"
          }
        },
        "funding_needs": {
          "type": "object"
        },
        "funding_sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFundingSource"
          }
        },
        "financial_statements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFinancialStatement"
          }
        },
        "annual_reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAnnualReport"
          }
        },
        "accounting_ratios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAccountingRatio"
          }
        }
      }
    },
    "PremierFormerlyKnownA": {
      "type": "object",
      "properties": {
        "former_name": {
          "type": "string"
        },
        "year": {
          "type": "string"
        }
      }
    },
    "PremierForms990T": {
      "type": "object",
      "properties": {
        "form990t_name": {
          "type": "string"
        },
        "form990t_url": {
          "type": "string"
        }
      }
    },
    "PremierFullCostComponents": {
      "type": "object",
      "properties": {
        "total_expenses_after_depreciation": {
          "type": "integer",
          "format": "int64"
        },
        "one_month_of_savings": {
          "type": "integer",
          "format": "int64"
        },
        "debt_principal_payment": {
          "type": "integer",
          "format": "int64"
        },
        "fixed_asset_additions": {
          "type": "integer",
          "format": "int64"
        },
        "total_full_costs_estimated": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PremierFundingSource": {
      "type": "object",
      "properties": {
        "funding_source": {
          "type": "string"
        },
        "funding_amount": {
          "type": "string"
        }
      }
    },
    "PremierHighestPaidEmployee": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compensation": {
          "type": "number",
          "format": "double"
        },
        "related_compensation": {
          "type": "number",
          "format": "double"
        },
        "other_compensation": {
          "type": "number",
          "format": "double"
        },
        "hours": {
          "type": "string"
        },
        "benefits": {
          "type": "string"
        }
      }
    },
    "PremierKeyDataChecks": {
      "type": "object",
      "properties": {
        "data_check_errors": {
          "type": "boolean"
        }
      }
    },
    "PremierLettersOfDetermination": {
      "type": "object",
      "properties": {
        "letter_of_determination_doc_name": {
          "type": "string"
        },
        "letter_of_determination_url": {
          "type": "string"
        }
      }
    },
    "PremierLiquidity": {
      "type": "object",
      "properties": {
        "months_of_cash": {
          "type": "number",
          "format": "double"
        },
        "months_of_cash_and_investments": {
          "type": "number",
          "format": "double"
        },
        "months_of_estimated_liquid_unrestricted_net_assets": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PremierMostRecentYearFinancials": {
      "type": "object",
      "properties": {
        "period_begin": {
          "type": "string"
        },
        "period_end": {
          "type": "string"
        },
        "fiscal_year": {
          "type": "integer",
          "format": "int32"
        },
        "form_type": {
          "type": "string"
        },
        "data_source": {
          "type": "string"
        },
        "assets_total": {
          "type": "number",
          "format": "double"
        },
        "total_liabilities": {
          "type": "number",
          "format": "double"
        },
        "revenue_contributions": {
          "type": "number",
          "format": "double"
        },
        "revenue_govt_grants": {
          "type": "number",
          "format": "double"
        },
        "revenue_program_services": {
          "type": "number",
          "format": "double"
        },
        "revenue_investments": {
          "type": "number",
          "format": "double"
        },
        "revenue_special_events": {
          "type": "number",
          "format": "double"
        },
        "revenue_sales": {
          "type": "number",
          "format": "double"
        },
        "revenue_other": {
          "type": "number",
          "format": "double"
        },
        "total_revenue": {
          "type": "number",
          "format": "double"
        },
        "expense_administration": {
          "type": "number",
          "format": "double"
        },
        "expense_program_services": {
          "type": "number",
          "format": "double"
        },
        "expense_fundraising": {
          "type": "number",
          "format": "double"
        },
        "expense_accounting": {
          "type": "number",
          "format": "double"
        },
        "expense_advertising_promotion": {
          "type": "number",
          "format": "double"
        },
        "expense_info_technology": {
          "type": "number",
          "format": "double"
        },
        "expense_insurance": {
          "type": "number",
          "format": "double"
        },
        "expense_interest": {
          "type": "number",
          "format": "double"
        },
        "expense_investment_management": {
          "type": "number",
          "format": "double"
        },
        "expense_legal": {
          "type": "number",
          "format": "double"
        },
        "expense_pension_plan": {
          "type": "number",
          "format": "double"
        },
        "expense_professional_fundraising": {
          "type": "number",
          "format": "double"
        },
        "unrestricted_net_assets": {
          "type": "number",
          "format": "double"
        },
        "net_fixed_assets_LBE": {
          "type": "number",
          "format": "double"
        },
        "notes_payable_mortgages": {
          "type": "number",
          "format": "double"
        },
        "months_of_cash": {
          "type": "string"
        },
        "expense_professional_fees": {
          "type": "number",
          "format": "double"
        },
        "expense_publications": {
          "type": "number",
          "format": "double"
        },
        "expense_operating_admin": {
          "type": "number",
          "format": "double"
        },
        "expense_gifts_grants_paid": {
          "type": "number",
          "format": "double"
        },
        "total_expense_disbursements": {
          "type": "number",
          "format": "double"
        },
        "expenses_total": {
          "type": "number",
          "format": "double"
        },
        "net_gain_loss": {
          "type": "number",
          "format": "double"
        },
        "expense_salaries_employee_benefits": {
          "type": "number",
          "format": "double"
        },
        "cash_and_equivalent_assets": {
          "type": "number",
          "format": "double"
        },
        "investments_us_government": {
          "type": "number",
          "format": "double"
        },
        "investments_stock": {
          "type": "number",
          "format": "double"
        },
        "investments_bonds": {
          "type": "number",
          "format": "double"
        },
        "investments_other": {
          "type": "number",
          "format": "double"
        },
        "land_buildings_equipment": {
          "type": "number",
          "format": "double"
        },
        "other_assets": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PremierNaicsCode": {
      "type": "object",
      "properties": {
        "naics_code": {
          "type": "string"
        },
        "naics_description": {
          "type": "string"
        }
      }
    },
    "PremierNteeCode": {
      "type": "object",
      "properties": {
        "ntee_code": {
          "type": "string"
        },
        "primary_code": {
          "type": "string"
        },
        "primary_description": {
          "type": "string"
        },
        "sub_code": {
          "type": "string"
        },
        "sub_description": {
          "type": "string"
        }
      }
    },
    "PremierOfficersDirectorsKeyEmployee": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compensation": {
          "type": "number",
          "format": "double"
        },
        "related_compensation": {
          "type": "number",
          "format": "double"
        },
        "other_compensation": {
          "type": "number",
          "format": "double"
        },
        "hours": {
          "type": "string"
        },
        "benefits": {
          "type": "string"
        }
      }
    },
    "PremierOperations": {
      "type": "object",
      "properties": {
        "leader_name": {
          "type": "string"
        },
        "leader_profile": {
          "type": "string"
        },
        "co_leader_name": {
          "type": "string"
        },
        "co_leader_profile": {
          "type": "string"
        },
        "no_of_employees": {
          "type": "integer",
          "format": "int32"
        },
        "no_of_volunteers": {
          "type": "integer",
          "format": "int32"
        },
        "organization_email": {
          "type": "string"
        },
        "organization_details_year": {
          "type": "integer",
          "format": "int32"
        },
        "officers_directors_key_employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierOfficersDirectorsKeyEmployee"
          }
        },
        "highest_paid_employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierHighestPaidEmployee"
          }
        },
        "employees_greater_than_100K": {
          "type": "integer",
          "format": "int32"
        },
        "board_chair_name": {
          "type": "string"
        },
        "board_chair_affiliation": {
          "type": "string"
        },
        "board_chair_term_start": {
          "type": "string"
        },
        "board_chair_term_end": {
          "type": "string"
        },
        "board_co_chair_name": {
          "type": "string"
        },
        "board_co_chair_affiliation": {
          "type": "string"
        },
        "board_co_chair_term_start": {
          "type": "string"
        },
        "board_co_chair_term_end": {
          "type": "string"
        },
        "board_of_directors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierBoardOfDirector"
          }
        },
        "board_leadership_practices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierBoardLeadershipPractice"
          }
        },
        "organization_demographics": {
          "$ref": "#/definitions/PremierOrganizationDemographics"
        },
        "demographics": {
          "$ref": "#/definitions/PremierDemographics"
        },
        "contractors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierContractor"
          }
        },
        "blog_url": {
          "type": "string"
        },
        "fundraising_contact_name": {
          "type": "string"
        },
        "fundraising_contact_title": {
          "type": "string"
        },
        "fundraising_contact_email": {
          "type": "string"
        },
        "fundraising_contact_phone": {
          "type": "string"
        },
        "preparer_firm_name": {
          "type": "string"
        },
        "preparer_firm_address": {
          "type": "string"
        },
        "preparer_firm_ein": {
          "type": "string"
        },
        "preparer_firm_phone": {
          "type": "string"
        },
        "senior_staff": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "other_staff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierOtherStaff"
          }
        },
        "accreditations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAccreditation"
          }
        }
      }
    },
    "PremierOrgDoesNotCollectFor": {
      "type": "object",
      "properties": {
        "board_members": {
          "type": "boolean"
        },
        "full_time_staff": {
          "type": "boolean"
        },
        "part_time_staff": {
          "type": "boolean"
        },
        "all_staff": {
          "type": "boolean"
        },
        "senior_staff": {
          "type": "boolean"
        },
        "executive_director": {
          "type": "boolean"
        }
      }
    },
    "PremierOrganizationDemographics": {
      "type": "object",
      "properties": {
        "total_board_members": {
          "type": "object"
        },
        "total_fulltime_staff": {
          "type": "object"
        },
        "total_parttime_staff": {
          "type": "object"
        },
        "total_staff": {
          "type": "integer",
          "format": "int32"
        },
        "total_senior_staff": {
          "type": "object"
        },
        "tracks_staffboardvol_retention": {
          "type": "boolean"
        },
        "tracks_staffboard_income": {
          "type": "boolean"
        },
        "tracks_staffboard_age": {
          "type": "boolean"
        },
        "tracks_vendor_diversity": {
          "type": "boolean"
        },
        "has_diversity_committee": {
          "type": "boolean"
        },
        "has_diversity_manager": {
          "type": "boolean"
        },
        "diversity_manager_fulltime": {
          "type": "boolean"
        },
        "diversity_plan": {
          "type": "boolean"
        },
        "supports_diversity_via_other_methods": {
          "type": "boolean"
        },
        "equity_strategies": {
          "$ref": "#/definitions/PremierEquityStrategies"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierCategory"
          }
        }
      }
    },
    "PremierOrganizationType": {
      "type": "object",
      "properties": {
        "organization_type": {
          "type": "string"
        },
        "deductibility_limitation": {
          "type": "string"
        },
        "deductibility_status_description": {
          "type": "string"
        }
      }
    },
    "PremierOtherDocument": {
      "type": "object",
      "properties": {
        "document_name": {
          "type": "string"
        },
        "document_year": {
          "type": "string"
        },
        "otherdocument_contents": {
          "type": "string"
        },
        "document_url": {
          "type": "string"
        }
      }
    },
    "PremierOtherStaff": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PremierPart10BalanceSheet": {
      "type": "object",
      "properties": {
        "cash_boy": {
          "type": "number",
          "format": "double"
        },
        "cash_eoy": {
          "type": "number",
          "format": "double"
        },
        "savings_boy": {
          "type": "number",
          "format": "double"
        },
        "savings_eoy": {
          "type": "number",
          "format": "double"
        },
        "pledges_grants_boy": {
          "type": "number",
          "format": "double"
        },
        "pledges_grants_eoy": {
          "type": "number",
          "format": "double"
        },
        "accounts_receivable_boy": {
          "type": "number",
          "format": "double"
        },
        "accounts_receivable_eoy": {
          "type": "number",
          "format": "double"
        },
        "qualified_receivable_boy": {
          "type": "number",
          "format": "double"
        },
        "qualified_receivable_eoy": {
          "type": "number",
          "format": "double"
        },
        "disqualified_receivable_boy": {
          "type": "number",
          "format": "double"
        },
        "disqualified_receivable_eoy": {
          "type": "number",
          "format": "double"
        },
        "loans_receivable_boy": {
          "type": "number",
          "format": "double"
        },
        "loans_receivable_eoy": {
          "type": "number",
          "format": "double"
        },
        "inventory_boy": {
          "type": "number",
          "format": "double"
        },
        "inventory_eoy": {
          "type": "number",
          "format": "double"
        },
        "prepaid_boy": {
          "type": "number",
          "format": "double"
        },
        "prepaid_eoy": {
          "type": "number",
          "format": "double"
        },
        "lbe_base": {
          "type": "number",
          "format": "double"
        },
        "less_depreciation": {
          "type": "number",
          "format": "double"
        },
        "lbe_boy": {
          "type": "number",
          "format": "double"
        },
        "lbe_eoy": {
          "type": "number",
          "format": "double"
        },
        "public_securities_boy": {
          "type": "number",
          "format": "double"
        },
        "public_securities_eoy": {
          "type": "number",
          "format": "double"
        },
        "other_securities_boy": {
          "type": "number",
          "format": "double"
        },
        "other_securities_eoy": {
          "type": "number",
          "format": "double"
        },
        "investment_programs_boy": {
          "type": "number",
          "format": "double"
        },
        "investment_programs_eoy": {
          "type": "number",
          "format": "double"
        },
        "intangible_assets_boy": {
          "type": "number",
          "format": "double"
        },
        "intangible_assets_eoy": {
          "type": "number",
          "format": "double"
        },
        "other_assets_boy": {
          "type": "number",
          "format": "double"
        },
        "other_assets_eoy": {
          "type": "number",
          "format": "double"
        },
        "assets_total_boy": {
          "type": "number",
          "format": "double"
        },
        "assets_total_eoy": {
          "type": "number",
          "format": "double"
        },
        "accounts_payable_boy": {
          "type": "number",
          "format": "double"
        },
        "accounts_payable_eoy": {
          "type": "number",
          "format": "double"
        },
        "grants_payable_boy": {
          "type": "number",
          "format": "double"
        },
        "grants_payable_eoy": {
          "type": "number",
          "format": "double"
        },
        "deferred_revenue_boy": {
          "type": "number",
          "format": "double"
        },
        "deferred_revenue_eoy": {
          "type": "number",
          "format": "double"
        },
        "tax_exempt_bonds_boy": {
          "type": "number",
          "format": "double"
        },
        "tax_exempt_bonds_eoy": {
          "type": "number",
          "format": "double"
        },
        "escrow_liability_boy": {
          "type": "number",
          "format": "double"
        },
        "escrow_liability_eoy": {
          "type": "number",
          "format": "double"
        },
        "payable_officiers_boy": {
          "type": "number",
          "format": "double"
        },
        "payable_officiers_eoy": {
          "type": "number",
          "format": "double"
        },
        "secured_notes_payable_boy": {
          "type": "number",
          "format": "double"
        },
        "secured_notes_payable_eoy": {
          "type": "number",
          "format": "double"
        },
        "unsecured_notes_payable_boy": {
          "type": "number",
          "format": "double"
        },
        "unsecured_notes_payable_eoy": {
          "type": "number",
          "format": "double"
        },
        "liability_other_boy": {
          "type": "number",
          "format": "double"
        },
        "liability_other_eoy": {
          "type": "number",
          "format": "double"
        },
        "liability_total_boy": {
          "type": "number",
          "format": "double"
        },
        "liability_total_eoy": {
          "type": "number",
          "format": "double"
        },
        "unrestricted_boy": {
          "type": "number",
          "format": "double"
        },
        "unrestricted_eoy": {
          "type": "number",
          "format": "double"
        },
        "temporarily_restricted_boy": {
          "type": "number",
          "format": "double"
        },
        "temporarily_restricted_eoy": {
          "type": "number",
          "format": "double"
        },
        "permanently_restricted_boy": {
          "type": "number",
          "format": "double"
        },
        "permanently_restricted_eoy": {
          "type": "number",
          "format": "double"
        },
        "restricted_boy": {
          "type": "number",
          "format": "double"
        },
        "restricted_eoy": {
          "type": "number",
          "format": "double"
        },
        "capital_boy": {
          "type": "number",
          "format": "double"
        },
        "capital_eoy": {
          "type": "number",
          "format": "double"
        },
        "paid_in_boy": {
          "type": "number",
          "format": "double"
        },
        "paid_in_eoy": {
          "type": "number",
          "format": "double"
        },
        "retained_boy": {
          "type": "number",
          "format": "double"
        },
        "retained_eoy": {
          "type": "number",
          "format": "double"
        },
        "net_total_boy": {
          "type": "number",
          "format": "double"
        },
        "net_total_eoy": {
          "type": "number",
          "format": "double"
        },
        "balances_boy": {
          "type": "number",
          "format": "double"
        },
        "balances_eoy": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PremierPart8Revenue": {
      "type": "object",
      "properties": {
        "federated_campaigns": {
          "type": "number",
          "format": "double"
        },
        "membership_dues": {
          "type": "number",
          "format": "double"
        },
        "fundraising_events": {
          "type": "number",
          "format": "double"
        },
        "related_orgs": {
          "type": "number",
          "format": "double"
        },
        "government_grants": {
          "type": "number",
          "format": "double"
        },
        "contributions_other": {
          "type": "number",
          "format": "double"
        },
        "contributions_noncash": {
          "type": "number",
          "format": "double"
        },
        "contributions_all": {
          "type": "number",
          "format": "double"
        },
        "service_revenue": {
          "type": "number",
          "format": "double"
        },
        "income_investment": {
          "type": "number",
          "format": "double"
        },
        "income_bonds": {
          "type": "number",
          "format": "double"
        },
        "royalties": {
          "type": "number",
          "format": "double"
        },
        "rents_real": {
          "type": "number",
          "format": "double"
        },
        "rents_personal": {
          "type": "number",
          "format": "double"
        },
        "rent_expenses_real": {
          "type": "number",
          "format": "double"
        },
        "rent_expenses_personal": {
          "type": "number",
          "format": "double"
        },
        "rent_income_real": {
          "type": "number",
          "format": "double"
        },
        "rent_income_personal": {
          "type": "number",
          "format": "double"
        },
        "net_rental": {
          "type": "number",
          "format": "double"
        },
        "gross_securities": {
          "type": "number",
          "format": "double"
        },
        "gross_other": {
          "type": "number",
          "format": "double"
        },
        "cost_securities": {
          "type": "number",
          "format": "double"
        },
        "cost_other": {
          "type": "number",
          "format": "double"
        },
        "gain_securities": {
          "type": "number",
          "format": "double"
        },
        "gain_other": {
          "type": "number",
          "format": "double"
        },
        "net_sales": {
          "type": "number",
          "format": "double"
        },
        "contributions": {
          "type": "number",
          "format": "double"
        },
        "gross_special": {
          "type": "number",
          "format": "double"
        },
        "direct_expenses": {
          "type": "number",
          "format": "double"
        },
        "net_special": {
          "type": "number",
          "format": "double"
        },
        "gaming_income": {
          "type": "number",
          "format": "double"
        },
        "gaming_expenses": {
          "type": "number",
          "format": "double"
        },
        "gaming_net": {
          "type": "number",
          "format": "double"
        },
        "gross_sales": {
          "type": "number",
          "format": "double"
        },
        "cost_goods": {
          "type": "number",
          "format": "double"
        },
        "gross_profit": {
          "type": "number",
          "format": "double"
        },
        "revenue_other": {
          "type": "number",
          "format": "double"
        },
        "revenue_total": {
          "type": "number",
          "format": "double"
        },
        "service_description_a": {
          "type": "string"
        },
        "service_code_a": {
          "type": "number",
          "format": "double"
        },
        "service_description_b": {
          "type": "string"
        },
        "service_amount_a": {
          "type": "number",
          "format": "double"
        },
        "service_code_b": {
          "type": "number",
          "format": "double"
        },
        "service_amount_b": {
          "type": "number",
          "format": "double"
        },
        "service_description_c": {
          "type": "string"
        },
        "service_code_c": {
          "type": "number",
          "format": "double"
        },
        "service_amount_c": {
          "type": "number",
          "format": "double"
        },
        "service_description_d": {
          "type": "string"
        },
        "service_code_d": {
          "type": "number",
          "format": "double"
        },
        "service_amount_d": {
          "type": "number",
          "format": "double"
        },
        "service_description_e": {
          "type": "string"
        },
        "service_code_e": {
          "type": "number",
          "format": "double"
        },
        "service_amount_e": {
          "type": "number",
          "format": "double"
        },
        "service_description_f": {
          "type": "string"
        },
        "service_code_f": {
          "type": "number",
          "format": "double"
        },
        "service_amount_f": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PremierPart9Expenses": {
      "type": "object",
      "properties": {
        "grants_orgs_us": {
          "type": "number",
          "format": "double"
        },
        "grants_individuals_us": {
          "type": "number",
          "format": "double"
        },
        "grants_orgs_non_us": {
          "type": "number",
          "format": "double"
        },
        "benefits_total": {
          "type": "number",
          "format": "double"
        },
        "compensation_current": {
          "type": "number",
          "format": "double"
        },
        "compensation_disqualified": {
          "type": "number",
          "format": "double"
        },
        "wages_total": {
          "type": "number",
          "format": "double"
        },
        "pension_total": {
          "type": "number",
          "format": "double"
        },
        "employee_benefits_total": {
          "type": "number",
          "format": "double"
        },
        "payroll_tax_total": {
          "type": "number",
          "format": "double"
        },
        "fees_management": {
          "type": "number",
          "format": "double"
        },
        "fees_legal": {
          "type": "number",
          "format": "double"
        },
        "accounting_fees_total": {
          "type": "number",
          "format": "double"
        },
        "fees_lobbying": {
          "type": "number",
          "format": "double"
        },
        "fundraising_total": {
          "type": "number",
          "format": "double"
        },
        "fees_investments": {
          "type": "number",
          "format": "double"
        },
        "fees_other": {
          "type": "number",
          "format": "double"
        },
        "ads_promo": {
          "type": "number",
          "format": "double"
        },
        "office": {
          "type": "number",
          "format": "double"
        },
        "information_technology": {
          "type": "number",
          "format": "double"
        },
        "expense_royalties": {
          "type": "number",
          "format": "double"
        },
        "occupancy_total": {
          "type": "number",
          "format": "double"
        },
        "travel_total": {
          "type": "number",
          "format": "double"
        },
        "entertain_officials": {
          "type": "number",
          "format": "double"
        },
        "meetings_total": {
          "type": "number",
          "format": "double"
        },
        "interest_total": {
          "type": "number",
          "format": "double"
        },
        "payments": {
          "type": "number",
          "format": "double"
        },
        "depreciation_total": {
          "type": "number",
          "format": "double"
        },
        "insurance": {
          "type": "number",
          "format": "double"
        },
        "expense_a_total": {
          "type": "number",
          "format": "double"
        },
        "expense_b_total": {
          "type": "number",
          "format": "double"
        },
        "expense_c_total": {
          "type": "number",
          "format": "double"
        },
        "expense_d_total": {
          "type": "number",
          "format": "double"
        },
        "expense_e_total": {
          "type": "number",
          "format": "double"
        },
        "expenses_total": {
          "type": "number",
          "format": "double"
        },
        "total_program_services": {
          "type": "number",
          "format": "double"
        },
        "total_management": {
          "type": "number",
          "format": "double"
        },
        "total_fundraising": {
          "type": "number",
          "format": "double"
        },
        "expense_joint_total": {
          "type": "number",
          "format": "double"
        },
        "joint_services": {
          "type": "number",
          "format": "double"
        },
        "joint_general": {
          "type": "number",
          "format": "double"
        },
        "joint_fundraising": {
          "type": "number",
          "format": "double"
        },
        "all_other_expenses": {
          "type": "number",
          "format": "double"
        },
        "expense_a_description": {
          "type": "string"
        },
        "expense_b_description": {
          "type": "string"
        },
        "expense_c_description": {
          "type": "string"
        },
        "expense_d_description": {
          "type": "string"
        }
      }
    },
    "PremierPcsCode": {
      "type": "object",
      "properties": {
        "pcs_facet": {
          "type": "string"
        },
        "pcs_code": {
          "type": "string"
        },
        "pcs_description": {
          "type": "string"
        },
        "pcs_parent_code": {
          "type": "string"
        },
        "pcs_parent_description": {
          "type": "string"
        }
      }
    },
    "PremierPhoto": {
      "type": "object",
      "properties": {
        "picture_url": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        }
      }
    },
    "PremierPlatinumEvaluationDocument": {
      "type": "object",
      "properties": {
        "document_name": {
          "type": "string"
        },
        "document_year": {
          "type": "string"
        },
        "document_url": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        }
      }
    },
    "PremierProfileDataChangeDates": {
      "type": "object",
      "properties": {
        "primary_address_last_modified": {
          "type": "string"
        },
        "payment_address_last_modified": {
          "type": "string"
        },
        "primary_contact_email_last_modified": {
          "type": "string"
        },
        "fundraising_contact_email_last_modified": {
          "type": "string"
        },
        "org_website_last_modified": {
          "type": "string"
        },
        "seal_last_modified": {
          "type": "string"
        },
        "dei_last_modified": {
          "type": "string"
        }
      }
    },
    "PremierProfileSdgCode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PremierProfitability": {
      "type": "object",
      "properties": {
        "surplus_as_percent_of_expenses_before_depreciation": {
          "type": "string"
        },
        "surplus_as_percent_of_expenses_after_depreciation": {
          "type": "string"
        }
      }
    },
    "PremierProgram": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "target_population": {
          "type": "string"
        },
        "target_population2": {
          "type": "string"
        },
        "budget": {
          "type": "string"
        },
        "areas_served": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PremierProgramPlatinumMetric": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "years": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierYear"
          }
        },
        "target_population_served": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "type_of_metric": {
          "type": "string"
        },
        "direction_of_success": {
          "type": "string"
        }
      }
    },
    "PremierPrograms": {
      "type": "object",
      "properties": {
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierProgram"
          }
        },
        "platinum_metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierProgramPlatinumMetric"
          }
        },
        "charting_impact_answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierChartingImpactAnswer"
          }
        }
      }
    },
    "PremierResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "took": {
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "data": {
          "$ref": "#/definitions/PremierData"
        }
      }
    },
    "PremierRevenueComposition": {
      "type": "object",
      "properties": {
        "total_revenue_unrestricted_and_restricted": {
          "type": "integer",
          "format": "int64"
        },
        "total_revenue_percent_change_over_prior_year": {
          "type": "string"
        },
        "total_revenue_prior": {
          "type": "number",
          "format": "double"
        },
        "program_svcs_revenue": {
          "type": "string"
        },
        "membership_dues": {
          "type": "string"
        },
        "investment_income": {
          "type": "string"
        },
        "government_grants": {
          "type": "string"
        },
        "other_grants_contributions": {
          "type": "string"
        },
        "other_revenue": {
          "type": "string"
        }
      }
    },
    "PremierSdg": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PremierSicCode": {
      "type": "object",
      "properties": {
        "sic_code": {
          "type": "string"
        },
        "sic_description": {
          "type": "string"
        }
      }
    },
    "PremierStaffLevel": {
      "type": "object",
      "properties": {
        "staff_level": {
          "type": "string"
        },
        "count": {
          "type": "object"
        }
      }
    },
    "PremierStaffLevelTotals": {
      "type": "object",
      "properties": {
        "total_board_members": {
          "type": "string"
        },
        "total_staff": {
          "type": "string"
        },
        "total_senior_staff": {
          "type": "string"
        }
      }
    },
    "PremierSubcategory": {
      "type": "object",
      "properties": {
        "subcategory": {
          "type": "string"
        },
        "staff_levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierStaffLevel"
          }
        },
        "board_members": {
          "type": "integer",
          "format": "int32"
        },
        "staff": {
          "type": "integer",
          "format": "int32"
        },
        "senior_staff": {
          "type": "integer",
          "format": "int32"
        },
        "reported_by_ceo": {
          "type": "boolean"
        },
        "reported_by_coceo": {
          "type": "object"
        }
      }
    },
    "PremierSummary": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "integer",
          "format": "int32"
        },
        "organization_name": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "bridge_id": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "govt_registered_name": {
          "type": "string"
        },
        "also_known_as": {
          "type": "string"
        },
        "fiscal_year_end": {
          "type": "string"
        },
        "fiscal_year_start": {
          "type": "string"
        },
        "affiliation_code": {
          "type": "string"
        },
        "affiliation_description": {
          "type": "string"
        },
        "contact_name": {
          "type": "string"
        },
        "contact_title": {
          "type": "string"
        },
        "contact_email": {
          "type": "string"
        },
        "contact_phone": {
          "type": "string"
        },
        "contact_fax": {
          "type": "string"
        },
        "gs_profile_update_level": {
          "type": "string"
        },
        "gs_profile_update_level_logo": {
          "type": "string"
        },
        "deductibility_code": {
          "type": "string"
        },
        "deductibility_description": {
          "type": "string"
        },
        "donation_to_ein": {
          "type": "string"
        },
        "donation_to_name": {
          "type": "string"
        },
        "areas_served_narrative": {
          "type": "string"
        },
        "ruling_year": {
          "type": "string"
        },
        "gs_public_report": {
          "type": "string"
        },
        "gs_pro_pdf": {
          "type": "string"
        },
        "gs_financial_trends_analysis_pdf": {
          "type": "string"
        },
        "impact_statement": {
          "type": "string"
        },
        "subsection_code": {
          "type": "string"
        },
        "subsection_description": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "mission": {
          "type": "string"
        },
        "demographics_status": {
          "type": "string"
        },
        "ntee_code": {
          "type": "string"
        },
        "sdg": {
          "$ref": "#/definitions/PremierSdg"
        },
        "website_url": {
          "type": "string"
        },
        "year_founded": {
          "type": "string"
        },
        "year_incorporated": {
          "type": "string"
        },
        "first_on_bmf_date": {
          "type": "string"
        },
        "last_on_bmf_date": {
          "type": "string"
        },
        "profile_data_change_dates": {
          "$ref": "#/definitions/PremierProfileDataChangeDates"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierAddress"
          }
        },
        "affiliations": {
          "type": "object"
        },
        "awards": {
          "type": "object"
        },
        "formerly_known_as": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFormerlyKnownA"
          }
        },
        "forms_1023_1024": {
          "type": "object"
        },
        "letters_of_determination": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierLettersOfDetermination"
          }
        },
        "letters_of_dissolution": {
          "type": "object"
        },
        "ntee_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierNteeCode"
          }
        },
        "naics_code": {
          "$ref": "#/definitions/PremierNaicsCode"
        },
        "sic_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierSicCode"
          }
        },
        "platinum_evaluation_documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierPlatinumEvaluationDocument"
          }
        },
        "other_documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierOtherDocument"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierPhoto"
          }
        },
        "social_media_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "telephone_numbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierTelephoneNumber"
          }
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierVideo"
          }
        },
        "org_collect_feedback": {
          "type": "boolean"
        },
        "org_feedback_example": {
          "type": "string"
        },
        "org_quiz_interest": {
          "type": "boolean"
        },
        "org_learn_more": {
          "type": "boolean"
        },
        "feedback_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierFeedbackResponse"
          }
        },
        "pcs_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierPcsCode"
          }
        },
        "profile_sdg_codes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PremierProfileSdgCode"
          }
        },
        "is_national_hq": {
          "type": "boolean"
        },
        "is_non_bmf_org": {
          "type": "boolean"
        }
      }
    },
    "PremierTelephoneNumber": {
      "type": "object",
      "properties": {
        "telephone_number": {
          "type": "string"
        },
        "telephone_type": {
          "type": "string"
        }
      }
    },
    "PremierVideo": {
      "type": "object",
      "properties": {
        "video_caption": {
          "type": "string"
        },
        "video_url": {
          "type": "string"
        }
      }
    },
    "PremierYear": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Exception": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        },
        "localizedMessage": {
          "type": "string"
        }
      }
    },
    "Function0": {
      "type": "object"
    },
    "Function0Object": {
      "type": "object"
    },
    "LongRunningTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "task": {
          "$ref": "#/definitions/Function0Object"
        },
        "taskStatus": {
          "type": "string",
          "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED"]
        },
        "result": {
          "type": "object"
        },
        "error": {
          "$ref": "#/definitions/Exception"
        }
      }
    },
    "LongRunningTaskObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "task": {
          "$ref": "#/definitions/Function0Object"
        },
        "taskStatus": {
          "type": "string",
          "enum": ["PENDING", "RUNNING", "COMPLETED", "FAILED"]
        },
        "result": {
          "type": "object"
        },
        "error": {
          "$ref": "#/definitions/Exception"
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "classLoaderName": {
          "type": "string"
        },
        "moduleName": {
          "type": "string"
        },
        "moduleVersion": {
          "type": "string"
        },
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "nativeMethod": {
          "type": "boolean"
        },
        "className": {
          "type": "string"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        },
        "localizedMessage": {
          "type": "string"
        }
      }
    },
    "IndexRequest": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "restartIndex": {
          "type": "boolean"
        }
      }
    },
    "AggregateDashboardResponse": {
      "type": "object",
      "properties": {
        "yourTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "granteeTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "foundationProposalSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregateFoundationProposalSummary"
          }
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantPayment"
          }
        }
      }
    },
    "AggregateFoundationProposalSummary": {
      "type": "object",
      "properties": {
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "pipelineProposalSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineProposalSummary"
          }
        }
      }
    },
    "AggregateGrantAnalysis": {
      "type": "object",
      "properties": {
        "totalAmountRequested": {
          "type": "number",
          "format": "double"
        },
        "totalAmountAwarded": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AnvilPDFFieldResponse": {
      "type": "object",
      "properties": {
        "anvilPDFField": {
          "$ref": "#/definitions/AnvilPDFField"
        },
        "response": {
          "type": "string"
        }
      }
    },
    "AnvilPDFFieldResponses": {
      "type": "object",
      "properties": {
        "anvilPDfFieldResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnvilPDFFieldResponse"
          }
        }
      }
    },
    "AnvilPaymentDetails": {
      "type": "object",
      "properties": {
        "bankName": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "routingNumber": {
          "type": "string"
        },
        "wireRoutingNumber": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "submittedDate": {
          "type": "string"
        },
        "submittedUser": {
          "type": "string"
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "defaultFractionDigits": {
          "type": "integer",
          "format": "int32"
        },
        "numericCode": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "numericCodeAsString": {
          "type": "string"
        }
      }
    },
    "DonorActivity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "donorEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "details": {
          "type": "string"
        },
        "additionalInfo": {
          "$ref": "#/definitions/DonorActivityAdditionalInfo"
        },
        "type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DonorActivityAdditionalInfo": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/TipTapTextBlock"
        }
      }
    },
    "DonorContribution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "contributedBy": {
          "type": "string",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "contributedAt": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "submissionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorContributionComment"
          }
        },
        "tagList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorTag"
          }
        }
      }
    },
    "DonorContributionComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "donorContributionId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "comment": {
          "type": "string"
        },
        "createById": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedById": {
          "type": "string",
          "format": "uuid"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/UserDetails"
        },
        "updatedByUser": {
          "$ref": "#/definitions/UserDetails"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "DonorData": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DonorEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorData"
          }
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "totalContribution": {
          "type": "number",
          "format": "double"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorTag"
          }
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorRelationship"
          }
        },
        "contributions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorContribution"
          }
        },
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorActivity"
          }
        }
      }
    },
    "DonorRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "fromEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonorData"
          }
        },
        "toEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "fromEntity": {
          "$ref": "#/definitions/DonorEntity"
        },
        "toEntity": {
          "$ref": "#/definitions/DonorEntity"
        }
      }
    },
    "DonorTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "color": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EntityDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "FirstFormDetails": {
      "type": "object",
      "properties": {
        "formTitle": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        }
      }
    },
    "FormBuilder": {
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "title": {
          "type": "string"
        },
        "submitButtonText": {
          "type": "string"
        }
      }
    },
    "FoundationProposalSummary": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalStageResult"
          }
        }
      }
    },
    "GrantAdditionalInfo": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantAdditionalInfoEntity"
          }
        },
        "grantRefereeInfo": {
          "$ref": "#/definitions/GrantRefereeInfo"
        },
        "commentsDisabled": {
          "type": "boolean"
        },
        "customGrantTypeId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "GrantAdditionalInfoEntity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["TEXT", "FILE"]
        },
        "response": {
          "type": "string"
        },
        "fileId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "GrantAmount": {
      "type": "object",
      "properties": {
        "minAmount": {
          "type": "number",
          "format": "double"
        },
        "maxAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GrantDuration": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date"
        },
        "end": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "GrantEligibility": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "format": "uuid"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        }
      }
    },
    "GrantFormAdditionalInfo": {
      "type": "object",
      "properties": {
        "grantRefereeConfig": {
          "$ref": "#/definitions/GrantRefereeConfig"
        },
        "commentsDisabled": {
          "type": "boolean"
        },
        "previewDisabled": {
          "type": "boolean"
        },
        "eligibleNonprofitTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["ORGANIZATION", "INDIVIDUAL"]
          }
        },
        "customGrantTypeId": {
          "type": "string",
          "format": "uuid"
        },
        "welcomeText": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "openAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GrantFormProposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "type": "string",
          "enum": ["DRAFT", "PUBLISHED", "INACTIVE"]
        },
        "grantAmount": {
          "$ref": "#/definitions/GrantAmount"
        },
        "grantType": {
          "type": "string",
          "enum": [
            "OPERATING_GRANT",
            "PROJECT_GRANT",
            "CAPITAL_GRANT",
            "FELLOWSHIP",
            "IN_KIND_GIVING"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "$ref": "#/definitions/GrantDuration"
        },
        "foundationOwner": {
          "type": "string",
          "format": "uuid"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "eligibility": {
          "$ref": "#/definitions/GrantEligibility"
        },
        "scoringCriteria": {
          "$ref": "#/definitions/ScoringCriteria"
        },
        "additionalInfo": {
          "$ref": "#/definitions/GrantFormAdditionalInfo"
        },
        "visibility": {
          "type": "string",
          "enum": ["PUBLIC", "PRIVATE"]
        },
        "form": {
          "$ref": "#/definitions/FormBuilder"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "coloredTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationMetadataTag"
          }
        },
        "customGrantType": {
          "$ref": "#/definitions/CustomGrantType"
        },
        "eligibilityEnabled": {
          "type": "boolean"
        }
      }
    },
    "GrantPayment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "assigneeId": {
          "type": "string",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string",
          "enum": ["ACH", "CHECK", "WIRE", "STOCK", "CREDIT_CARD"]
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "contingencies": {
          "type": "string"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": ["NOT_STARTED", "CONTINGENT", "SENT", "ISSUED", "CLEARED"]
        },
        "sourceType": {
          "type": "string",
          "enum": ["GRANT", "CRM"]
        },
        "sourceId": {
          "type": "string",
          "format": "uuid"
        },
        "additionalInfo": {
          "$ref": "#/definitions/PaymentAdditionalInfo"
        },
        "active": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "assignee": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "GrantPaymentSummary": {
      "type": "object",
      "properties": {
        "completedGrantPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantPayment"
          }
        },
        "incompleteGrantPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantPayment"
          }
        },
        "amountPaid": {
          "type": "number",
          "format": "double"
        },
        "upcomingAmount": {
          "type": "number",
          "format": "double"
        },
        "unallocatedAmount": {
          "type": "number",
          "format": "double"
        },
        "finishedAllPayments": {
          "type": "boolean"
        }
      }
    },
    "GrantProposalSubmission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "grantFormProposal": {
          "type": "string",
          "format": "uuid"
        },
        "grantAmount": {
          "$ref": "#/definitions/GrantAmount"
        },
        "awardedAmount": {
          "type": "number",
          "format": "double"
        },
        "awardedDate": {
          "type": "string",
          "format": "date"
        },
        "grantType": {
          "type": "string",
          "enum": [
            "OPERATING_GRANT",
            "PROJECT_GRANT",
            "CAPITAL_GRANT",
            "FELLOWSHIP",
            "IN_KIND_GIVING"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "$ref": "#/definitions/GrantDuration"
        },
        "foundationOwner": {
          "type": "string",
          "format": "uuid"
        },
        "additionalInfo": {
          "$ref": "#/definitions/GrantAdditionalInfo"
        },
        "stage": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "watchers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "firstFormDetails": {
          "$ref": "#/definitions/FirstFormDetails"
        },
        "purpose": {
          "type": "string"
        },
        "submittable": {
          "type": "boolean"
        },
        "assigneesToTask": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "externalAssigneesToTask": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "assigneeToTaskTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskTemplateAssignee"
          }
        },
        "taskTemplateResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskTemplateResponse"
          }
        },
        "taskDeadline": {
          "type": "string",
          "format": "date-time"
        },
        "organizationName": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": ["ORGANIZATION", "INDIVIDUAL"]
        },
        "recipientEmail": {
          "type": "string"
        },
        "sendProposalCreatedEmail": {
          "type": "boolean"
        },
        "customEmailTemplate": {
          "$ref": "#/definitions/CustomEmailTemplate"
        },
        "disableStageChange": {
          "type": "boolean"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "submissionIndividual": {
          "type": "string",
          "format": "uuid"
        },
        "submitted": {
          "type": "string",
          "format": "date-time"
        },
        "multiForm": {
          "$ref": "#/definitions/MultipleFormInfo"
        },
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "taskAssignees": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "readyForNextStage": {
          "type": "boolean"
        },
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "formProposal": {
          "$ref": "#/definitions/GrantFormProposal"
        },
        "foundationOwnerUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "foundationTaskAssignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationUser"
          }
        },
        "nonprofitTaskAssignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitUser"
          }
        },
        "foundationWatchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationUser"
          }
        },
        "coloredTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationMetadataTag"
          }
        },
        "updatedByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "nonprofitStage": {
          "type": "string",
          "enum": [
            "VETTING",
            "DRAFT",
            "SUBMITTED",
            "REVIEW",
            "PENDING",
            "APPROVED",
            "CONTRACT",
            "PAYMENT",
            "REPORTING",
            "AWARDED",
            "DENIED"
          ]
        },
        "pipelineInfo": {
          "$ref": "#/definitions/Pipeline"
        },
        "customGrantType": {
          "$ref": "#/definitions/CustomGrantType"
        },
        "paymentSummary": {
          "$ref": "#/definitions/GrantPaymentSummary"
        }
      }
    },
    "GrantRefereeConfig": {
      "type": "object",
      "properties": {
        "granteeRequestConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantRefereeRequestConfig"
          }
        }
      }
    },
    "GrantRefereeInfo": {
      "type": "object",
      "properties": {
        "grantRefereeRequestDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantRefereeRequestDetail"
          }
        }
      }
    },
    "GrantRefereeRequestConfig": {
      "type": "object",
      "properties": {
        "taskTemplate": {
          "$ref": "#/definitions/TaskTemplate"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "disableLogin": {
          "type": "boolean"
        }
      }
    },
    "GrantRefereeRequestDetail": {
      "type": "object",
      "properties": {
        "requestConfig": {
          "$ref": "#/definitions/GrantRefereeRequestConfig"
        },
        "recipientEmail": {
          "type": "string"
        },
        "lastSent": {
          "type": "string",
          "format": "date-time"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "sendEmail": {
          "type": "boolean"
        }
      }
    },
    "GrantSubmissionSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantProposalSubmission"
          }
        },
        "aggregateGrantAnalysis": {
          "$ref": "#/definitions/AggregateGrantAnalysis"
        }
      }
    },
    "MultiFormResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "formProposalId": {
          "type": "string",
          "format": "uuid"
        },
        "formTitle": {
          "type": "string"
        },
        "submissionIndividual": {
          "type": "string",
          "format": "uuid"
        },
        "submitted": {
          "type": "string",
          "format": "date-time"
        },
        "internal": {
          "type": "boolean"
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MultipleFormInfo": {
      "type": "object",
      "properties": {
        "multiFormResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiFormResponse"
          }
        }
      }
    },
    "PaymentAdditionalInfo": {
      "type": "object",
      "properties": {
        "budgetCategory": {
          "type": "string"
        },
        "localCurrencyAmount": {
          "type": "number",
          "format": "double"
        },
        "localCurrency": {
          "$ref": "#/definitions/Currency"
        },
        "description": {
          "type": "string"
        },
        "overrideTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overrideGrantType": {
          "type": "string",
          "enum": [
            "OPERATING_GRANT",
            "PROJECT_GRANT",
            "CAPITAL_GRANT",
            "FELLOWSHIP",
            "IN_KIND_GIVING"
          ]
        },
        "overrideCustomGrantType": {
          "type": "string",
          "format": "uuid"
        },
        "qbPaymentDetails": {
          "$ref": "#/definitions/QBPaymentDetails"
        },
        "additionalFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PipelineProposalSummary": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "proposalSummary": {
          "$ref": "#/definitions/FoundationProposalSummary"
        }
      }
    },
    "ProposalStageResult": {
      "type": "object",
      "properties": {
        "grantStage": {
          "$ref": "#/definitions/GrantStage"
        },
        "response": {
          "$ref": "#/definitions/GrantSubmissionSearchResponse"
        }
      }
    },
    "QBPaymentDetails": {
      "type": "object",
      "properties": {
        "billId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      }
    },
    "SignatureOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "signatureOrderType": {
          "type": "string",
          "enum": ["FOUNDATION_USER", "NONPROFIT_USER"]
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "signedDocumentFileId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "SignatureStatusDetails": {
      "type": "object",
      "properties": {
        "orderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatureOrder"
          }
        },
        "currentIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskAdditionalInfo": {
      "type": "object",
      "properties": {
        "envelopeId": {
          "type": "string"
        },
        "lastRemindTime": {
          "type": "string",
          "format": "date-time"
        },
        "agreementDocument": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "signatureRequired": {
          "type": "boolean"
        },
        "signedDocumentFileId": {
          "type": "string",
          "format": "uuid"
        },
        "signatureStatusDetails": {
          "$ref": "#/definitions/SignatureStatusDetails"
        },
        "paymentDetailsPDFFileId": {
          "type": "string",
          "format": "uuid"
        },
        "anvilPDFAdditionalInfo": {
          "$ref": "#/definitions/AnvilPDFAdditionalInfo"
        },
        "noAuthAssigneeEmail": {
          "type": "string"
        }
      }
    },
    "TaskSourceEntity": {
      "type": "object",
      "properties": {
        "sourceType": {
          "type": "string",
          "enum": [
            "CRM",
            "GRANT_APPLICATION",
            "REPORT",
            "AGREEMENT_TEMPLATE",
            "DONOR"
          ]
        },
        "sourceId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TaskTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["SYSTEM", "USER"]
        },
        "systemLabel": {
          "type": "string",
          "enum": [
            "GRANT_AGREEMENT",
            "PAYMENT",
            "REPORTING",
            "REVIEW",
            "REMINDER",
            "CUSTOM_REMINDER",
            "DOCUSIGN",
            "PLAID_PAYMENT_DETAILS",
            "EXTERNAL",
            "EXTERNAL_REVIEWER",
            "REFEREE",
            "GRANT_UPLOAD",
            "GRANT_TEMPLATE",
            "MULTI_GRANT_DOCUMENT_REVIEW",
            "GRANT_DOCUMENT_REVIEW",
            "GRANT_SIGNATURE_REQUEST",
            "PLAID_PAYMENT_SECURE_PAYMENT_STORAGE",
            "SECURE_PAYMENT_STORAGE",
            "PDF"
          ]
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "additionalInfo": {
          "$ref": "#/definitions/TaskTemplateAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "TaskTemplateAssignee": {
      "type": "object",
      "properties": {
        "taskTemplateId": {
          "type": "string",
          "format": "uuid"
        },
        "assigneeIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "TaskTemplateResponse": {
      "type": "object",
      "properties": {
        "taskTemplateId": {
          "type": "string",
          "format": "uuid"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        }
      }
    },
    "TipTapAttrs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "textAlign": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontSize": {
          "type": "string"
        },
        "src": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "alt": {
          "type": "string"
        },
        "fileId": {
          "type": "string",
          "format": "uuid"
        },
        "class": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "TipTapTextBlock": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TipTapTextBlock"
          }
        },
        "text": {
          "type": "string"
        },
        "marks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TipTapTextBlock"
          }
        },
        "attrs": {
          "$ref": "#/definitions/TipTapAttrs"
        }
      }
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/AppUser"
        },
        "entityType": {
          "type": "string",
          "enum": ["FOUNDATION", "NONPROFIT", "EXTERNAL_REVIEWER"]
        },
        "entityDetails": {
          "$ref": "#/definitions/EntityDetails"
        }
      }
    },
    "AggregateDashboardRequest": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "DataColumn": {
      "type": "object",
      "properties": {
        "columnType": {
          "type": "string",
          "enum": ["STRING", "DATE", "NUMBER", "CURRENCY"]
        },
        "headerName": {
          "type": "string"
        },
        "columnId": {
          "type": "string"
        },
        "tableColumnRetriever": {
          "$ref": "#/definitions/SubmissionTableResponseRetriever"
        }
      }
    },
    "DataRow": {
      "type": "object",
      "properties": {
        "row": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DataSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataColumn"
          }
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRow"
          }
        }
      }
    },
    "SubmissionTableResponseRetriever": {
      "type": "object"
    },
    "AggregateDataSearchRequest": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "reportType": {
          "type": "string",
          "enum": [
            "PAYMENTS",
            "SUBMISSIONS",
            "DOLLARS_BY_BUDGET_CATEGORY",
            "DOLLARS_BY_ORGANIZATION_TAGS",
            "FULL_GRANTS_LIST",
            "FULL_GRANTEE_CONTACT_LIST",
            "ALL_DATA",
            "REPORTS",
            "REVIEW_TASKS",
            "EXTERNAL_REVIEWER_TASKS",
            "CONTACT_LIST",
            "IRS_990_REPORT",
            "CANDID_DEMOGRAPHICS",
            "CRM_PROFILE",
            "DONOR_MANAGEMENT_REPORT",
            "DONOR_CONTRIBUTION"
          ]
        }
      }
    },
    "AwardStatistics": {
      "type": "object",
      "properties": {
        "averageGrantAmount": {
          "type": "number",
          "format": "double"
        },
        "medianGrantAmount": {
          "type": "number",
          "format": "double"
        },
        "smallestGrantAmount": {
          "$ref": "#/definitions/GrantPayment"
        },
        "largestGrantAmount": {
          "$ref": "#/definitions/GrantPayment"
        },
        "largestGrant": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "smallestGrant": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "BudgetCategoryAllocation": {
      "type": "object",
      "properties": {
        "budgetCategory": {
          "type": "string"
        },
        "awardedNonprofits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        },
        "awardedAmount": {
          "type": "number",
          "format": "double"
        },
        "awardedPercentage": {
          "type": "number",
          "format": "double"
        },
        "committedNonprofits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        },
        "committedAmount": {
          "type": "number",
          "format": "double"
        },
        "committedPercentage": {
          "type": "number",
          "format": "double"
        },
        "pendingAmount": {
          "type": "number",
          "format": "double"
        },
        "pendingPercentage": {
          "type": "number",
          "format": "double"
        },
        "targetAmount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BudgetCategoryYOYData": {
      "type": "object",
      "properties": {
        "budgetCategory": {
          "type": "string"
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YearlyData"
          }
        }
      }
    },
    "CustomGrantTypeAllocation": {
      "type": "object",
      "properties": {
        "grantType": {
          "$ref": "#/definitions/CustomGrantType"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "nonprofitAmounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        }
      }
    },
    "CustomGrantTypeYOYData": {
      "type": "object",
      "properties": {
        "grantType": {
          "$ref": "#/definitions/CustomGrantType"
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YearlyData"
          }
        }
      }
    },
    "DashboardResponse": {
      "type": "object",
      "properties": {
        "totalAwardedHistorical": {
          "type": "number",
          "format": "double"
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FiscalYearData"
          }
        },
        "yoyData": {
          "$ref": "#/definitions/YOYData"
        },
        "customRangeData": {
          "$ref": "#/definitions/FiscalYearData"
        }
      }
    },
    "FiscalRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date"
        },
        "end": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "FiscalYearData": {
      "type": "object",
      "properties": {
        "range": {
          "$ref": "#/definitions/FiscalRange"
        },
        "totalGrantsFiscalYear": {
          "type": "integer",
          "format": "int32"
        },
        "totalAwardedFiscalYear": {
          "type": "number",
          "format": "double"
        },
        "totalYearBudget": {
          "$ref": "#/definitions/BudgetCategoryAllocation"
        },
        "categoryYearBudget": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetCategoryAllocation"
          }
        },
        "tagAllocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationTagAllocation"
          }
        },
        "grantTypeAllocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantTypeAllocation"
          }
        },
        "customGrantTypeAllocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomGrantTypeAllocation"
          }
        },
        "awardStatistics": {
          "$ref": "#/definitions/AwardStatistics"
        }
      }
    },
    "FoundationTagAllocation": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "nonprofitAmounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        }
      }
    },
    "GrantTypeAllocation": {
      "type": "object",
      "properties": {
        "grantType": {
          "type": "string",
          "enum": [
            "OPERATING_GRANT",
            "PROJECT_GRANT",
            "CAPITAL_GRANT",
            "FELLOWSHIP",
            "IN_KIND_GIVING"
          ]
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "nonprofitAmounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        }
      }
    },
    "GrantTypeYOYData": {
      "type": "object",
      "properties": {
        "grantType": {
          "type": "string",
          "enum": [
            "OPERATING_GRANT",
            "PROJECT_GRANT",
            "CAPITAL_GRANT",
            "FELLOWSHIP",
            "IN_KIND_GIVING"
          ]
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YearlyData"
          }
        }
      }
    },
    "NonprofitAmount": {
      "type": "object",
      "properties": {
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TagYOYData": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YearlyData"
          }
        }
      }
    },
    "YOYData": {
      "type": "object",
      "properties": {
        "years": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FiscalRange"
          }
        },
        "budgetYOYData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetCategoryYOYData"
          }
        },
        "tagYOYData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagYOYData"
          }
        },
        "grantTypeYOYData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantTypeYOYData"
          }
        },
        "customGrantTypeYOYData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomGrantTypeYOYData"
          }
        }
      }
    },
    "YearlyData": {
      "type": "object",
      "properties": {
        "range": {
          "$ref": "#/definitions/FiscalRange"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AggregateExecDashboardRequest": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "AggregateUniversalFoundationSearchResponse": {
      "type": "object",
      "properties": {
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationSearchResponseEntity"
          }
        }
      }
    },
    "AggregateUniversalSearchResponse": {
      "type": "object",
      "properties": {
        "foundationResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregateUniversalFoundationSearchResponse"
          }
        }
      }
    },
    "CRMSubmissionDetails": {
      "type": "object",
      "properties": {
        "submissionName": {
          "type": "string"
        },
        "awardedAmount": {
          "type": "number",
          "format": "double"
        },
        "awardedDate": {
          "type": "string",
          "format": "date"
        },
        "purpose": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "$ref": "#/definitions/GrantDuration"
        },
        "stage": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FoundationNonprofitMetadata": {
      "type": "object",
      "properties": {
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "dba": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "mission": {
          "type": "string"
        },
        "vision": {
          "type": "string"
        },
        "hasFiscalSponsor": {
          "type": "boolean"
        },
        "fiscalSponsor": {
          "$ref": "#/definitions/FiscalSponsor"
        },
        "orgEmail": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "totalAwarded": {
          "type": "number",
          "format": "double"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DISCRETIONARY_PAYMENT_RECIPIENT",
              "PREVIOUS_APPLICANT",
              "PREVIOUS_GRANTEE",
              "ACTIVE_APPLICANT",
              "ACTIVE_GRANTEE"
            ]
          }
        },
        "foundationPOC": {
          "$ref": "#/definitions/FoundationUser"
        },
        "nextPaymentDate": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "legalName": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": ["ORGANIZATION", "INDIVIDUAL"]
        },
        "primaryContact": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "website": {
          "type": "string"
        },
        "headquarters": {
          "$ref": "#/definitions/Address"
        },
        "mailingAddress": {
          "$ref": "#/definitions/Address"
        },
        "facebook": {
          "type": "string"
        },
        "twitter": {
          "type": "string"
        },
        "instagram": {
          "type": "string"
        },
        "linkedIn": {
          "type": "string"
        },
        "guidestarProfile": {
          "type": "string"
        },
        "legalStatus": {
          "type": "string"
        },
        "foundingDate": {
          "type": "string",
          "format": "date"
        },
        "irsDeterminationLetter": {
          "type": "string"
        },
        "irsRecipientStatus": {
          "type": "string",
          "enum": [
            "PF",
            "POF",
            "EOF",
            "PC",
            "GOV",
            "SO_DP",
            "SO_I",
            "SO_II",
            "SO_III_FI",
            "SO_III_NFI",
            "TPS",
            "NC",
            "I"
          ]
        },
        "customFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "interactionAdditionalInfo": {
          "$ref": "#/definitions/InteractionAdditionalInfo"
        },
        "coloredTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationMetadataTag"
          }
        },
        "ofacFlags": {
          "$ref": "#/definitions/OfacFlags"
        },
        "sendEmail": {
          "type": "boolean"
        },
        "additionalInfo": {
          "$ref": "#/definitions/NonprofitAdditionalInfo"
        },
        "organizationLogo": {
          "type": "string",
          "format": "uuid"
        },
        "submissionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CRMSubmissionDetails"
          }
        }
      }
    },
    "FoundationSearchResponseEntity": {
      "type": "object",
      "properties": {
        "responseType": {
          "type": "string",
          "enum": ["NONPROFIT", "NONPROFIT_USER", "GRANT_SUBMISSION"]
        },
        "nonprofitMetadata": {
          "$ref": "#/definitions/FoundationNonprofitMetadata"
        },
        "nonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "AggregateUniversalSearchQuery": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "queryText": {
          "type": "string"
        }
      }
    },
    "AggregateContactResponse": {
      "type": "object",
      "properties": {
        "foundationContacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregateFoundationCRMResponse"
          }
        }
      }
    },
    "AggregateFoundationCRMResponse": {
      "type": "object",
      "properties": {
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationNonprofitMetadata"
          }
        }
      }
    },
    "AggregateContactSearchRequest": {
      "type": "object",
      "properties": {
        "foundationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "BoardBook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "boardProposalIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "summarySheet": {
          "$ref": "#/definitions/BoardBookSummarySheet"
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "boardProposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardGrantProposal"
          }
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "BoardBookSummarySheet": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentItem"
          }
        }
      }
    },
    "BoardGrantProposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "document": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "additionalInfo": {
          "$ref": "#/definitions/BoardGrantProposalAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "boardBook": {
          "$ref": "#/definitions/BoardBook"
        }
      }
    },
    "BoardGrantProposalAdditionalInfo": {
      "type": "object",
      "properties": {
        "pdfDocumentDisplay": {
          "$ref": "#/definitions/PDFDocumentDisplay"
        }
      }
    },
    "PDFDocumentDisplay": {
      "type": "object",
      "properties": {
        "displayFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentItem"
          }
        }
      }
    },
    "BoardGeneratorRequest": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string",
          "format": "uuid"
        },
        "submissionIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "nonprofitIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "boardBookId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "BoardProposalValues": {
      "type": "object",
      "properties": {
        "boardProposalId": {
          "type": "string",
          "format": "uuid"
        },
        "documentFieldResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentFieldResponse"
          }
        }
      }
    },
    "DocumentFieldResponse": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/DocumentItem"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BoardProposalSearchResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardGrantProposal"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BoardProposalSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AnalyticsField": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["SUBMISSION", "NONPROFIT", "FORM", "TASK"]
        },
        "submissionInfo": {
          "$ref": "#/definitions/AnalyticsFieldSubmissionInfo"
        },
        "formComponentType": {
          "type": "string",
          "enum": [
            "FILE_UPLOAD",
            "FILE_DOWNLOAD",
            "SINGLE_RESPONSE",
            "MULTI_RESPONSE",
            "DROPDOWN_LIST",
            "MULTI_DROPDOWN_LIST",
            "RATING",
            "TEXT",
            "SHORT_TEXT",
            "FOUNDATION_USER",
            "TABLE",
            "NUMBER",
            "DATE",
            "BUDGET_CATEGORY",
            "REPORT_TEMPLATE",
            "YES_NO_CHECKBOX",
            "ORG_LEGAL_NAME",
            "ORG_DBA",
            "ORG_LEGAL_STATUS",
            "ORG_EIN",
            "ORG_HQ",
            "ORG_HQ_ADDRESS_1",
            "ORG_HQ_ADDRESS_2",
            "ORG_HQ_CITY",
            "ORG_HQ_STATE",
            "ORG_HQ_ZIPCODE",
            "ORG_HQ_COUNTRY",
            "ORG_MAILING_ADDR",
            "ORG_MAILING_ADDRESS_1",
            "ORG_MAILING_ADDRESS_2",
            "ORG_MAILING_CITY",
            "ORG_MAILING_STATE",
            "ORG_MAILING_ZIPCODE",
            "ORG_MAILING_COUNTRY",
            "ORG_PHONE_NUMBER",
            "ORG_EMAIL",
            "ORG_WEBSITE",
            "ORG_FISCAL_SPONSOR",
            "ORG_HAS_FISCAL_SPONSOR",
            "ORG_FISCAL_SPONSOR_NAME",
            "ORG_FISCAL_SPONSOR_EIN",
            "ORG_FISCAL_SPONSOR_ADDRESS",
            "ORG_MISSION",
            "ORG_VISION",
            "ORG_DEI",
            "ORG_FOUNDED_YEAR",
            "ORG_EMP_FULL_TIME",
            "ORG_EMP_PART_TIME",
            "ORG_PRIMARY_CONTACT",
            "ORG_PRIMARY_CONTACT_NAME",
            "ORG_PRIMARY_CONTACT_EMAIL",
            "ORG_PROJECT_DIRECTOR",
            "ORG_PROJECT_DIRECTOR_NAME",
            "ORG_PROJECT_DIRECTOR_EMAIL",
            "ORG_EXECUTIVE",
            "ORG_EXECUTIVE_NAME",
            "ORG_EXECUTIVE_EMAIL",
            "ORG_BUDGET",
            "ORG_BUDGET_REVENUE",
            "ORG_BUDGET_EXPENDITURES",
            "ORG_SOCIAL",
            "ORG_SOCIAL_FACEBOOK",
            "ORG_SOCIAL_INSTAGRAM",
            "ORG_SOCIAL_TWITTER",
            "ORG_SOCIAL_LINKEDIN",
            "ORG_SOCIAL_GUIDESTAR",
            "GRANT_AMOUNT_REQ",
            "GRANT_TYPE",
            "GRANT_PROJECT_TITLE",
            "GRANT_PROJECT_BUDGET",
            "GRANT_CO_FUNDING",
            "GRANT_PERIOD",
            "GRANT_PERIOD_START",
            "GRANT_PERIOD_END",
            "GRANT_PROP_TITLE",
            "GRANT_RELEVANCY",
            "GRANT_AREA",
            "GRANT_AREA_CITY",
            "GRANT_AREA_STATE",
            "GRANT_AREA_COUNTRY",
            "GRANT_POP_SERVED",
            "PAGE_DIVIDER",
            "TEXT_DESCRIPTION",
            "FORMATTED_TEXT",
            "CURRENCY",
            "EXTERNAL_REFERENCES"
          ]
        }
      }
    },
    "AnalyticsFieldSubmissionInfo": {
      "type": "object",
      "properties": {
        "formName": {
          "type": "string"
        },
        "submissionName": {
          "type": "string"
        }
      }
    },
    "DataSearchQuery": {
      "type": "object",
      "properties": {
        "reportType": {
          "type": "string",
          "enum": [
            "PAYMENTS",
            "SUBMISSIONS",
            "DOLLARS_BY_BUDGET_CATEGORY",
            "DOLLARS_BY_ORGANIZATION_TAGS",
            "FULL_GRANTS_LIST",
            "FULL_GRANTEE_CONTACT_LIST",
            "ALL_DATA",
            "REPORTS",
            "REVIEW_TASKS",
            "EXTERNAL_REVIEWER_TASKS",
            "CONTACT_LIST",
            "IRS_990_REPORT",
            "CANDID_DEMOGRAPHICS",
            "CRM_PROFILE",
            "DONOR_MANAGEMENT_REPORT",
            "DONOR_CONTRIBUTION"
          ]
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AnalyticsFieldPaymentResponse": {
      "type": "object",
      "properties": {
        "fieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsFieldValue"
          }
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitAmount"
          }
        }
      }
    },
    "AnalyticsFieldValue": {
      "type": "object",
      "properties": {
        "analyticsField": {
          "$ref": "#/definitions/AnalyticsField"
        },
        "response": {
          "type": "string"
        }
      }
    },
    "AnalyticsFieldYOYData": {
      "type": "object",
      "properties": {
        "fieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsFieldValue"
          }
        },
        "yearlyData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YearlyData"
          }
        }
      }
    },
    "AnalyticsPaymentYOYData": {
      "type": "object",
      "properties": {
        "years": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FiscalRange"
          }
        },
        "paymentYOYData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsFieldYOYData"
          }
        }
      }
    },
    "AnalyticsResponse": {
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsFieldPaymentResponse"
          }
        },
        "yoyPayments": {
          "$ref": "#/definitions/AnalyticsPaymentYOYData"
        }
      }
    },
    "AnalyticsRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["PAYMENT", "SUBMISSION"]
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsField"
          }
        }
      }
    },
    "DocumentTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["SYSTEM", "USER"]
        },
        "documentType": {
          "type": "string",
          "enum": ["BOARD_TEMPLATE", "AGREEMENT_TEMPLATE"]
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "document": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "additionalInfo": {
          "$ref": "#/definitions/DocumentTemplateAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "DocumentTemplateAdditionalInfo": {
      "type": "object",
      "properties": {
        "pdfDocumentDisplay": {
          "$ref": "#/definitions/PDFDocumentDisplay"
        }
      }
    },
    "AccountInfo": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "baseURI": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "DocusignSenderViewResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "EnvelopeRecipient": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EnvelopeSendRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "documentTitle": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvelopeRecipient"
          }
        },
        "returnUri": {
          "type": "string"
        }
      }
    },
    "DocusignAdditionalInfo": {
      "type": "object"
    },
    "DocusignEnvelope": {
      "type": "object",
      "properties": {
        "envelopeId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "type": "string",
          "enum": ["CREATED", "SENT", "SIGNED", "DOWNLOADED", "DECLINED"]
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "metadata": {
          "$ref": "#/definitions/Envelope"
        },
        "additionalInfo": {
          "$ref": "#/definitions/DocusignAdditionalInfo"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Envelope": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "documentsUri": {
          "type": "string"
        },
        "recipientsUri": {
          "type": "string"
        },
        "attachmentsUri": {
          "type": "string"
        },
        "envelopeUri": {
          "type": "string"
        },
        "emailSubject": {
          "type": "string"
        },
        "emailBlurb": {
          "type": "string"
        },
        "envelopeId": {
          "type": "string"
        },
        "signingLocation": {
          "type": "string"
        },
        "customFieldsUri": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string"
        },
        "lastModifiedDateTime": {
          "type": "string"
        },
        "deliveredDateTime": {
          "type": "string"
        },
        "initialSentDateTime": {
          "type": "string"
        },
        "sentDateTime": {
          "type": "string"
        },
        "completedDateTime": {
          "type": "string"
        },
        "voidedDateTime": {
          "type": "string"
        },
        "voidedReason": {
          "type": "string"
        },
        "deletedDateTime": {
          "type": "string"
        },
        "declinedDateTime": {
          "type": "string"
        },
        "statusChangedDateTime": {
          "type": "string"
        },
        "documentsCombinedUri": {
          "type": "string"
        },
        "certificateUri": {
          "type": "string"
        },
        "templatesUri": {
          "type": "string"
        },
        "recipients": {
          "$ref": "#/definitions/Recipients"
        },
        "sender": {
          "$ref": "#/definitions/Sender"
        },
        "rawData": {
          "type": "object"
        }
      }
    },
    "Recipients": {
      "type": "object",
      "properties": {
        "signers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Signer"
          }
        }
      }
    },
    "Sender": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Signer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "recipientId": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "signedDateTime": {
          "type": "string"
        },
        "sentDateTime": {
          "type": "string"
        },
        "deliveredDateTime": {
          "type": "string"
        },
        "declinedDateTime": {
          "type": "string"
        }
      }
    },
    "DocusignLoginURL": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "DocusignLoginRequest": {
      "type": "object",
      "properties": {
        "redirectURI": {
          "type": "string"
        }
      }
    },
    "DonorRelationshipType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DonorEntityType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EligibilityConfiguration": {
      "type": "object",
      "properties": {
        "requireLogin": {
          "type": "boolean"
        },
        "associatedGrantProposalId": {
          "type": "string",
          "format": "uuid"
        },
        "acceptMessage": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "rejectMessage": {
          "$ref": "#/definitions/TipTapTextBlock"
        },
        "saveToDocuments": {
          "type": "boolean"
        },
        "acceptEmail": {
          "$ref": "#/definitions/EligibilityEmailTemplate"
        },
        "rejectEmail": {
          "$ref": "#/definitions/EligibilityEmailTemplate"
        }
      }
    },
    "EligibilityEmailTemplate": {
      "type": "object",
      "properties": {
        "subjectText": {
          "type": "string"
        },
        "messageText": {
          "type": "string"
        },
        "ccEmail": {
          "type": "string"
        }
      }
    },
    "EligibilityForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "configuration": {
          "$ref": "#/definitions/EligibilityConfiguration"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "grantFormProposal": {
          "$ref": "#/definitions/GrantFormProposal"
        }
      }
    },
    "UniversalForm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "universalFormType": {
          "type": "string",
          "enum": ["GRANT_FORM", "ELIGIBILITY"]
        },
        "name": {
          "type": "string"
        },
        "grantFormProposal": {
          "$ref": "#/definitions/GrantFormProposal"
        },
        "eligibilityForm": {
          "$ref": "#/definitions/EligibilityForm"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "ExternalReviewerDashboard": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "taskResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSubmission"
          }
        }
      }
    },
    "TaskSubmission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "taskStatus": {
          "type": "string",
          "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
        }
      }
    },
    "AssignExternalReviewerRequest": {
      "type": "object",
      "properties": {
        "externalReviewers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "submissionIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "createUniqueTasks": {
          "type": "boolean"
        },
        "taskTemplateId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FileMeta": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "format": "uuid"
        },
        "fileName": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "donorEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "fileSourceType": {
          "type": "string",
          "enum": [
            "CRM",
            "GRANT_APPLICATION",
            "GRANT_FORM_PROPOSAL",
            "TASK",
            "SETTINGS"
          ]
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "fileSourceId": {
          "type": "string"
        },
        "folderId": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "FileCopyPair": {
      "type": "object",
      "properties": {
        "sourceFileId": {
          "type": "string",
          "format": "uuid"
        },
        "destFileId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Folder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "donorEntityId": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "folderId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AdditionalFilterInfo": {
      "type": "object",
      "properties": {
        "dataReportType": {
          "type": "string",
          "enum": [
            "PAYMENTS",
            "SUBMISSIONS",
            "DOLLARS_BY_BUDGET_CATEGORY",
            "DOLLARS_BY_ORGANIZATION_TAGS",
            "FULL_GRANTS_LIST",
            "FULL_GRANTEE_CONTACT_LIST",
            "ALL_DATA",
            "REPORTS",
            "REVIEW_TASKS",
            "EXTERNAL_REVIEWER_TASKS",
            "CONTACT_LIST",
            "IRS_990_REPORT",
            "CANDID_DEMOGRAPHICS",
            "CRM_PROFILE",
            "DONOR_MANAGEMENT_REPORT",
            "DONOR_CONTRIBUTION"
          ]
        }
      }
    },
    "FilterView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "page": {
          "type": "string",
          "enum": ["CRM", "PROPOSALS", "DATA"]
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "stageId": {
          "type": "string",
          "format": "uuid"
        },
        "settings": {
          "$ref": "#/definitions/FilterViewSettings"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedById": {
          "type": "string",
          "format": "uuid"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdById": {
          "type": "string",
          "format": "uuid"
        },
        "index": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "FilterViewCondition": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "uuid"
        },
        "filterType": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "equals",
            "notEqual",
            "contains",
            "notContains",
            "blank",
            "notBlank",
            "startsWith",
            "endsWith",
            "inRange",
            "lessThan",
            "lessThanOrEqual",
            "greaterThan",
            "greaterThanOrEqual"
          ]
        },
        "filter": {
          "type": "string"
        },
        "dateFrom": {
          "type": "string"
        },
        "dateTo": {
          "type": "string"
        }
      }
    },
    "FilterViewFilter": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "filterType": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterViewCondition"
          }
        }
      }
    },
    "FilterViewRename": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FilterViewSettings": {
      "type": "object",
      "properties": {
        "sorting": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterViewSorting"
          }
        },
        "assignedToMe": {
          "type": "boolean"
        },
        "visibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterViewVisibility"
          }
        },
        "rename": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterViewRename"
          }
        },
        "filter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterViewFilter"
          }
        },
        "additionalFilterInfo": {
          "$ref": "#/definitions/AdditionalFilterInfo"
        }
      }
    },
    "FilterViewSorting": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "descending": {
          "type": "boolean"
        }
      }
    },
    "FilterViewVisibility": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "value": {
          "type": "boolean"
        }
      }
    },
    "EligibilityFormResponses": {
      "type": "object",
      "properties": {
        "eligibilityFormId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        }
      }
    },
    "NonprofitGrantPair": {
      "type": "object",
      "properties": {
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "nonprofitGrantSubmissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitGrantSubmission"
          }
        }
      }
    },
    "NonprofitGrantSubmission": {
      "type": "object",
      "properties": {
        "formProposal": {
          "$ref": "#/definitions/GrantFormProposal"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "logoFileUrl": {
          "type": "string",
          "format": "url"
        },
        "foundationColor": {
          "type": "string"
        }
      }
    },
    "GrantEligibilityResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        }
      }
    },
    "GetFoundationNonprofitUsersResponse": {
      "type": "object",
      "properties": {
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitUser"
          }
        }
      }
    },
    "FoundationPaymentField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "visibleInTable": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "SYSTEM",
            "TEXT",
            "NUMBER",
            "CURRENCY",
            "USER",
            "DATE",
            "BOOLEAN",
            "TAGS",
            "MULTI"
          ]
        }
      }
    },
    "FoundationProposals": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalStageResult"
          }
        },
        "movableResults": {
          "$ref": "#/definitions/GrantSubmissionSearchResponse"
        }
      }
    },
    "FilteredProposalCell": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "FilteredProposalColumn": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "FilteredProposalRow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "grantFormProposal": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationOwner": {
          "type": "string",
          "format": "uuid"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteredProposalCell"
          }
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "GetFilteredProposalsResponse": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "string",
          "format": "uuid"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteredProposalColumn"
          }
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteredProposalRow"
          }
        }
      }
    },
    "GetFilteredBulkProposalsResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetFilteredProposalsResponse"
          }
        },
        "movableResults": {
          "$ref": "#/definitions/GrantSubmissionSearchResponse"
        }
      }
    },
    "BulkFilterProposalsRequest": {
      "type": "object",
      "properties": {
        "assignedToMe": {
          "type": "boolean"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "filterIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "CreateTaskReviewerRequest": {
      "type": "object",
      "properties": {
        "taskTemplateId": {
          "type": "string",
          "format": "uuid"
        },
        "reviewerIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "deadline": {
          "type": "string",
          "format": "date"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "createUniqueTasks": {
          "type": "boolean"
        }
      }
    },
    "CRMSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationNonprofitMetadata"
          }
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "CRMSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "orgName": {
          "type": "string"
        },
        "assignedToMe": {
          "type": "boolean"
        },
        "nonprofitIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "sortKey": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "sortOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortOption"
          }
        },
        "filterOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterOption"
          }
        }
      }
    },
    "FilterOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SortOption": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "sortDirection": {
          "type": "string",
          "enum": ["ASC", "DESC"]
        }
      }
    },
    "LandingPage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "ContactsResponse": {
      "type": "object",
      "properties": {
        "crmFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationCRMField"
          }
        },
        "searchResponse": {
          "$ref": "#/definitions/CRMSearchResponse"
        }
      }
    },
    "ContactsRequest": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationCRMField"
          }
        },
        "searchQuery": {
          "$ref": "#/definitions/CRMSearchQuery"
        }
      }
    },
    "PaymentSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantPayment"
          }
        }
      }
    },
    "PaymentSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "nonprofitIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "statuses": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["NOT_STARTED", "CONTINGENT", "SENT", "ISSUED", "CLEARED"]
          }
        },
        "grantSubmissionIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "descending": {
          "type": "boolean"
        }
      }
    },
    "BankInfoDownloadRequest": {
      "type": "object",
      "properties": {
        "nonprofitIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "NonprofitMergeRequest": {
      "type": "object",
      "properties": {
        "sourceNonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "destinationNonprofitId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "FoundationNonprofitGrantSummary": {
      "type": "object",
      "properties": {
        "totalGrantsAwarded": {
          "type": "integer",
          "format": "int64"
        },
        "totalDollarsAwarded": {
          "type": "number",
          "format": "double"
        },
        "totalDollarsPaid": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "FoundationNonprofitPaymentSummary": {
      "type": "object",
      "properties": {
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "totalAwarded": {
          "type": "number",
          "format": "double"
        },
        "totalPaid": {
          "type": "number",
          "format": "double"
        },
        "totalPayments": {
          "type": "integer",
          "format": "int32"
        },
        "totalPaidPayments": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "nextDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NumbersACH": {
      "type": "object",
      "required": ["account", "accountId", "routing", "wireRouting"],
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The Plaid account ID associated with the account numbers"
        },
        "account": {
          "type": "string",
          "description": "The ACH account number for the account.  Note that when using OAuth with Chase Bank (`ins_56`), Chase will issue \"tokenized\" routing and account numbers, which are not the user's actual account and routing numbers. These tokenized numbers should work identically to normal account and routing numbers. The digits returned in the `mask` field will continue to reflect the actual account number, rather than the tokenized account number; for this reason, when displaying account numbers to the user to help them identify their account in your UI, always use the `mask` rather than truncating the `account` number. If a user revokes their permissions to your app, the tokenized numbers will continue to work for ACH deposits, but not withdrawals."
        },
        "routing": {
          "type": "string",
          "description": "The ACH routing number for the account. If the institution is `ins_56`, this may be a tokenized routing number. For more information, see the description of the `account` field."
        },
        "wireRouting": {
          "type": "string",
          "description": "The wire transfer routing number for the account, if available"
        },
        "canTransferIn": {
          "type": "boolean",
          "description": "Whether the account supports ACH transfers into the account"
        },
        "canTransferOut": {
          "type": "boolean",
          "description": "Whether the account supports ACH transfers out of the account"
        }
      },
      "description": "Identifying information for transferring money to or from a US account via ACH or wire transfer."
    },
    "FoundationNotes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "visibility": {
          "type": "string",
          "enum": ["INTERNAL", "EXTERNAL"]
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "message": {
          "type": "string"
        },
        "messageType": {
          "type": "string",
          "enum": ["PHONE_CALL", "EMAIL", "IN_PERSON"]
        },
        "sourceType": {
          "type": "string",
          "enum": ["CRM", "GRANT_APPLICATION"]
        },
        "sourceId": {
          "type": "string",
          "format": "uuid"
        },
        "active": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "AccountBasedExpenseLineDetail": {
      "type": "object",
      "properties": {
        "customerRef": {
          "xml": {
            "name": "CustomerRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "accountRef": {
          "xml": {
            "name": "AccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "billableStatus": {
          "type": "string",
          "xml": {
            "name": "BillableStatus"
          },
          "enum": ["BILLABLE", "NOT_BILLABLE", "HAS_BEEN_BILLED"]
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "taxAmount": {
          "type": "number",
          "xml": {
            "name": "TaxAmount"
          }
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "expenseDetailLineDetailEx": {
          "xml": {
            "name": "ExpenseDetailLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "AttachableRef": {
      "type": "object",
      "properties": {
        "entityRef": {
          "xml": {
            "name": "EntityRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "lineInfo": {
          "type": "string",
          "xml": {
            "name": "LineInfo"
          }
        },
        "includeOnSend": {
          "type": "boolean",
          "xml": {
            "name": "IncludeOnSend"
          }
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "attachableRefEx": {
          "xml": {
            "name": "AttachableRefEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "Bill": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "syncToken": {
          "type": "string",
          "xml": {
            "name": "SyncToken"
          }
        },
        "metaData": {
          "xml": {
            "name": "MetaData"
          },
          "$ref": "#/definitions/ModificationMetaData"
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "attachableRef": {
          "type": "array",
          "xml": {
            "name": "AttachableRef"
          },
          "items": {
            "xml": {
              "name": "AttachableRef"
            },
            "$ref": "#/definitions/AttachableRef"
          }
        },
        "domain": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "DELETED",
            "VOIDED",
            "DRAFT",
            "PENDING",
            "IN_TRANSIT",
            "SYNCHRONIZED",
            "SYNC_ERROR"
          ]
        },
        "sparse": {
          "type": "boolean",
          "xml": {
            "attribute": true
          }
        },
        "docNumber": {
          "type": "string",
          "xml": {
            "name": "DocNumber"
          }
        },
        "txnDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "TxnDate"
          }
        },
        "departmentRef": {
          "xml": {
            "name": "DepartmentRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "currencyRef": {
          "xml": {
            "name": "CurrencyRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "exchangeRate": {
          "type": "number",
          "xml": {
            "name": "ExchangeRate"
          }
        },
        "privateNote": {
          "type": "string",
          "xml": {
            "name": "PrivateNote"
          }
        },
        "txnStatus": {
          "type": "string",
          "xml": {
            "name": "TxnStatus"
          }
        },
        "linkedTxn": {
          "type": "array",
          "xml": {
            "name": "LinkedTxn"
          },
          "items": {
            "xml": {
              "name": "LinkedTxn"
            },
            "$ref": "#/definitions/LinkedTxn"
          }
        },
        "line": {
          "type": "array",
          "xml": {
            "name": "Line"
          },
          "items": {
            "xml": {
              "name": "Line"
            },
            "$ref": "#/definitions/Line"
          }
        },
        "txnTaxDetail": {
          "xml": {
            "name": "TxnTaxDetail"
          },
          "$ref": "#/definitions/TxnTaxDetail"
        },
        "txnSource": {
          "type": "string",
          "xml": {
            "name": "TxnSource"
          }
        },
        "taxFormType": {
          "type": "string",
          "xml": {
            "name": "TaxFormType"
          }
        },
        "taxFormNum": {
          "type": "string",
          "xml": {
            "name": "TaxFormNum"
          }
        },
        "transactionLocationType": {
          "type": "string",
          "xml": {
            "name": "TransactionLocationType"
          }
        },
        "tag": {
          "type": "array",
          "xml": {
            "name": "Tag"
          },
          "items": {
            "xml": {
              "name": "Tag"
            },
            "$ref": "#/definitions/Tag"
          }
        },
        "txnApprovalInfo": {
          "xml": {
            "name": "TxnApprovalInfo"
          },
          "$ref": "#/definitions/TxnApprovalInfo"
        },
        "recurDataRef": {
          "xml": {
            "name": "RecurDataRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "recurringInfo": {
          "xml": {
            "name": "RecurringInfo"
          },
          "$ref": "#/definitions/RecurringInfo"
        },
        "projectRef": {
          "xml": {
            "name": "ProjectRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "vendorRef": {
          "xml": {
            "name": "VendorRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "totalAmt": {
          "type": "number",
          "xml": {
            "name": "TotalAmt"
          }
        },
        "billEmail": {
          "xml": {
            "name": "BillEmail"
          },
          "$ref": "#/definitions/EmailAddress"
        },
        "replyEmail": {
          "xml": {
            "name": "ReplyEmail"
          },
          "$ref": "#/definitions/EmailAddress"
        },
        "memo": {
          "type": "string",
          "xml": {
            "name": "Memo"
          }
        },
        "globalTaxCalculation": {
          "type": "string",
          "xml": {
            "name": "GlobalTaxCalculation"
          },
          "enum": ["TAX_INCLUSIVE", "TAX_EXCLUDED", "NOT_APPLICABLE"]
        },
        "payerRef": {
          "xml": {
            "name": "PayerRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "salesTermRef": {
          "xml": {
            "name": "SalesTermRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "DueDate"
          }
        },
        "remitToAddr": {
          "xml": {
            "name": "RemitToAddr"
          },
          "$ref": "#/definitions/PhysicalAddress"
        },
        "shipAddr": {
          "xml": {
            "name": "ShipAddr"
          },
          "$ref": "#/definitions/PhysicalAddress"
        },
        "vendorAddr": {
          "xml": {
            "name": "VendorAddr"
          },
          "$ref": "#/definitions/PhysicalAddress"
        },
        "balance": {
          "type": "number",
          "xml": {
            "name": "Balance"
          }
        },
        "homeBalance": {
          "type": "number",
          "xml": {
            "name": "HomeBalance"
          }
        },
        "billEx": {
          "xml": {
            "name": "BillEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "lessCIS": {
          "type": "number",
          "xml": {
            "name": "LessCIS"
          }
        },
        "includeInAnnualTPAR": {
          "type": "boolean",
          "xml": {
            "name": "IncludeInAnnualTPAR"
          }
        },
        "apaccountRef": {
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "ContactInfo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "xml": {
            "name": "Type"
          },
          "enum": [
            "TELEPHONE_NUMBER",
            "EMAIL_ADDRESS",
            "WEB_SITE_ADDRESS",
            "GENERIC_CONTACT_TYPE"
          ]
        },
        "telephone": {
          "xml": {
            "name": "Telephone"
          },
          "$ref": "#/definitions/TelephoneNumber"
        },
        "email": {
          "xml": {
            "name": "Email"
          },
          "$ref": "#/definitions/EmailAddress"
        },
        "webSite": {
          "xml": {
            "name": "WebSite"
          },
          "$ref": "#/definitions/WebSiteAddress"
        },
        "otherContact": {
          "xml": {
            "name": "OtherContact"
          },
          "$ref": "#/definitions/GenericContactType"
        }
      }
    },
    "CustomField": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "definitionId": {
          "type": "string",
          "xml": {
            "name": "DefinitionId"
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "Name"
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "name": "Type"
          },
          "enum": ["STRING_TYPE", "BOOLEAN_TYPE", "NUMBER_TYPE", "DATE_TYPE"]
        },
        "stringValue": {
          "type": "string",
          "xml": {
            "name": "StringValue"
          }
        },
        "booleanValue": {
          "type": "boolean",
          "xml": {
            "name": "BooleanValue"
          }
        },
        "dateValue": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "DateValue"
          }
        },
        "numberValue": {
          "type": "number",
          "xml": {
            "name": "NumberValue"
          }
        }
      }
    },
    "DepositLineDetail": {
      "type": "object",
      "properties": {
        "entity": {
          "xml": {
            "name": "Entity"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "accountRef": {
          "xml": {
            "name": "AccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "paymentMethodRef": {
          "xml": {
            "name": "PaymentMethodRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "checkNum": {
          "type": "string",
          "xml": {
            "name": "CheckNum"
          }
        },
        "txnType": {
          "type": "string",
          "xml": {
            "name": "TxnType"
          },
          "enum": [
            "AP_CREDIT_CARD",
            "AR_REFUND_CREDIT_CARD",
            "BILL",
            "BILL_PAYMENT_CHECK",
            "BUILD_ASSEMBLY",
            "CARRY_OVER",
            "CASH_PURCHASE",
            "CHARGE",
            "CHECK",
            "CREDIT_CARD_PAYMENT",
            "CREDIT_MEMO",
            "DEPOSIT",
            "EFP_LIABILITY_CHECK",
            "EFT_BILL_PAYMENT",
            "EFT_REFUND",
            "ESTIMATE",
            "INVENTORY_ADJUSTMENT",
            "INVENTORY_TRANSFER",
            "INVOICE",
            "ITEM_RECEIPT",
            "JOURNAL_ENTRY",
            "LIABILITY_ADJUSTMENT",
            "PAYCHECK",
            "PAYROLL_LIABILITY_CHECK",
            "PURCHASE_ORDER",
            "PRIOR_PAYMENT",
            "RECEIVE_PAYMENT",
            "REFUND_CHECK",
            "REIMBURSE_CHARGE",
            "SALES_ORDER",
            "SALES_RECEIPT",
            "SALES_TAX_PAYMENT_CHECK",
            "TRANSFER",
            "TIME_ACTIVITY",
            "VENDOR_CREDIT",
            "YTD_ADJUSTMENT"
          ]
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxApplicableOn": {
          "type": "string",
          "xml": {
            "name": "TaxApplicableOn"
          },
          "enum": ["PURCHASE", "SALES"]
        },
        "depositLineDetailEx": {
          "xml": {
            "name": "DepositLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "DescriptionLineDetail": {
      "type": "object",
      "properties": {
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "descriptionLineDetailEx": {
          "xml": {
            "name": "DescriptionLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "DiscountLineDetail": {
      "type": "object",
      "properties": {
        "discountRef": {
          "xml": {
            "name": "DiscountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "percentBased": {
          "type": "boolean",
          "xml": {
            "name": "PercentBased"
          }
        },
        "discountPercent": {
          "type": "number",
          "xml": {
            "name": "DiscountPercent"
          }
        },
        "discountAccountRef": {
          "xml": {
            "name": "DiscountAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "discountLineDetailEx": {
          "xml": {
            "name": "DiscountLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "DiscountOverride": {
      "type": "object",
      "properties": {
        "discountRef": {
          "xml": {
            "name": "DiscountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "percentBased": {
          "type": "boolean",
          "xml": {
            "name": "PercentBased"
          }
        },
        "discountPercent": {
          "type": "number",
          "xml": {
            "name": "DiscountPercent"
          }
        },
        "discountAccountRef": {
          "xml": {
            "name": "DiscountAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "EmailAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "address": {
          "type": "string",
          "xml": {
            "name": "Address"
          }
        },
        "tag": {
          "type": "string",
          "xml": {
            "name": "Tag"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "EntityTypeRef": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "xml": {
            "name": "Type"
          },
          "enum": ["CUSTOMER", "EMPLOYEE", "JOB", "OTHER", "VENDOR"]
        },
        "entityRef": {
          "xml": {
            "name": "EntityRef"
          },
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "GenericContactType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "Name"
          }
        },
        "value": {
          "type": "string",
          "xml": {
            "name": "Value"
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "name": "Type"
          }
        },
        "tag": {
          "type": "string",
          "xml": {
            "name": "Tag"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "GroupLineDetail": {
      "type": "object",
      "required": ["groupItemRef"],
      "properties": {
        "groupItemRef": {
          "xml": {
            "name": "GroupItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "quantity": {
          "type": "number",
          "xml": {
            "name": "Quantity"
          }
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "line": {
          "type": "array",
          "xml": {
            "name": "Line"
          },
          "items": {
            "xml": {
              "name": "Line"
            },
            "$ref": "#/definitions/Line"
          }
        },
        "groupLineDetailEx": {
          "xml": {
            "name": "GroupLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "IntuitAnyType": {
      "type": "object",
      "properties": {
        "any": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ItemAdjustmentLineDetail": {
      "type": "object",
      "required": ["itemRef"],
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "salesPrice": {
          "type": "number",
          "xml": {
            "name": "SalesPrice"
          }
        },
        "qtyDiff": {
          "type": "number",
          "xml": {
            "name": "QtyDiff"
          }
        },
        "newQty": {
          "type": "number",
          "xml": {
            "name": "NewQty"
          }
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "ItemBasedExpenseLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "unitPrice": {
          "type": "number",
          "xml": {
            "name": "UnitPrice"
          }
        },
        "ratePercent": {
          "type": "number",
          "xml": {
            "name": "RatePercent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "qty": {
          "type": "number",
          "xml": {
            "name": "Qty"
          }
        },
        "itemAccountRef": {
          "xml": {
            "name": "ItemAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "inventorySiteRef": {
          "xml": {
            "name": "InventorySiteRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxClassificationRef": {
          "xml": {
            "name": "TaxClassificationRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "customerRef": {
          "xml": {
            "name": "CustomerRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "billableStatus": {
          "type": "string",
          "xml": {
            "name": "BillableStatus"
          },
          "enum": ["BILLABLE", "NOT_BILLABLE", "HAS_BEEN_BILLED"]
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "itemBasedExpenseLineDetailEx": {
          "xml": {
            "name": "ItemBasedExpenseLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "ItemReceiptLineDetail": {
      "type": "object",
      "properties": {
        "itemReceiptLineDetailEx": {
          "xml": {
            "name": "ItemReceiptLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "JournalEntryLineDetail": {
      "type": "object",
      "properties": {
        "postingType": {
          "type": "string",
          "xml": {
            "name": "PostingType"
          },
          "enum": ["CREDIT", "DEBIT"]
        },
        "entity": {
          "xml": {
            "name": "Entity"
          },
          "$ref": "#/definitions/EntityTypeRef"
        },
        "accountRef": {
          "xml": {
            "name": "AccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "departmentRef": {
          "xml": {
            "name": "DepartmentRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxRateRef": {
          "xml": {
            "name": "TaxRateRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxApplicableOn": {
          "type": "string",
          "xml": {
            "name": "TaxApplicableOn"
          },
          "enum": ["PURCHASE", "SALES"]
        },
        "taxAmount": {
          "type": "number",
          "xml": {
            "name": "TaxAmount"
          }
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "billableStatus": {
          "type": "string",
          "xml": {
            "name": "BillableStatus"
          },
          "enum": ["BILLABLE", "NOT_BILLABLE", "HAS_BEEN_BILLED"]
        },
        "journalCodeRef": {
          "xml": {
            "name": "JournalCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "journalEntryLineDetailEx": {
          "xml": {
            "name": "JournalEntryLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "Line": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "lineNum": {
          "type": "integer",
          "xml": {
            "name": "LineNum"
          }
        },
        "description": {
          "type": "string",
          "xml": {
            "name": "Description"
          }
        },
        "amount": {
          "type": "number",
          "xml": {
            "name": "Amount"
          }
        },
        "received": {
          "type": "number",
          "xml": {
            "name": "Received"
          }
        },
        "linkedTxn": {
          "type": "array",
          "xml": {
            "name": "LinkedTxn"
          },
          "items": {
            "xml": {
              "name": "LinkedTxn"
            },
            "$ref": "#/definitions/LinkedTxn"
          }
        },
        "detailType": {
          "type": "string",
          "xml": {
            "name": "DetailType"
          },
          "enum": [
            "PAYMENT_LINE_DETAIL",
            "DISCOUNT_LINE_DETAIL",
            "TAX_LINE_DETAIL",
            "SALES_ITEM_LINE_DETAIL",
            "ITEM_BASED_EXPENSE_LINE_DETAIL",
            "ACCOUNT_BASED_EXPENSE_LINE_DETAIL",
            "DEPOSIT_LINE_DETAIL",
            "PURCHASE_ORDER_ITEM_LINE_DETAIL",
            "ITEM_RECEIPT_LINE_DETAIL",
            "JOURNAL_ENTRY_LINE_DETAIL",
            "GROUP_LINE_DETAIL",
            "DESCRIPTION_ONLY",
            "SUB_TOTAL_LINE_DETAIL",
            "SALES_ORDER_ITEM_LINE_DETAIL",
            "TDS_LINE_DETAIL",
            "REIMBURSE_LINE_DETAIL",
            "ITEM_ADJUSTMENT_LINE_DETAIL"
          ]
        },
        "paymentLineDetail": {
          "xml": {
            "name": "PaymentLineDetail"
          },
          "$ref": "#/definitions/PaymentLineDetail"
        },
        "discountLineDetail": {
          "xml": {
            "name": "DiscountLineDetail"
          },
          "$ref": "#/definitions/DiscountLineDetail"
        },
        "taxLineDetail": {
          "xml": {
            "name": "TaxLineDetail"
          },
          "$ref": "#/definitions/TaxLineDetail"
        },
        "salesItemLineDetail": {
          "xml": {
            "name": "SalesItemLineDetail"
          },
          "$ref": "#/definitions/SalesItemLineDetail"
        },
        "descriptionLineDetail": {
          "xml": {
            "name": "DescriptionLineDetail"
          },
          "$ref": "#/definitions/DescriptionLineDetail"
        },
        "itemBasedExpenseLineDetail": {
          "xml": {
            "name": "ItemBasedExpenseLineDetail"
          },
          "$ref": "#/definitions/ItemBasedExpenseLineDetail"
        },
        "accountBasedExpenseLineDetail": {
          "xml": {
            "name": "AccountBasedExpenseLineDetail"
          },
          "$ref": "#/definitions/AccountBasedExpenseLineDetail"
        },
        "reimburseLineDetail": {
          "xml": {
            "name": "ReimburseLineDetail"
          },
          "$ref": "#/definitions/ReimburseLineDetail"
        },
        "depositLineDetail": {
          "xml": {
            "name": "DepositLineDetail"
          },
          "$ref": "#/definitions/DepositLineDetail"
        },
        "purchaseOrderItemLineDetail": {
          "xml": {
            "name": "PurchaseOrderItemLineDetail"
          },
          "$ref": "#/definitions/PurchaseOrderItemLineDetail"
        },
        "salesOrderItemLineDetail": {
          "xml": {
            "name": "SalesOrderItemLineDetail"
          },
          "$ref": "#/definitions/SalesOrderItemLineDetail"
        },
        "itemReceiptLineDetail": {
          "xml": {
            "name": "ItemReceiptLineDetail"
          },
          "$ref": "#/definitions/ItemReceiptLineDetail"
        },
        "journalEntryLineDetail": {
          "xml": {
            "name": "JournalEntryLineDetail"
          },
          "$ref": "#/definitions/JournalEntryLineDetail"
        },
        "groupLineDetail": {
          "xml": {
            "name": "GroupLineDetail"
          },
          "$ref": "#/definitions/GroupLineDetail"
        },
        "subTotalLineDetail": {
          "xml": {
            "name": "SubTotalLineDetail"
          },
          "$ref": "#/definitions/SubTotalLineDetail"
        },
        "itemAdjustmentLineDetail": {
          "xml": {
            "name": "ItemAdjustmentLineDetail"
          },
          "$ref": "#/definitions/ItemAdjustmentLineDetail"
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "lineEx": {
          "xml": {
            "name": "LineEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "projectRef": {
          "xml": {
            "name": "ProjectRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "tdslineDetail": {
          "$ref": "#/definitions/TDSLineDetail"
        }
      }
    },
    "LinkedTxn": {
      "type": "object",
      "properties": {
        "txnId": {
          "type": "string",
          "xml": {
            "name": "TxnId"
          }
        },
        "txnType": {
          "type": "string",
          "xml": {
            "name": "TxnType"
          }
        },
        "txnLineId": {
          "type": "string",
          "xml": {
            "name": "TxnLineId"
          }
        }
      }
    },
    "MarkupInfo": {
      "type": "object",
      "properties": {
        "percentBased": {
          "type": "boolean",
          "xml": {
            "name": "PercentBased"
          }
        },
        "value": {
          "type": "number",
          "xml": {
            "name": "Value"
          }
        },
        "percent": {
          "type": "number",
          "xml": {
            "name": "Percent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markUpIncomeAccountRef": {
          "xml": {
            "name": "MarkUpIncomeAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "ModificationMetaData": {
      "type": "object",
      "properties": {
        "createdByRef": {
          "xml": {
            "name": "CreatedByRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "CreateTime"
          }
        },
        "lastModifiedByRef": {
          "xml": {
            "name": "LastModifiedByRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "LastUpdatedTime"
          }
        },
        "lastChangedInQB": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "LastChangedInQB"
          }
        },
        "synchronized": {
          "type": "boolean"
        }
      }
    },
    "PaymentLineDetail": {
      "type": "object",
      "required": ["itemRef"],
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "balance": {
          "type": "number",
          "xml": {
            "name": "Balance"
          }
        },
        "homeBalance": {
          "type": "number",
          "xml": {
            "name": "HomeBalance"
          }
        },
        "discount": {
          "xml": {
            "name": "Discount"
          },
          "$ref": "#/definitions/DiscountOverride"
        },
        "paymentLineEx": {
          "xml": {
            "name": "PaymentLineEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "PhysicalAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "line1": {
          "type": "string",
          "xml": {
            "name": "Line1"
          }
        },
        "line2": {
          "type": "string",
          "xml": {
            "name": "Line2"
          }
        },
        "line3": {
          "type": "string",
          "xml": {
            "name": "Line3"
          }
        },
        "line4": {
          "type": "string",
          "xml": {
            "name": "Line4"
          }
        },
        "line5": {
          "type": "string",
          "xml": {
            "name": "Line5"
          }
        },
        "city": {
          "type": "string",
          "xml": {
            "name": "City"
          }
        },
        "country": {
          "type": "string",
          "xml": {
            "name": "Country"
          }
        },
        "countryCode": {
          "type": "string",
          "xml": {
            "name": "CountryCode"
          }
        },
        "county": {
          "type": "string",
          "xml": {
            "name": "County"
          }
        },
        "countrySubDivisionCode": {
          "type": "string",
          "xml": {
            "name": "CountrySubDivisionCode"
          }
        },
        "postalCode": {
          "type": "string",
          "xml": {
            "name": "PostalCode"
          }
        },
        "postalCodeSuffix": {
          "type": "string",
          "xml": {
            "name": "PostalCodeSuffix"
          }
        },
        "lat": {
          "type": "string",
          "xml": {
            "name": "Lat"
          }
        },
        "tag": {
          "type": "string",
          "xml": {
            "name": "Tag"
          }
        },
        "note": {
          "type": "string",
          "xml": {
            "name": "Note"
          }
        },
        "long": {
          "type": "string"
        }
      }
    },
    "PurchaseOrderItemLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "unitPrice": {
          "type": "number",
          "xml": {
            "name": "UnitPrice"
          }
        },
        "ratePercent": {
          "type": "number",
          "xml": {
            "name": "RatePercent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "qty": {
          "type": "number",
          "xml": {
            "name": "Qty"
          }
        },
        "itemAccountRef": {
          "xml": {
            "name": "ItemAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "inventorySiteRef": {
          "xml": {
            "name": "InventorySiteRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxClassificationRef": {
          "xml": {
            "name": "TaxClassificationRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "discountRate": {
          "type": "number",
          "xml": {
            "name": "DiscountRate"
          }
        },
        "discountAmt": {
          "type": "number",
          "xml": {
            "name": "DiscountAmt"
          }
        },
        "deferredRevenue": {
          "type": "boolean",
          "xml": {
            "name": "DeferredRevenue"
          }
        },
        "salesItemLineDetailEx": {
          "xml": {
            "name": "SalesItemLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "manPartNum": {
          "type": "string",
          "xml": {
            "name": "ManPartNum"
          }
        },
        "manuallyClosed": {
          "type": "boolean",
          "xml": {
            "name": "ManuallyClosed"
          }
        },
        "openQty": {
          "type": "number",
          "xml": {
            "name": "OpenQty"
          }
        },
        "purchaseOrderItemLineDetailEx": {
          "xml": {
            "name": "PurchaseOrderItemLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "QBSearchResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "QBSearchResponseBill": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bill"
          }
        }
      }
    },
    "QuickbooksNonprofitDetails": {
      "type": "object",
      "properties": {
        "vendor": {
          "$ref": "#/definitions/Vendor"
        },
        "bills": {
          "$ref": "#/definitions/QBSearchResponseBill"
        }
      }
    },
    "RecurringInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "xml": {
            "name": "Name"
          }
        },
        "recurType": {
          "type": "string",
          "xml": {
            "name": "RecurType"
          }
        },
        "active": {
          "type": "boolean",
          "xml": {
            "name": "Active"
          }
        },
        "scheduleInfo": {
          "xml": {
            "name": "ScheduleInfo"
          },
          "$ref": "#/definitions/RecurringScheduleInfo"
        }
      }
    },
    "RecurringScheduleInfo": {
      "type": "object",
      "properties": {
        "intervalType": {
          "type": "string",
          "xml": {
            "name": "IntervalType"
          }
        },
        "numInterval": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "NumInterval"
          }
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "DayOfMonth"
          }
        },
        "dayOfWeek": {
          "type": "string",
          "xml": {
            "name": "DayOfWeek"
          },
          "enum": [
            "SUNDAY",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY"
          ]
        },
        "weekOfMonth": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "WeekOfMonth"
          }
        },
        "monthOfYear": {
          "type": "string",
          "xml": {
            "name": "MonthOfYear"
          },
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "remindDays": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "RemindDays"
          }
        },
        "daysBefore": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "DaysBefore"
          }
        },
        "maxOccurrences": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "MaxOccurrences"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "StartDate"
          }
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "EndDate"
          }
        },
        "nextDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "NextDate"
          }
        },
        "previousDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "PreviousDate"
          }
        }
      }
    },
    "ReferenceType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "ReimburseLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "unitPrice": {
          "type": "number",
          "xml": {
            "name": "UnitPrice"
          }
        },
        "ratePercent": {
          "type": "number",
          "xml": {
            "name": "RatePercent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "qty": {
          "type": "number",
          "xml": {
            "name": "Qty"
          }
        },
        "itemAccountRef": {
          "xml": {
            "name": "ItemAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "inventorySiteRef": {
          "xml": {
            "name": "InventorySiteRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxClassificationRef": {
          "xml": {
            "name": "TaxClassificationRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "SalesItemLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "unitPrice": {
          "type": "number",
          "xml": {
            "name": "UnitPrice"
          }
        },
        "ratePercent": {
          "type": "number",
          "xml": {
            "name": "RatePercent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "qty": {
          "type": "number",
          "xml": {
            "name": "Qty"
          }
        },
        "itemAccountRef": {
          "xml": {
            "name": "ItemAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "inventorySiteRef": {
          "xml": {
            "name": "InventorySiteRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxClassificationRef": {
          "xml": {
            "name": "TaxClassificationRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "discountRate": {
          "type": "number",
          "xml": {
            "name": "DiscountRate"
          }
        },
        "discountAmt": {
          "type": "number",
          "xml": {
            "name": "DiscountAmt"
          }
        },
        "deferredRevenue": {
          "type": "boolean",
          "xml": {
            "name": "DeferredRevenue"
          }
        },
        "salesItemLineDetailEx": {
          "xml": {
            "name": "SalesItemLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "SalesOrderItemLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "classRef": {
          "xml": {
            "name": "ClassRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "unitPrice": {
          "type": "number",
          "xml": {
            "name": "UnitPrice"
          }
        },
        "ratePercent": {
          "type": "number",
          "xml": {
            "name": "RatePercent"
          }
        },
        "priceLevelRef": {
          "xml": {
            "name": "PriceLevelRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "markupInfo": {
          "xml": {
            "name": "MarkupInfo"
          },
          "$ref": "#/definitions/MarkupInfo"
        },
        "qty": {
          "type": "number",
          "xml": {
            "name": "Qty"
          }
        },
        "itemAccountRef": {
          "xml": {
            "name": "ItemAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "inventorySiteRef": {
          "xml": {
            "name": "InventorySiteRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxClassificationRef": {
          "xml": {
            "name": "TaxClassificationRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "taxInclusiveAmt": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmt"
          }
        },
        "discountRate": {
          "type": "number",
          "xml": {
            "name": "DiscountRate"
          }
        },
        "discountAmt": {
          "type": "number",
          "xml": {
            "name": "DiscountAmt"
          }
        },
        "deferredRevenue": {
          "type": "boolean",
          "xml": {
            "name": "DeferredRevenue"
          }
        },
        "salesItemLineDetailEx": {
          "xml": {
            "name": "SalesItemLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "manuallyClosed": {
          "type": "boolean",
          "xml": {
            "name": "ManuallyClosed"
          }
        },
        "uomref": {
          "$ref": "#/definitions/UOMRef"
        }
      }
    },
    "SubTotalLineDetail": {
      "type": "object",
      "properties": {
        "itemRef": {
          "xml": {
            "name": "ItemRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        }
      }
    },
    "TDSLineDetail": {
      "type": "object",
      "properties": {
        "tdssectionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tdsaccountRef": {
          "$ref": "#/definitions/ReferenceType"
        },
        "tdslineDetailEx": {
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "syncToken": {
          "type": "string",
          "xml": {
            "name": "SyncToken"
          }
        },
        "metaData": {
          "xml": {
            "name": "MetaData"
          },
          "$ref": "#/definitions/ModificationMetaData"
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "attachableRef": {
          "type": "array",
          "xml": {
            "name": "AttachableRef"
          },
          "items": {
            "xml": {
              "name": "AttachableRef"
            },
            "$ref": "#/definitions/AttachableRef"
          }
        },
        "domain": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "DELETED",
            "VOIDED",
            "DRAFT",
            "PENDING",
            "IN_TRANSIT",
            "SYNCHRONIZED",
            "SYNC_ERROR"
          ]
        },
        "sparse": {
          "type": "boolean",
          "xml": {
            "attribute": true
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "Name"
          }
        }
      }
    },
    "TaxLineDetail": {
      "type": "object",
      "properties": {
        "taxRateRef": {
          "xml": {
            "name": "TaxRateRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "percentBased": {
          "type": "boolean",
          "xml": {
            "name": "PercentBased"
          }
        },
        "taxPercent": {
          "type": "number",
          "xml": {
            "name": "TaxPercent"
          }
        },
        "netAmountTaxable": {
          "type": "number",
          "xml": {
            "name": "NetAmountTaxable"
          }
        },
        "taxInclusiveAmount": {
          "type": "number",
          "xml": {
            "name": "TaxInclusiveAmount"
          }
        },
        "overrideDeltaAmount": {
          "type": "number",
          "xml": {
            "name": "OverrideDeltaAmount"
          }
        },
        "serviceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "ServiceDate"
          }
        },
        "taxLineDetailEx": {
          "xml": {
            "name": "TaxLineDetailEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        }
      }
    },
    "TelephoneNumber": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "deviceType": {
          "type": "string",
          "xml": {
            "name": "DeviceType"
          }
        },
        "countryCode": {
          "type": "string",
          "xml": {
            "name": "CountryCode"
          }
        },
        "areaCode": {
          "type": "string",
          "xml": {
            "name": "AreaCode"
          }
        },
        "exchangeCode": {
          "type": "string",
          "xml": {
            "name": "ExchangeCode"
          }
        },
        "extension": {
          "type": "string",
          "xml": {
            "name": "Extension"
          }
        },
        "freeFormNumber": {
          "type": "string",
          "xml": {
            "name": "FreeFormNumber"
          }
        },
        "tag": {
          "type": "string",
          "xml": {
            "name": "Tag"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "TxnApprovalInfo": {
      "type": "object",
      "properties": {
        "approvalStatus": {
          "type": "string",
          "xml": {
            "name": "ApprovalStatus"
          }
        },
        "approvalStatusDetail": {
          "type": "string",
          "xml": {
            "name": "ApprovalStatusDetail"
          }
        },
        "lastChangedByUser": {
          "type": "string",
          "xml": {
            "name": "LastChangedByUser"
          }
        },
        "lastChangedDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "LastChangedDate"
          }
        }
      }
    },
    "TxnTaxDetail": {
      "type": "object",
      "properties": {
        "defaultTaxCodeRef": {
          "xml": {
            "name": "DefaultTaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "txnTaxCodeRef": {
          "xml": {
            "name": "TxnTaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "totalTax": {
          "type": "number",
          "xml": {
            "name": "TotalTax"
          }
        },
        "taxReviewStatus": {
          "type": "string",
          "xml": {
            "name": "TaxReviewStatus"
          },
          "enum": ["NON_AST_TAX", "AST_TAX_OVERRIDE"]
        },
        "taxLine": {
          "type": "array",
          "xml": {
            "name": "TaxLine"
          },
          "items": {
            "xml": {
              "name": "TaxLine"
            },
            "$ref": "#/definitions/Line"
          }
        },
        "useAutomatedSalesTax": {
          "type": "boolean",
          "xml": {
            "name": "UseAutomatedSalesTax"
          }
        }
      }
    },
    "UOMRef": {
      "type": "object",
      "required": ["unit"],
      "properties": {
        "unit": {
          "type": "string",
          "xml": {
            "name": "Unit"
          }
        },
        "uomsetRef": {
          "$ref": "#/definitions/ReferenceType"
        }
      }
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "syncToken": {
          "type": "string",
          "xml": {
            "name": "SyncToken"
          }
        },
        "metaData": {
          "xml": {
            "name": "MetaData"
          },
          "$ref": "#/definitions/ModificationMetaData"
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "attachableRef": {
          "type": "array",
          "xml": {
            "name": "AttachableRef"
          },
          "items": {
            "xml": {
              "name": "AttachableRef"
            },
            "$ref": "#/definitions/AttachableRef"
          }
        },
        "domain": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "DELETED",
            "VOIDED",
            "DRAFT",
            "PENDING",
            "IN_TRANSIT",
            "SYNCHRONIZED",
            "SYNC_ERROR"
          ]
        },
        "sparse": {
          "type": "boolean",
          "xml": {
            "attribute": true
          }
        },
        "intuitId": {
          "type": "string",
          "xml": {
            "name": "IntuitId"
          }
        },
        "organization": {
          "type": "boolean",
          "xml": {
            "name": "Organization"
          }
        },
        "title": {
          "type": "string",
          "xml": {
            "name": "Title"
          }
        },
        "givenName": {
          "type": "string",
          "xml": {
            "name": "GivenName"
          }
        },
        "middleName": {
          "type": "string",
          "xml": {
            "name": "MiddleName"
          }
        },
        "familyName": {
          "type": "string",
          "xml": {
            "name": "FamilyName"
          }
        },
        "suffix": {
          "type": "string",
          "xml": {
            "name": "Suffix"
          }
        },
        "fullyQualifiedName": {
          "type": "string",
          "xml": {
            "name": "FullyQualifiedName"
          }
        },
        "companyName": {
          "type": "string",
          "xml": {
            "name": "CompanyName"
          }
        },
        "displayName": {
          "type": "string",
          "xml": {
            "name": "DisplayName"
          }
        },
        "printOnCheckName": {
          "type": "string",
          "xml": {
            "name": "PrintOnCheckName"
          }
        },
        "userId": {
          "type": "string",
          "xml": {
            "name": "UserId"
          }
        },
        "active": {
          "type": "boolean",
          "xml": {
            "name": "Active"
          }
        },
        "v4IDPseudonym": {
          "type": "string",
          "xml": {
            "name": "V4IDPseudonym"
          }
        },
        "primaryPhone": {
          "xml": {
            "name": "PrimaryPhone"
          },
          "$ref": "#/definitions/TelephoneNumber"
        },
        "alternatePhone": {
          "xml": {
            "name": "AlternatePhone"
          },
          "$ref": "#/definitions/TelephoneNumber"
        },
        "mobile": {
          "xml": {
            "name": "Mobile"
          },
          "$ref": "#/definitions/TelephoneNumber"
        },
        "fax": {
          "xml": {
            "name": "Fax"
          },
          "$ref": "#/definitions/TelephoneNumber"
        },
        "primaryEmailAddr": {
          "xml": {
            "name": "PrimaryEmailAddr"
          },
          "$ref": "#/definitions/EmailAddress"
        },
        "webAddr": {
          "xml": {
            "name": "WebAddr"
          },
          "$ref": "#/definitions/WebSiteAddress"
        },
        "otherContactInfo": {
          "type": "array",
          "xml": {
            "name": "OtherContactInfo"
          },
          "items": {
            "xml": {
              "name": "OtherContactInfo"
            },
            "$ref": "#/definitions/ContactInfo"
          }
        },
        "defaultTaxCodeRef": {
          "xml": {
            "name": "DefaultTaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "contactName": {
          "type": "string",
          "xml": {
            "name": "ContactName"
          }
        },
        "altContactName": {
          "type": "string",
          "xml": {
            "name": "AltContactName"
          }
        },
        "notes": {
          "type": "string",
          "xml": {
            "name": "Notes"
          }
        },
        "billAddr": {
          "xml": {
            "name": "BillAddr"
          },
          "$ref": "#/definitions/PhysicalAddress"
        },
        "shipAddr": {
          "xml": {
            "name": "ShipAddr"
          },
          "$ref": "#/definitions/PhysicalAddress"
        },
        "otherAddr": {
          "type": "array",
          "xml": {
            "name": "OtherAddr"
          },
          "items": {
            "xml": {
              "name": "OtherAddr"
            },
            "$ref": "#/definitions/PhysicalAddress"
          }
        },
        "taxCountry": {
          "type": "string",
          "xml": {
            "name": "TaxCountry"
          }
        },
        "taxIdentifier": {
          "type": "string",
          "xml": {
            "name": "TaxIdentifier"
          }
        },
        "taxIdEffectiveDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "TaxIdEffectiveDate"
          }
        },
        "businessNumber": {
          "type": "string",
          "xml": {
            "name": "BusinessNumber"
          }
        },
        "parentRef": {
          "xml": {
            "name": "ParentRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "vendorTypeRef": {
          "xml": {
            "name": "VendorTypeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "termRef": {
          "xml": {
            "name": "TermRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "prefillAccountRef": {
          "xml": {
            "name": "PrefillAccountRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "balance": {
          "type": "number",
          "xml": {
            "name": "Balance"
          }
        },
        "billRate": {
          "type": "number",
          "xml": {
            "name": "BillRate"
          }
        },
        "openBalanceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "OpenBalanceDate"
          }
        },
        "creditLimit": {
          "type": "number",
          "xml": {
            "name": "CreditLimit"
          }
        },
        "acctNum": {
          "type": "string",
          "xml": {
            "name": "AcctNum"
          }
        },
        "vendor1099": {
          "type": "boolean",
          "xml": {
            "name": "Vendor1099"
          }
        },
        "t4AEligible": {
          "type": "boolean",
          "xml": {
            "name": "T4AEligible"
          }
        },
        "t5018Eligible": {
          "type": "boolean",
          "xml": {
            "name": "T5018Eligible"
          }
        },
        "currencyRef": {
          "xml": {
            "name": "CurrencyRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxReportingBasis": {
          "type": "string",
          "xml": {
            "name": "TaxReportingBasis"
          }
        },
        "vendorEx": {
          "xml": {
            "name": "VendorEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "gstin": {
          "type": "string",
          "xml": {
            "name": "GSTIN"
          }
        },
        "isSubContractor": {
          "type": "boolean",
          "xml": {
            "name": "IsSubContractor"
          }
        },
        "subcontractorType": {
          "type": "string",
          "xml": {
            "name": "SubcontractorType"
          }
        },
        "hasTPAR": {
          "type": "boolean",
          "xml": {
            "name": "HasTPAR"
          }
        },
        "vendorPaymentBankDetail": {
          "xml": {
            "name": "VendorPaymentBankDetail"
          },
          "$ref": "#/definitions/VendorBankAccountDetail"
        },
        "source": {
          "type": "string",
          "xml": {
            "name": "Source"
          }
        },
        "costRate": {
          "type": "number",
          "xml": {
            "name": "CostRate"
          }
        },
        "tdsenabled": {
          "type": "boolean"
        },
        "tdsentityTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tdssectionTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "tdsoverrideThreshold": {
          "type": "boolean"
        },
        "apaccountRef": {
          "$ref": "#/definitions/ReferenceType"
        },
        "gstregistrationType": {
          "type": "string"
        },
        "cisrate": {
          "type": "string"
        }
      }
    },
    "VendorBankAccountDetail": {
      "type": "object",
      "properties": {
        "bankBranchIdentifier": {
          "type": "string",
          "xml": {
            "name": "BankBranchIdentifier"
          }
        },
        "bankAccountNumber": {
          "type": "string",
          "xml": {
            "name": "BankAccountNumber"
          }
        },
        "bankAccountName": {
          "type": "string",
          "xml": {
            "name": "BankAccountName"
          }
        },
        "statementText": {
          "type": "string",
          "xml": {
            "name": "StatementText"
          }
        }
      }
    },
    "WebSiteAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "uri": {
          "type": "string",
          "xml": {
            "name": "URI"
          }
        },
        "tag": {
          "type": "string",
          "xml": {
            "name": "Tag"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "AccountBalance": {
      "type": "object",
      "required": [
        "available",
        "current",
        "isoCurrencyCode",
        "limit",
        "unofficialCurrencyCode"
      ],
      "properties": {
        "available": {
          "type": "number",
          "format": "double",
          "description": "The amount of funds available to be withdrawn from the account, as determined by the financial institution.  For `credit`-type accounts, the `available` balance typically equals the `limit` less the `current` balance, less any pending outflows plus any pending inflows.  For `depository`-type accounts, the `available` balance typically equals the `current` balance less any pending outflows plus any pending inflows. For `depository`-type accounts, the `available` balance does not include the overdraft limit.  For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the `available` balance is the total cash available to withdraw as presented by the institution.  Note that not all institutions calculate the `available`  balance. In the event that `available` balance is unavailable, Plaid will return an `available` balance value of `null`.  Available balance may be cached and is not guaranteed to be up-to-date in realtime unless the value was returned by `/accounts/balance/get`.  If `current` is `null` this field is guaranteed not to be `null`."
        },
        "current": {
          "type": "number",
          "format": "double",
          "description": "The total amount of funds in or owed by the account.  For `credit`-type accounts, a positive balance indicates the amount owed; a negative amount indicates the lender owing the account holder.  For `loan`-type accounts, the current balance is the principal remaining on the loan, except in the case of student loan accounts at Sallie Mae (`ins_116944`). For Sallie Mae student loans, the account's balance includes both principal and any outstanding interest.  For `investment`-type accounts (or `brokerage`-type accounts for API versions 2018-05-22 and earlier), the current balance is the total value of assets as presented by the institution.  Note that balance information may be cached unless the value was returned by `/accounts/balance/get`; if the Item is enabled for Transactions, the balance will be at least as recent as the most recent Transaction update. If you require realtime balance information, use the `available` balance as provided by `/accounts/balance/get`.  When returned by `/accounts/balance/get`, this field may be `null`. When this happens, `available` is guaranteed not to be `null`."
        },
        "limit": {
          "type": "number",
          "format": "double",
          "description": "For `credit`-type accounts, this represents the credit limit.  For `depository`-type accounts, this represents the pre-arranged overdraft limit, which is common for current (checking) accounts in Europe.  In North America, this field is typically only available for `credit`-type accounts."
        },
        "isoCurrencyCode": {
          "type": "string",
          "description": "The ISO-4217 currency code of the balance. Always null if `unofficial_currency_code` is non-null."
        },
        "unofficialCurrencyCode": {
          "type": "string",
          "description": "The unofficial currency code associated with the balance. Always null if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `unofficial_currency_code`s."
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time that the balance for the given account has been updated  This is currently only provided when the `min_last_updated_datetime` is passed when calling `/accounts/balance/get` for `ins_128026` (Capital One)."
        }
      },
      "description": "A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`."
    },
    "AccountBase": {
      "type": "object",
      "required": [
        "accountId",
        "balances",
        "mask",
        "name",
        "officialName",
        "subtype",
        "type"
      ],
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Plaid’s unique identifier for the account. This value will not change unless Plaid can't reconcile the account with the data returned by the financial institution. This may occur, for example, when the name of the account changes. If this happens a new `account_id` will be assigned to the account.  The `account_id` can also change if the `access_token` is deleted and the same credentials that were used to generate that `access_token` are used to generate a new `access_token` on a later date. In that case, the new `account_id` will be different from the old `account_id`.  If an account with a specific `account_id` disappears instead of changing, the account is likely closed. Closed accounts are not returned by the Plaid API.  Like all Plaid identifiers, the `account_id` is case sensitive."
        },
        "balances": {
          "$ref": "#/definitions/AccountBalance"
        },
        "mask": {
          "type": "string",
          "description": "The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user."
        },
        "name": {
          "type": "string",
          "description": "The name of the account, either assigned by the user or by the financial institution itself"
        },
        "officialName": {
          "type": "string",
          "description": "The official name of the account as given by the financial institution"
        },
        "type": {
          "type": "string",
          "enum": [
            "INVESTMENT",
            "CREDIT",
            "DEPOSITORY",
            "LOAN",
            "BROKERAGE",
            "OTHER",
            "ENUM_UNKNOWN"
          ]
        },
        "subtype": {
          "type": "string",
          "enum": [
            "_401A",
            "_401K",
            "_403B",
            "_457B",
            "_529",
            "BROKERAGE",
            "CASH_ISA",
            "CRYPTO_EXCHANGE",
            "EDUCATION_SAVINGS_ACCOUNT",
            "EBT",
            "FIXED_ANNUITY",
            "GIC",
            "HEALTH_REIMBURSEMENT_ARRANGEMENT",
            "HSA",
            "ISA",
            "IRA",
            "LIF",
            "LIFE_INSURANCE",
            "LIRA",
            "LRIF",
            "LRSP",
            "NON_CUSTODIAL_WALLET",
            "NON_TAXABLE_BROKERAGE_ACCOUNT",
            "OTHER",
            "OTHER_INSURANCE",
            "OTHER_ANNUITY",
            "PRIF",
            "RDSP",
            "RESP",
            "RLIF",
            "RRIF",
            "PENSION",
            "PROFIT_SHARING_PLAN",
            "RETIREMENT",
            "ROTH",
            "ROTH_401K",
            "RRSP",
            "SEP_IRA",
            "SIMPLE_IRA",
            "SIPP",
            "STOCK_PLAN",
            "THRIFT_SAVINGS_PLAN",
            "TFSA",
            "TRUST",
            "UGMA",
            "UTMA",
            "VARIABLE_ANNUITY",
            "CREDIT_CARD",
            "PAYPAL",
            "CD",
            "CHECKING",
            "SAVINGS",
            "MONEY_MARKET",
            "PREPAID",
            "AUTO",
            "BUSINESS",
            "COMMERCIAL",
            "CONSTRUCTION",
            "CONSUMER",
            "HOME_EQUITY",
            "LOAN",
            "MORTGAGE",
            "OVERDRAFT",
            "LINE_OF_CREDIT",
            "STUDENT",
            "CASH_MANAGEMENT",
            "KEOGH",
            "MUTUAL_FUND",
            "RECURRING",
            "REWARDS",
            "SAFE_DEPOSIT",
            "SARSEP",
            "PAYROLL",
            "NULL",
            "ENUM_UNKNOWN"
          ]
        },
        "verificationStatus": {
          "type": "string",
          "description": "The current verification status of an Auth Item initiated through Automated or Manual micro-deposits.  Returned for Auth Items only.  `pending_automatic_verification`: The Item is pending automatic verification  `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the two amounts.  `automatically_verified`: The Item has successfully been automatically verified   `manually_verified`: The Item has successfully been manually verified  `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.  `verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.   ",
          "enum": [
            "AUTOMATICALLY_VERIFIED",
            "PENDING_AUTOMATIC_VERIFICATION",
            "PENDING_MANUAL_VERIFICATION",
            "MANUALLY_VERIFIED",
            "VERIFICATION_EXPIRED",
            "VERIFICATION_FAILED"
          ]
        }
      },
      "description": "A single account at a financial institution."
    },
    "AuthMetadata": {
      "type": "object",
      "required": ["supportedMethods"],
      "properties": {
        "supportedMethods": {
          "$ref": "#/definitions/AuthSupportedMethods"
        }
      },
      "description": "Metadata that captures information about the Auth features of an institution."
    },
    "AuthSupportedMethods": {
      "type": "object",
      "required": ["automatedMicroDeposits", "instantAuth", "instantMatch"],
      "properties": {
        "instantAuth": {
          "type": "boolean",
          "description": "Indicates if instant auth is supported."
        },
        "instantMatch": {
          "type": "boolean",
          "description": "Indicates if instant match is supported."
        },
        "automatedMicroDeposits": {
          "type": "boolean",
          "description": "Indicates if automated microdeposits are supported."
        }
      },
      "description": "Metadata specifically related to which auth methods an institution supports."
    },
    "BankAccountDetail": {
      "type": "object",
      "properties": {
        "bankNumber": {
          "$ref": "#/definitions/NumbersACH"
        },
        "bankAccount": {
          "$ref": "#/definitions/AccountBase"
        },
        "institution": {
          "$ref": "#/definitions/Institution"
        }
      }
    },
    "HealthIncident": {
      "type": "object",
      "required": ["incidentUpdates", "startDate", "title"],
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`."
        },
        "title": {
          "type": "string",
          "description": "The title of the incident"
        },
        "incidentUpdates": {
          "type": "array",
          "description": "Updates on the health incident.",
          "items": {
            "$ref": "#/definitions/IncidentUpdate"
          }
        }
      },
      "description": "A status health incident"
    },
    "IncidentUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The content of the update."
        },
        "status": {
          "type": "string",
          "description": "The status of the incident.",
          "enum": [
            "INVESTIGATING",
            "IDENTIFIED",
            "SCHEDULED",
            "RESOLVED",
            "UNKNOWN"
          ]
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`."
        }
      },
      "description": "An update on the health incident"
    },
    "Institution": {
      "type": "object",
      "required": [
        "countryCodes",
        "institutionId",
        "name",
        "oauth",
        "products",
        "routingNumbers"
      ],
      "properties": {
        "institutionId": {
          "type": "string",
          "description": "Unique identifier for the institution"
        },
        "name": {
          "type": "string",
          "description": "The official name of the institution"
        },
        "products": {
          "type": "array",
          "description": "A list of the Plaid products supported by the institution. Note that only institutions that support Instant Auth will return `auth` in the product array; institutions that do not list `auth` may still support other Auth methods such as Instant Match or Automated Micro-deposit Verification. To identify institutions that support those methods, use the `auth_metadata` object. For more details, see [Full Auth coverage](https://plaid.com/docs/auth/coverage/).",
          "items": {
            "type": "string",
            "enum": [
              "ASSETS",
              "AUTH",
              "BALANCE",
              "IDENTITY",
              "INVESTMENTS",
              "LIABILITIES",
              "PAYMENT_INITIATION",
              "IDENTITY_VERIFICATION",
              "TRANSACTIONS",
              "CREDIT_DETAILS",
              "INCOME",
              "INCOME_VERIFICATION",
              "DEPOSIT_SWITCH",
              "STANDING_ORDERS",
              "TRANSFER",
              "EMPLOYMENT",
              "RECURRING_TRANSACTIONS",
              "ENUM_UNKNOWN"
            ]
          }
        },
        "countryCodes": {
          "type": "array",
          "description": "A list of the country codes supported by the institution.",
          "items": {
            "type": "string",
            "enum": [
              "US",
              "GB",
              "ES",
              "NL",
              "FR",
              "IE",
              "CA",
              "DE",
              "IT",
              "PL",
              "DK",
              "NO",
              "SE",
              "EE",
              "LT",
              "LV",
              "ENUM_UNKNOWN"
            ]
          }
        },
        "url": {
          "type": "string",
          "description": "The URL for the institution's website"
        },
        "primaryColor": {
          "type": "string",
          "description": "Hexadecimal representation of the primary color used by the institution"
        },
        "logo": {
          "type": "string",
          "description": "Base64 encoded representation of the institution's logo"
        },
        "routingNumbers": {
          "type": "array",
          "description": "A partial list of routing numbers associated with the institution. This list is provided for the purpose of looking up institutions by routing number. It is not comprehensive and should never be used as a complete list of routing numbers for an institution.",
          "items": {
            "type": "string"
          }
        },
        "oauth": {
          "type": "boolean",
          "description": "Indicates that the institution has a mandatory OAuth login flow. Note that `oauth` may be `false` even for institutions that support OAuth, if the institution is in the process of migrating to OAuth and some active Items still exist that do not use OAuth."
        },
        "status": {
          "$ref": "#/definitions/InstitutionStatus"
        },
        "paymentInitiationMetadata": {
          "$ref": "#/definitions/PaymentInitiationMetadata"
        },
        "authMetadata": {
          "$ref": "#/definitions/AuthMetadata"
        }
      },
      "description": "Details relating to a specific financial institution"
    },
    "InstitutionStatus": {
      "type": "object",
      "properties": {
        "itemLogins": {
          "$ref": "#/definitions/ProductStatus"
        },
        "transactionsUpdates": {
          "$ref": "#/definitions/ProductStatus"
        },
        "auth": {
          "$ref": "#/definitions/ProductStatus"
        },
        "identity": {
          "$ref": "#/definitions/ProductStatus"
        },
        "investmentsUpdates": {
          "$ref": "#/definitions/ProductStatus"
        },
        "liabilitiesUpdates": {
          "$ref": "#/definitions/ProductStatus"
        },
        "liabilities": {
          "$ref": "#/definitions/ProductStatus"
        },
        "investments": {
          "$ref": "#/definitions/ProductStatus"
        },
        "healthIncidents": {
          "type": "array",
          "description": "Details of recent health incidents associated with the institution.",
          "items": {
            "$ref": "#/definitions/HealthIncident"
          }
        }
      },
      "description": "The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution's status, Plaid will return null rather than potentially inaccurate data.  Institution status is accessible in the Dashboard and via the API using the `/institutions/get_by_id` endpoint with the `include_status` option set to true. Note that institution status is not available in the Sandbox environment. "
    },
    "PaymentInitiationMetadata": {
      "type": "object",
      "required": [
        "maximumPaymentAmount",
        "standingOrderMetadata",
        "supportsInternationalPayments",
        "supportsRefundDetails",
        "supportsSepaInstant"
      ],
      "properties": {
        "supportsInternationalPayments": {
          "type": "boolean",
          "description": "Indicates whether the institution supports payments from a different country."
        },
        "supportsSepaInstant": {
          "type": "boolean",
          "description": "Indicates whether the institution supports SEPA Instant payments."
        },
        "maximumPaymentAmount": {
          "type": "object",
          "description": "A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.  Example: `{\"GBP\": \"10000\"}` ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "supportsRefundDetails": {
          "type": "boolean",
          "description": "Indicates whether the institution supports returning refund details when initiating a payment."
        },
        "standingOrderMetadata": {
          "$ref": "#/definitions/PaymentInitiationStandingOrderMetadata"
        }
      },
      "description": "Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests."
    },
    "PaymentInitiationStandingOrderMetadata": {
      "type": "object",
      "required": [
        "supportsStandingOrderEndDate",
        "supportsStandingOrderNegativeExecutionDays",
        "validStandingOrderIntervals"
      ],
      "properties": {
        "supportsStandingOrderEndDate": {
          "type": "boolean",
          "description": "Indicates whether the institution supports closed-ended standing orders by providing an end date."
        },
        "supportsStandingOrderNegativeExecutionDays": {
          "type": "boolean",
          "description": "This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month."
        },
        "validStandingOrderIntervals": {
          "type": "array",
          "description": "A list of the valid standing order intervals supported by the institution.",
          "items": {
            "type": "string",
            "enum": ["WEEKLY", "MONTHLY", "ENUM_UNKNOWN"]
          }
        }
      },
      "description": "Metadata specifically related to valid Payment Initiation standing order configurations for the institution."
    },
    "ProductStatus": {
      "type": "object",
      "required": ["breakdown", "lastStatusChange", "status"],
      "properties": {
        "status": {
          "type": "string",
          "description": "This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.  `HEALTHY`: the majority of requests are successful `DEGRADED`: only some requests are successful `DOWN`: all requests are failing",
          "enum": ["HEALTHY", "DEGRADED", "DOWN"]
        },
        "lastStatusChange": {
          "type": "string",
          "format": "date-time",
          "description": "[ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution. "
        },
        "breakdown": {
          "$ref": "#/definitions/ProductStatusBreakdown"
        }
      },
      "description": "A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object."
    },
    "ProductStatusBreakdown": {
      "type": "object",
      "required": ["errorInstitution", "errorPlaid", "success"],
      "properties": {
        "success": {
          "type": "number",
          "format": "double",
          "description": "The percentage of login attempts that are successful, expressed as a decimal."
        },
        "errorPlaid": {
          "type": "number",
          "format": "double",
          "description": "The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal. "
        },
        "errorInstitution": {
          "type": "number",
          "format": "double",
          "description": "The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal."
        },
        "refreshInterval": {
          "type": "string",
          "description": "The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.",
          "enum": ["NORMAL", "DELAYED", "STOPPED"]
        }
      },
      "description": "A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1. The time range used for calculating the breakdown may range from the most recent few minutes to the past six hours. In general, smaller institutions will show status that was calculated over a longer period of time. For Investment updates, which are refreshed less frequently, the period assessed may be 24 hours or more. For more details, see [Institution status details](https://plaid.com/docs/account/activity/#institution-status-details)."
    },
    "BulkNonprofitUserUpdate": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitUser"
          }
        },
        "sendEmail": {
          "type": "boolean"
        }
      }
    },
    "FoundationNonprofitActivity": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationNotes"
          }
        },
        "completedTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "submissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantSubmissionStatusChange"
          }
        },
        "threads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasThreadGroup"
          }
        }
      }
    },
    "GrantSubmissionStatusChange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "changeType": {
          "type": "string",
          "enum": ["STAGE"]
        },
        "previousData": {
          "$ref": "#/definitions/StatusChangeData"
        },
        "newData": {
          "$ref": "#/definitions/StatusChangeData"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "createdByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "NylasFolder": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NylasLabel": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        }
      }
    },
    "NylasParticipant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "NylasThread": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "firstMessageTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "folders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasFolder"
          }
        },
        "hasAttachments": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "lastMessageReceivedTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "lastMessageSentTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "lastMessageTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "object": {
          "type": "string"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "snippet": {
          "type": "string"
        },
        "starred": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "unread": {
          "type": "boolean"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasLabel"
          }
        },
        "draftIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "messageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NylasThreadGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "threadData": {
          "$ref": "#/definitions/NylasThread"
        },
        "lastMessageTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StatusChangeData": {
      "type": "object",
      "properties": {
        "stage": {
          "type": "string"
        }
      }
    },
    "PostmarkMessage": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "messageStream": {
          "type": "string"
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostmarkRecipient"
          }
        },
        "cc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostmarkRecipient"
          }
        },
        "bcc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostmarkRecipient"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "receivedAt": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "trackOpens": {
          "type": "boolean"
        },
        "trackLinks": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sandboxed": {
          "type": "boolean"
        },
        "textBody": {
          "type": "string"
        },
        "htmlBody": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "messageEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostmarkMessageEvent"
          }
        }
      }
    },
    "PostmarkMessageEvent": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "receivedAt": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/PostmarkMessageEventDetails"
        }
      }
    },
    "PostmarkMessageEventDetails": {
      "type": "object",
      "properties": {
        "deliveryMessage": {
          "type": "string"
        },
        "destinationServer": {
          "type": "string"
        },
        "destinationIp": {
          "type": "string"
        }
      }
    },
    "PostmarkOutboundSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostmarkMessage"
          }
        }
      }
    },
    "PostmarkRecipient": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "HTMLRequest": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string"
        },
        "documentHtmls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubmissionRequest": {
      "type": "object",
      "properties": {
        "htmlRequest": {
          "type": "string"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "boardDocumentId": {
          "type": "string",
          "format": "uuid"
        },
        "formIndex": {
          "type": "integer",
          "format": "int32"
        },
        "merged": {
          "type": "boolean"
        },
        "moveSubmissionToBottom": {
          "type": "boolean"
        }
      }
    },
    "GrantTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "templateName": {
          "type": "string"
        },
        "templateType": {
          "type": "string",
          "enum": ["SYSTEM", "USER"]
        },
        "formatType": {
          "type": "string",
          "enum": ["GRANT_FORM", "ELIGIBILITY"]
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "BulkActionRequest": {
      "type": "object",
      "properties": {
        "submissionIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "bulkCreatePaymentRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkCreatePaymentRequest"
          }
        },
        "bulkCreateReportRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkCreateReportRequest"
          }
        },
        "bulkCreateReminderRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkCreateReminderRequest"
          }
        }
      }
    },
    "BulkCreatePaymentRequest": {
      "type": "object",
      "properties": {
        "assigneeId": {
          "type": "string",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string",
          "enum": ["ACH", "CHECK", "WIRE", "STOCK", "CREDIT_CARD"]
        },
        "status": {
          "type": "string",
          "enum": ["NOT_STARTED", "CONTINGENT", "SENT", "ISSUED", "CLEARED"]
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "budgetCategory": {
          "type": "string"
        },
        "contingencies": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "BulkCreateReminderRequest": {
      "type": "object",
      "properties": {
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "assigneeId": {
          "type": "string",
          "format": "uuid"
        },
        "reminderDescription": {
          "type": "string"
        }
      }
    },
    "BulkCreateReportRequest": {
      "type": "object",
      "properties": {
        "reportId": {
          "type": "string",
          "format": "uuid"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "viewer": {
          "type": "string",
          "format": "uuid"
        },
        "submissionGranteePairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmissionGranteePair"
          }
        }
      }
    },
    "SubmissionGranteePair": {
      "type": "object",
      "properties": {
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitUser": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "GrantSubmissionSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "queryText": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "formProposalIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "foundationOwners": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "stages": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "assignedToMe": {
          "type": "string",
          "format": "uuid"
        },
        "assignees": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "watchers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "movableStages": {
          "type": "boolean"
        },
        "allPipelines": {
          "type": "boolean"
        }
      }
    },
    "SubmissionComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "visibility": {
          "type": "string",
          "enum": ["INTERNAL", "EXTERNAL"]
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "createdByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "updatedByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "createdByUser": {
          "$ref": "#/definitions/UserDetails"
        },
        "updatedByUser": {
          "$ref": "#/definitions/UserDetails"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "ReviewEntity": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/FormItem"
        },
        "reviewResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserReviewResponse"
          }
        }
      }
    },
    "ReviewScores": {
      "type": "object",
      "properties": {
        "reviewEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewEntity"
          }
        }
      }
    },
    "UserReviewResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "submission": {
          "$ref": "#/definitions/FormComponentSubmission"
        },
        "user": {
          "$ref": "#/definitions/FoundationUser"
        }
      }
    },
    "BulkDownloadRequest": {
      "type": "object",
      "properties": {
        "submissionIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "mergedFiles": {
          "type": "boolean"
        },
        "formIndex": {
          "type": "integer",
          "format": "int32"
        },
        "includeInternalReviewTasks": {
          "type": "boolean"
        },
        "includeExternalReviewTasks": {
          "type": "boolean"
        },
        "inlineImages": {
          "type": "boolean"
        }
      }
    },
    "GrantProposalSubmissionDeltaResponse": {
      "type": "object",
      "properties": {
        "stage": {
          "type": "string"
        },
        "oldResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "deltaResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItemResponseEntity"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "createdByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "createdByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        }
      }
    },
    "GrantSubmissionChange": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["STAGE_CHANGE", "PROPOSAL_UPDATE"]
        },
        "statusChange": {
          "$ref": "#/definitions/GrantSubmissionStatusChange"
        },
        "response": {
          "$ref": "#/definitions/GrantProposalSubmissionDeltaResponse"
        }
      }
    },
    "SubmissionTasks": {
      "type": "object",
      "properties": {
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "ManualGrantLog": {
      "type": "object",
      "properties": {
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "formProposalId": {
          "type": "string",
          "format": "uuid"
        },
        "grantProposalSubmission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        },
        "grantPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantPayment"
          }
        }
      }
    },
    "GrantProposalSubmissionReminder": {
      "type": "object",
      "properties": {
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitUserId": {
          "type": "string",
          "format": "uuid"
        },
        "customEmailTemplate": {
          "$ref": "#/definitions/CustomEmailTemplate"
        }
      }
    },
    "NonprofitGrantRefereeStatus": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "taskStatus": {
          "type": "string",
          "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EntitySuggestionResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/SuggestionResponseSource"
        },
        "answerText": {
          "type": "string"
        },
        "similarityScore": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseEntitySuggestion": {
      "type": "object",
      "properties": {
        "formItemResponseEntity": {
          "$ref": "#/definitions/FormItemResponseEntity"
        },
        "suggestionResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySuggestionResponse"
          }
        }
      }
    },
    "SubmissionSuggestionResponses": {
      "type": "object",
      "properties": {
        "responseEntitySuggestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseEntitySuggestion"
          }
        }
      }
    },
    "SuggestionResponseSource": {
      "type": "object",
      "properties": {
        "sourceType": {
          "type": "string",
          "enum": ["HISTORICAL_SUBMISSION", "PDF"]
        },
        "sourceResponse": {
          "$ref": "#/definitions/FormItemResponseEntity"
        }
      }
    },
    "QuestionAnswerPair": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "SuggestedResponsesRequest": {
      "type": "object",
      "properties": {
        "includeSubmissions": {
          "type": "boolean"
        },
        "questionAnswerResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionAnswerPair"
          }
        }
      }
    },
    "MailChimpAuthUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "MailChimpAddress": {
      "type": "object",
      "properties": {
        "address2": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "MailChimpCampaign": {
      "type": "object",
      "properties": {
        "from_name": {
          "type": "string"
        },
        "from_email": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      }
    },
    "MailChimpList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/MailChimpAddress"
        },
        "permission_reminder": {
          "type": "string"
        },
        "campaign_defaults": {
          "$ref": "#/definitions/MailChimpCampaign"
        },
        "email_type_option": {
          "type": "boolean"
        }
      }
    },
    "NonprofitCreateRequest": {
      "type": "object",
      "properties": {
        "legalName": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": ["ORGANIZATION", "INDIVIDUAL"]
        },
        "hasFiscalSponsor": {
          "type": "boolean"
        },
        "fiscalSponsor": {
          "$ref": "#/definitions/FiscalSponsor"
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "recipient": {
          "$ref": "#/definitions/NotificationUser"
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "NONPROFIT_METADATA_UPDATED",
            "TASK_COMMENT_MENTIONED",
            "TASK_CREATED",
            "TASK_VIEWER_CHANGED",
            "TASK_COMMENT_ADDED",
            "TASK_ASSIGNEE_CHANGED",
            "TASK_STATUS_CHANGED",
            "TASK_DEADLINE_CHANGED",
            "TASK_REMINDER",
            "SUBMISSION_CREATED",
            "SUBMISSION_STATUS_CHANGED",
            "SUBMISSION_COMMENT_ADDED",
            "SUBMISSION_COMMENT_MENTIONED",
            "SUBMISSION_ASSIGNEE_CHANGED",
            "SUBMISSION_WATCHER_CHANGED",
            "SUBMISSION_DEADLINE_CHANGED",
            "SUBMISSION_PROPOSAL_CHANGED",
            "SUBMISSION_ALL_TASKS_COMPLETED",
            "TASK_DEADLINE_UPCOMING",
            "SUBMISSION_DEADLINE_UPCOMING",
            "PAYMENT_DEADLINE_UPCOMING",
            "UPDATE_NONPROFIT_SETTINGS"
          ]
        },
        "content": {
          "$ref": "#/definitions/NotificationContent"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "viewed": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NotificationContent": {
      "type": "object",
      "properties": {
        "actionUser": {
          "type": "string",
          "format": "uuid"
        },
        "actionOrg": {
          "type": "string",
          "format": "uuid"
        },
        "notificationOrgType": {
          "type": "string",
          "enum": ["NONPROFIT", "FOUNDATION"]
        },
        "prevStage": {
          "type": "string"
        },
        "currStage": {
          "type": "string"
        },
        "prevStatus": {
          "type": "string",
          "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
        },
        "currStatus": {
          "type": "string",
          "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "paymentId": {
          "type": "string",
          "format": "uuid"
        },
        "prevMetadata": {
          "$ref": "#/definitions/NonprofitMetadata"
        },
        "currMetadata": {
          "$ref": "#/definitions/NonprofitMetadata"
        },
        "foundationActionUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "nonprofitActionUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "foundationActionOrg": {
          "$ref": "#/definitions/Foundation"
        },
        "nonprofitActionOrg": {
          "$ref": "#/definitions/Nonprofit"
        },
        "task": {
          "$ref": "#/definitions/Task"
        },
        "submission": {
          "$ref": "#/definitions/GrantProposalSubmission"
        }
      }
    },
    "NotificationResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "unviewedCount": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        }
      }
    },
    "NotificationUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "orgId": {
          "type": "string",
          "format": "uuid"
        },
        "orgType": {
          "type": "string",
          "enum": ["NONPROFIT", "FOUNDATION"]
        },
        "foundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "nonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        }
      }
    },
    "NotificationQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "allNotifications": {
          "type": "boolean"
        }
      }
    },
    "NylasFile": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        }
      }
    },
    "NylasMessage": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "bcc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "body": {
          "type": "string"
        },
        "cc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasFile"
          }
        },
        "folder": {
          "$ref": "#/definitions/NylasFolder"
        },
        "from": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "replyTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "snippet": {
          "type": "string"
        },
        "starred": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "threadId": {
          "type": "string"
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasParticipant"
          }
        },
        "unread": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NylasLabel"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NylasLoginURL": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "NylasFileRequest": {
      "type": "object",
      "properties": {
        "threadId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "fileId": {
          "type": "string"
        }
      }
    },
    "PlaidLinkTokenResponse": {
      "type": "object",
      "properties": {
        "linkToken": {
          "type": "string"
        }
      }
    },
    "PlaidTokenExchangeResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        }
      }
    },
    "PlaidTokenExchangeRequest": {
      "type": "object",
      "properties": {
        "publicToken": {
          "type": "string"
        }
      }
    },
    "QuickbooksLoginURL": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "QuickbooksLoginRequest": {
      "type": "object",
      "properties": {
        "redirectURI": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "xml": {
            "name": "Id"
          }
        },
        "syncToken": {
          "type": "string",
          "xml": {
            "name": "SyncToken"
          }
        },
        "metaData": {
          "xml": {
            "name": "MetaData"
          },
          "$ref": "#/definitions/ModificationMetaData"
        },
        "customField": {
          "type": "array",
          "xml": {
            "name": "CustomField"
          },
          "items": {
            "xml": {
              "name": "CustomField"
            },
            "$ref": "#/definitions/CustomField"
          }
        },
        "attachableRef": {
          "type": "array",
          "xml": {
            "name": "AttachableRef"
          },
          "items": {
            "xml": {
              "name": "AttachableRef"
            },
            "$ref": "#/definitions/AttachableRef"
          }
        },
        "domain": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "DELETED",
            "VOIDED",
            "DRAFT",
            "PENDING",
            "IN_TRANSIT",
            "SYNCHRONIZED",
            "SYNC_ERROR"
          ]
        },
        "sparse": {
          "type": "boolean",
          "xml": {
            "attribute": true
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "Name"
          }
        },
        "subAccount": {
          "type": "boolean",
          "xml": {
            "name": "SubAccount"
          }
        },
        "parentRef": {
          "xml": {
            "name": "ParentRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "description": {
          "type": "string",
          "xml": {
            "name": "Description"
          }
        },
        "fullyQualifiedName": {
          "type": "string",
          "xml": {
            "name": "FullyQualifiedName"
          }
        },
        "accountAlias": {
          "type": "string",
          "xml": {
            "name": "AccountAlias"
          }
        },
        "txnLocationType": {
          "type": "string",
          "xml": {
            "name": "TxnLocationType"
          }
        },
        "active": {
          "type": "boolean",
          "xml": {
            "name": "Active"
          }
        },
        "classification": {
          "type": "string",
          "xml": {
            "name": "Classification"
          },
          "enum": ["ASSET", "EQUITY", "EXPENSE", "LIABILITY", "REVENUE"]
        },
        "accountType": {
          "type": "string",
          "xml": {
            "name": "AccountType"
          },
          "enum": [
            "BANK",
            "ACCOUNTS_RECEIVABLE",
            "OTHER_CURRENT_ASSET",
            "FIXED_ASSET",
            "OTHER_ASSET",
            "ACCOUNTS_PAYABLE",
            "CREDIT_CARD",
            "OTHER_CURRENT_LIABILITY",
            "LONG_TERM_LIABILITY",
            "EQUITY",
            "INCOME",
            "COST_OF_GOODS_SOLD",
            "EXPENSE",
            "OTHER_INCOME",
            "OTHER_EXPENSE",
            "NON_POSTING"
          ]
        },
        "accountSubType": {
          "type": "string",
          "xml": {
            "name": "AccountSubType"
          }
        },
        "accountPurposes": {
          "type": "array",
          "xml": {
            "name": "AccountPurposes"
          },
          "items": {
            "xml": {
              "name": "AccountPurposes"
            },
            "$ref": "#/definitions/ReferenceType"
          }
        },
        "acctNum": {
          "type": "string",
          "xml": {
            "name": "AcctNum"
          }
        },
        "acctNumExtn": {
          "type": "string",
          "xml": {
            "name": "AcctNumExtn"
          }
        },
        "bankNum": {
          "type": "string",
          "xml": {
            "name": "BankNum"
          }
        },
        "openingBalance": {
          "type": "number",
          "xml": {
            "name": "OpeningBalance"
          }
        },
        "openingBalanceDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "OpeningBalanceDate"
          }
        },
        "currentBalance": {
          "type": "number",
          "xml": {
            "name": "CurrentBalance"
          }
        },
        "currentBalanceWithSubAccounts": {
          "type": "number",
          "xml": {
            "name": "CurrentBalanceWithSubAccounts"
          }
        },
        "currencyRef": {
          "xml": {
            "name": "CurrencyRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "taxAccount": {
          "type": "boolean",
          "xml": {
            "name": "TaxAccount"
          }
        },
        "taxCodeRef": {
          "xml": {
            "name": "TaxCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "onlineBankingEnabled": {
          "type": "boolean",
          "xml": {
            "name": "OnlineBankingEnabled"
          }
        },
        "journalCodeRef": {
          "xml": {
            "name": "JournalCodeRef"
          },
          "$ref": "#/definitions/ReferenceType"
        },
        "accountEx": {
          "xml": {
            "name": "AccountEx"
          },
          "$ref": "#/definitions/IntuitAnyType"
        },
        "finame": {
          "type": "string"
        }
      }
    },
    "QBSearchResponseAccount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "QBBillSearchRequest": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "vendorId": {
          "type": "string"
        },
        "metadataLastUpdatedTime": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "QBSearchResponseVendor": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vendor"
          }
        }
      }
    },
    "QBVendorSearchRequest": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "Report": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormItem"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "submissionReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportSubmission"
          }
        },
        "completedReports": {
          "type": "integer",
          "format": "int32"
        },
        "pendingReports": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportSubmission": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/Task"
        },
        "taskSubmission": {
          "$ref": "#/definitions/TaskSubmission"
        }
      }
    },
    "SubmissionEntity": {
      "type": "object",
      "properties": {
        "component": {
          "$ref": "#/definitions/FormItem"
        },
        "submissionResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmissionResponse"
          }
        }
      }
    },
    "SubmissionResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "submission": {
          "$ref": "#/definitions/FormComponentSubmission"
        },
        "nonprofit": {
          "$ref": "#/definitions/Nonprofit"
        },
        "foundation": {
          "$ref": "#/definitions/Foundation"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PresignedFile"
          }
        }
      }
    },
    "CommunicationEmailTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string",
          "format": "uuid"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_by": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "CommunicationPortalEmail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "recipients": {
          "$ref": "#/definitions/CommunicationPortalEmailRecipients"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdById": {
          "type": "string",
          "format": "uuid"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedById": {
          "type": "string",
          "format": "uuid"
        },
        "sentAt": {
          "type": "string",
          "format": "date-time"
        },
        "sentById": {
          "type": "string",
          "format": "uuid"
        },
        "replyTo": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationPortalEmailNonprofit"
          }
        },
        "tokens": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "CommunicationPortalEmailNonprofit": {
      "type": "object",
      "properties": {
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "selectUserIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "CommunicationPortalEmailRecipients": {
      "type": "object",
      "properties": {
        "to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bcc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommunicationPortalGetFoundationEmailsResponse": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationPortalEmail"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CommunicationPortalGetFoundationEmailsRequest": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["DRAFT", "SENT"]
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CommunicationPortalGetFoundationEmailResponse": {
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/CommunicationPortalEmail"
        }
      }
    },
    "DocumentItemResponse": {
      "type": "object",
      "properties": {
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "documentItem": {
          "$ref": "#/definitions/DocumentItem"
        },
        "response": {
          "type": "string"
        }
      }
    },
    "TaskWithSubmission": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/Task"
        },
        "taskSubmission": {
          "$ref": "#/definitions/TaskSubmission"
        },
        "foundationNonprofitMetadata": {
          "$ref": "#/definitions/FoundationNonprofitMetadata"
        },
        "crmFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationCRMField"
          }
        },
        "crmConfigurationFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CRMConfigurationField"
          }
        },
        "foundationFieldResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentItemResponse"
          }
        }
      }
    },
    "SalesforceLoginURL": {
      "type": "object",
      "properties": {
        "loginURL": {
          "type": "string"
        }
      }
    },
    "SalesforceLoginRequest": {
      "type": "object",
      "properties": {
        "redirectURI": {
          "type": "string"
        }
      }
    },
    "FoundationSearchResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundationSearchResponseEntity"
          }
        }
      }
    },
    "FoundationSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "queryText": {
          "type": "string"
        },
        "searchPeople": {
          "type": "boolean"
        },
        "searchSubmissions": {
          "type": "boolean"
        }
      }
    },
    "NonprofitSearchEntity": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": ["EVERY", "PROPUBLICA", "TEMELIO"]
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "hasFiscalSponsor": {
          "type": "boolean"
        },
        "fiscalSponsorEIN": {
          "type": "string"
        },
        "imageURL": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nteeCode": {
          "type": "string"
        },
        "nteeCodeDescription": {
          "type": "string"
        },
        "legalStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "legalStatusDescription": {
          "type": "string"
        }
      }
    },
    "NonprofitSearchResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitSearchEntity"
          }
        }
      }
    },
    "NonprofitSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "queryText": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "fiscalEIN": {
          "type": "string"
        }
      }
    },
    "UniversalSearchDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "foundationId": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "NONPROFIT",
            "SUBMISSION",
            "TASK",
            "ADDITIONAL_CONTACT",
            "NONPROFIT_USER",
            "NOTES",
            "TASK_COMMENT",
            "SUBMISSION_COMMENT",
            "FILE",
            "DONOR_ENTITY",
            "DONOR_ACTIVITY"
          ]
        },
        "alternativeText": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "nonprofitName": {
          "type": "string"
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "taskName": {
          "type": "string"
        },
        "submissionId": {
          "type": "string",
          "format": "uuid"
        },
        "submissionName": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "updatedUser": {
          "type": "string"
        },
        "fileId": {
          "type": "string",
          "format": "uuid"
        },
        "donorEntityId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "UniversalSearchResponse": {
      "type": "object",
      "properties": {
        "hits": {
          "type": "integer",
          "format": "int32"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UniversalSearchDocument"
          }
        }
      }
    },
    "UniversalSearchQuery": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "numResults": {
          "type": "integer",
          "format": "int32"
        },
        "typeFilterSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "NONPROFIT",
              "SUBMISSION",
              "TASK",
              "ADDITIONAL_CONTACT",
              "NONPROFIT_USER",
              "NOTES",
              "TASK_COMMENT",
              "SUBMISSION_COMMENT",
              "FILE",
              "DONOR_ENTITY",
              "DONOR_ACTIVITY"
            ]
          }
        },
        "nonprofitFilterSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "submissionFilterSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "includeAll": {
          "type": "boolean"
        }
      }
    },
    "FoundationSearchBarQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "TaskSearchResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TaskSearchQuery": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "queryText": {
          "type": "string"
        },
        "foundationGranteeOwners": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "nonprofitId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "CRM",
            "GRANT_APPLICATION",
            "REPORT",
            "AGREEMENT_TEMPLATE",
            "DONOR"
          ]
        },
        "sourceIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "sourceTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "CRM",
              "GRANT_APPLICATION",
              "REPORT",
              "AGREEMENT_TEMPLATE",
              "DONOR"
            ]
          }
        },
        "taskStatus": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["DRAFT", "OPEN", "RESOLVED", "CLOSED"]
          }
        },
        "taskType": {
          "type": "string",
          "enum": ["INTERNAL", "EXTERNAL"]
        },
        "systemLabels": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "GRANT_AGREEMENT",
              "PAYMENT",
              "REPORTING",
              "REVIEW",
              "REMINDER",
              "CUSTOM_REMINDER",
              "DOCUSIGN",
              "PLAID_PAYMENT_DETAILS",
              "EXTERNAL",
              "EXTERNAL_REVIEWER",
              "REFEREE",
              "GRANT_UPLOAD",
              "GRANT_TEMPLATE",
              "MULTI_GRANT_DOCUMENT_REVIEW",
              "GRANT_DOCUMENT_REVIEW",
              "GRANT_SIGNATURE_REQUEST",
              "PLAID_PAYMENT_SECURE_PAYMENT_STORAGE",
              "SECURE_PAYMENT_STORAGE",
              "PDF"
            ]
          }
        },
        "assignees": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "neAssignees": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "watchers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "foundationOnlyAssigned": {
          "type": "boolean"
        },
        "granteeOnlyAssigned": {
          "type": "boolean"
        },
        "unassigned": {
          "type": "boolean"
        },
        "additionalSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSourceEntity"
          }
        }
      }
    },
    "TaskComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "taskId": {
          "type": "string",
          "format": "uuid"
        },
        "createdBy": {
          "type": "string",
          "format": "uuid"
        },
        "updatedBy": {
          "type": "string",
          "format": "uuid"
        },
        "visibility": {
          "type": "string",
          "enum": ["INTERNAL", "EXTERNAL"]
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "createdByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "createdByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "updatedByFoundationUser": {
          "$ref": "#/definitions/FoundationUser"
        },
        "updatedByNonprofitUser": {
          "$ref": "#/definitions/NonprofitUser"
        },
        "createdByUser": {
          "$ref": "#/definitions/UserDetails"
        },
        "updatedByUser": {
          "$ref": "#/definitions/UserDetails"
        }
      }
    },
    "BulkTaskSubmissionRequest": {
      "type": "object",
      "properties": {
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "UserBearer": {
      "type": "object",
      "properties": {
        "bearer": {
          "type": "string"
        }
      }
    },
    "GetNonprofitResult": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nonprofit"
          }
        }
      }
    },
    "GetNonprofitMetadataResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitMetadata"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetNonprofitUserResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonprofitUser"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
